{"version":3,"sources":["app/common-library/common-components/master-header.tsx","app/common-library/forms/input-custom.tsx","app/common-library/common-components/modify-entity-page.tsx","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Search.js","app/common-library/common-components/master-body.tsx","app/common-library/common-components/actions-column-formatter.tsx","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/DeleteOutlineOutlined.js","../node_modules/@material-ui/icons/History.js","../node_modules/@material-ui/icons/QueueOutlined.js","../node_modules/@material-ui/icons/AccountCircleOutlined.js","app/pages/post/post-comments.tsx","app/common-library/common-components/entity-crud-page.tsx","../node_modules/react-bootstrap/esm/Spinner.js","app/pages/analyst/analyst.service.tsx","app/pages/analyst/analyst.tsx"],"names":["MasterHeader","title","onSearch","searchModel","initValue","onClickBack","value","intl","useIntl","defaultClassName","className","onClick","formatMessage","id","toUpperCase","initialValues","onSubmit","values","onReset","data","handleSubmit","resetForm","handleBlur","handleChange","setFieldValue","Object","keys","map","key","type","name","undefined","t","style","iconStyle","handleResetForm","src","ToAbsoluteUrl","InputCustom","component","props","Component","formik","useFormikContext","ModifyEntityPage","inputGroups","mode","pl","_subTitle","inputGroup","index","_","isString","Error","JSON","stringify","_className","_inputClassName","inputs","prevKey","inputClassName","RenderForm","input","trimKey","trim","_type","innt","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","React","_default","createElement","d","MasterBody","entities","total","loading","paginationParams","setPaginationParams","onSelectMany","onCreate","selectedEntities","columns","onDeleteMany","isShowId","hideHeaderButton","additionalActionComponent","AdditionalActionComponent","idColumn","useMemo","dataField","text","formatter","cell","row","rowIndex","page","limit","headerClasses","align","masterColumn","isArray","_id","ActionsColumnFormatter","cellContent","onShowDetail","onDelete","onEdit","onLock","onClone","onChangeRole","onGoHistory","e","preventDefault","TickColumnFormatter","color","PostComments","entity","onComments","valueRef","useRef","useState","comments","commentsArr","setCommentArr","useEffect","fontSize","createdBy","fullName","content","TextareaAutosize","rowsMin","aria-label","ref","placeholder","error","current","comment","then","res","catch","err","handleComment","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","EntityCrudPage","onModify","moduleName","code","get","formModel","actions","validation","setEditEntity","homePageUrl","allFormButton","showComment","history","useHistory","initValues","InitValues","entityForEdit","setEntityForEdit","_header","modifyPanels","console","log","enableReinitialize","validationSchema","setSubmitting","validateForm","push","GetHomePage","window","location","pathname","val","_title","panel","goBack","keyss","role","icon","label","to","linkto","length","Spinner","animation","variant","size","confirmationStatus","isMaster","forwardRef","_ref","bsPrefix","children","_ref$as","as","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","_extends","classNames","displayName","API_URL","API_BASE_URL","BULK_API_URL","Create","axios","post","GetAll","queryProps","sortList","paginationProps","params","dataArray","totalAllPost","totalPost","newData","item","percent","Count","Get","optionData","academicYear","GetById","Update","put","Delete","delete","DeleteMany","DisplayTb","useField","field","Analyst","InitMasterProps","getServer","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","deleteEntity","setDeleteEntity","editEntity","createEntity","setSelectedEntities","detailEntity","showDelete","setShowDelete","showEdit","setShowEdit","showCreate","setShowCreate","showDetail","setShowDetail","showDeleteMany","setShowDeleteMany","setPaginationProps","filterProps","setFilterProps","update","setError","add","getAll","deleteMany","deleteFn","headerTitle","SortColumn","startDate","_format","closureDate","finalClosureDate","totalStudent","DisplayPercent","action","formatExtraData","NormalColumn","minWidth","modifyModel","commonInfo","disabled","tableModel","faculty","modifyModel2","table","createForm","panel1","panel2","initSearchModel","dataClassName","header","titleClassName","AcademicYearService","keyField","exact","path","match","DefaultPagination"],"mappings":"uQAsBO,SAASA,EAAT,GAcH,IAb8BC,EAa/B,EAb+BA,MACAC,EAY/B,EAZ+BA,SACAC,EAW/B,EAX+BA,YAW/B,IAV+BC,iBAU/B,MAV2C,GAU3C,EAR+BC,GAQ/B,EAT+BC,MAS/B,EAR+BD,aAS1BE,EAAOC,cACPC,EAAmB,uDAIzB,OACE,eAAC,IAAD,CAAMC,UAAW,qBAAjB,UACE,cAAC,IAAD,CAAYT,MAAOI,EAAc,uBACXM,QAASN,EACTK,UAAW,kDAFA,UAGX,cAAC,IAAD,IACCH,EAAKK,cAAc,CAACC,GAAIZ,IAAQa,iBACzBP,EAAKK,cAAc,CAACC,GAAIZ,IAAQa,gBAC9D,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,cAAeX,EACfY,SAAU,SAAAC,GACRf,GAAYA,EAAS,eAAIe,KAE3BC,QAAS,SAAAC,GACPjB,GAAYA,EAAS,KANzB,SAYG,gBAAEe,EAAF,EAAEA,OAAQG,EAAV,EAAUA,aAAuDC,GAAjE,EAAwBC,WAAxB,EAAoCC,aAApC,EAAkDC,cAAlD,EAAiEH,WAAjE,OACC,uBAAML,SAAUI,EAAcV,UAAU,wBAAxC,UACE,qBAAKA,UAAU,6CAAf,SACGP,EACCsB,OAAOC,KAAKvB,GAAawB,KAAI,SAAAC,GAE3B,OAAQzB,EAAYyB,GAAKC,MACvB,IAAK,SACH,OACE,wBAAC,IAAD,yBACEnB,UAAWD,EACXqB,KAAMF,GACFzB,EAAYyB,IAHlB,IAIEA,IAAG,uBAAkBA,MAG3B,IAAK,gBACH,OACE,wBAAC,IAAD,yBACElB,UAAWD,EACXqB,KAAMF,GACFzB,EAAYyB,IAHlB,IAIEA,IAAG,uBAAkBA,MAG3B,IAAK,SACH,OACE,wBAAC,IAAD,yBACElB,UAAWD,EACXqB,KAAMF,GACFzB,EAAYyB,IAHlB,IAIEA,IAAG,uBAAkBA,MAG3B,IAAK,YACH,OACE,wBAAC,IAAD,yBACElB,UAAWD,EACXqB,KAAMF,GACFzB,EAAYyB,IAHlB,IAIEA,IAAG,uBAAkBA,MAI3B,IAAK,gBAAkB,IAAD,EACpB,QAAkCG,IAA9B5B,EAAYyB,GAAK1B,UAAwD,OAA9BC,EAAYyB,GAAK1B,SAAmB,OAEnF,OACE,wBAAC,IAAD,yBACEQ,UAAWD,EACXqB,KAAMF,EACNtB,MAAOW,EAAOW,IACVzB,EAAYyB,IAJlB,IAKE1B,SAAQ,UAAEC,EAAYyB,GAAK1B,gBAAnB,QAPG,SAAC8B,GAAD,OAAY,MAQvBJ,IAAG,uBAAkBA,MAI3B,IAAK,cAAgB,IAAD,EAClB,QAAkCG,IAA9B5B,EAAYyB,GAAK1B,UAAwD,OAA9BC,EAAYyB,GAAK1B,SAAmB,OAEnF,OACE,wBAAC,IAAD,yBACEQ,UAAWD,EACXqB,KAAMF,GACFzB,EAAYyB,IAHlB,IAIE1B,SAAQ,UAAEC,EAAYyB,GAAK1B,gBAAnB,QANG,SAAC8B,GAAD,OAAY,MAOvBJ,IAAG,uBAAkBA,MAK7B,OAAO,gCAGT,+BAIH1B,GAAa,sBAAKQ,UAAU,iBAAf,UACZ,yBAAQA,UAAU,uCAAuCmB,KAAK,SAA9D,UACE,cAAC,IAAD,CAAYI,MAAOC,MAClB3B,EAAKK,cAAc,CAACC,GAAI,iDAE3B,yBACEH,UAAU,0CACVmB,KAAK,QACLlB,QAAS,kBA/GD,SAACU,GACvBA,IA8G6Bc,CAAgBd,IAHjC,UAIE,cAAC,IAAD,CAAKe,IAAKC,YAAc,uCACnBJ,MAAOC,MACX3B,EAAKK,cAAc,CAACC,GAAI,uE,gJCtJpC,SAASyB,EAAT,GAMH,IAL0B5B,EAK3B,EAL2BA,UAAW6B,EAKtC,EALsCA,UAAcC,EAKpD,yCACKC,EAAYF,EACZG,EAASC,cACf,OAAQ,qBAAKjC,UAAWA,EAAhB,SACN,cAAC+B,EAAD,2BAAgBC,GAAYF,MCQzB,SAASI,EAAT,GAQmC,IAPJC,EAOG,EAPHA,YAOG,IANHC,YAMG,MANI,aAMJ,EACjCvC,EAAOC,cACQuC,GAAMF,EAApBG,UAFgC,YAEZH,EAFY,gBAGvC,OACE,mCACE,qBAAKnC,UAAW,MAAhB,SACGqC,GAAMtB,OAAOR,OAAO8B,GAAIpB,KAAI,SAACsB,EAAYC,GACxC,GAAIC,IAAEC,SAASH,GAAa,MAAM,IAAII,MAAM,iCAAsBJ,EAAa,KAAOK,KAAKC,UAAUR,IADnD,IAE3CC,EAAqDC,EAArDD,UAAWQ,EAA0CP,EAA1CO,WAAYC,EAA8BR,EAA9BQ,gBAAoBC,EAFA,YAEUT,EAFV,8CAGlD,OACE,sBAAwCvC,UAAS,OAAE8C,QAAF,IAAEA,IAAc,SAAjE,UACGR,GAA2B,KAAdA,GAAqB,qBACjCtC,UAAU,+BADuB,SACSH,EAAKK,cAAc,CAACC,GAAImC,IAAYlC,gBAChF,cAAC,EAAD,CAAY4C,OAAQA,EAAQC,QAAS,GAAIC,eAAgBH,EAAiBX,KAAMA,MAHlF,4BAA+BI,WAYpC,IAAMW,EAAa,SAAbA,EAAc,GAAkD,IAAjDH,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,QAASb,EAA+B,EAA/BA,KAAMc,EAAyB,EAAzBA,eAC3CrD,EAAOC,cACPC,EAAgB,OAAGmD,QAAH,IAAGA,IAAkB,OAC3C,OAAQ,mCACLnC,OAAOC,KAAKgC,GAAQ/B,KAAI,SAAAC,GACvB,IAAMkC,EAAQJ,EAAO9B,GACfmC,EAAUnC,EAAIoC,OACpB,GAAIb,IAAEC,SAASU,GAAQ,MAAM,IAAIT,MAAM,iCAAsBzB,EAAM,KAAO0B,KAAKC,UAAUG,IACzF,IAAM5B,EAAO6B,EAAwB,KAAZI,GAA8B,KAAZJ,EAAkBA,EAArC,UAAkDA,EAAlD,YAA6DI,GAAaA,EAClG,OAAQD,EAAMG,OACZ,IAAK,SACL,IAAK,QACH,OACE,wBAAC,IAAD,yBACEvD,UAAWD,EACXqB,KAAMA,EACND,KAAMiC,EAAMG,OACRH,GAJN,IAKEhB,KAAMA,EACNlB,IAAG,2BAAsBE,MAE/B,IAAK,gBACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACND,KAAMiC,EAAMG,OACRH,GAJN,IAKEhB,KAAMA,EACNlB,IAAG,2BAAsBE,MAG/B,IAAK,SACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAMElC,IAAG,2BAAsBE,MAE/B,IAAK,YACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAMElC,IAAG,2BAAsBE,MAE/B,IAAK,QACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAMElC,IAAG,2BAAsBE,MAE/B,IAAK,UACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAMElC,IAAG,2BAAsBE,MAI/B,IAAK,QACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAOElC,IAAG,2BAAsBE,MAGjC,IAAK,OACD,OACI,wBAAC,IAAD,yBACIpB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALR,IAOIlC,IAAG,2BAAsBE,MAGnC,IAAK,gBACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAMElC,IAAG,2BAAsBE,MAI/B,IAAK,cACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMF,EACNkB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAMElC,IAAG,uBAAkBA,MAI3B,IAAK,MACH,OACE,wBAAC,IAAD,yBACElB,UAAWD,EACXqB,KAAMA,EACNgB,KAAMA,EACNjB,KAAMiC,EAAMG,OACRH,GALN,IAMElC,IAAG,2BAAsBE,MAK/B,IAAK,WACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACND,KAAMiC,EAAMG,OACRH,GAJN,IAKElC,IAAG,2BAAsBE,MAI/B,IAAK,SACH,OACE,wBAAC,IAAD,yBACEpB,UAAWD,EACXqB,KAAMA,EACND,KAAMiC,EAAMG,OACRH,GAJN,IAKElC,IAAG,2BAAsBE,MAI/B,IAAK,SACuBgC,EAAnBG,MADO,IACGzB,EADJ,YACasB,EADb,WAEb,OAAQ,wBAACxB,EAAD,2BAAiBE,GAAjB,IAAwBZ,IAAG,2BAAsBE,MAE3D,QAAU,IAAD,EAC0DgC,EAAnDd,GADP,EACAiB,MADA,EACOjB,WAAWQ,EADlB,EACkBA,WAAYC,EAD9B,EAC8BA,gBAAoBS,EADlD,oEAEP,OAAOV,EACH,uBAAsC9C,UAAW8C,EAAjD,UACDR,GAA2B,KAAdA,GAAqB,qBACjCtC,UAAU,+BADuB,SACSH,EAAKK,cAAc,CAACC,GAAImC,IAAYlC,gBAC5E,cAAC+C,EAAD,CAAYH,OAAQQ,EAAMN,eAAc,OAAEH,QAAF,IAAEA,IAAmBG,EACjDD,QAAS7B,EACTgB,KAAMA,MALpB,0BAA8BhB,IAO/B,eAAC,WAAD,WACEkB,GAA2B,KAAdA,GAAqB,qBACjCtC,UAAU,+BADuB,SACSH,EAAKK,cAAc,CAACC,GAAImC,IAAYlC,gBAChF,cAAC+C,EAAD,CAAYH,OAAQQ,EAAMN,eAAc,OAAEH,QAAF,IAAEA,IAAmBG,EACjDD,QAAS7B,EACTgB,KAAMA,MALnB,qBAA6BhB,Y,kCC5N1C,IAAIqC,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtC3C,OAAO6C,eAAeC,EAAS,aAAc,CAC3CjE,OAAO,IAETiE,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,kFACD,UAEJL,EAAQC,QAAUE,G,kCCjBlB,IAAIP,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtC3C,OAAO6C,eAAeC,EAAS,aAAc,CAC3CjE,OAAO,IAETiE,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,+OACD,UAEJL,EAAQC,QAAUE,G,8LCKX,SAASG,EAAT,GA8BH,IA7BFC,EA6BC,EA7BDA,SACAC,EA4BC,EA5BDA,MACAC,EA2BC,EA3BDA,QACAC,EA0BC,EA1BDA,iBACAC,EAyBC,EAzBDA,oBACAC,EAwBC,EAxBDA,aACAC,EAuBC,EAvBDA,SAuBC,IAtBDC,wBAsBC,MAtBkB,GAsBlB,EArBDC,EAqBC,EArBDA,QACAC,EAoBC,EApBDA,aACAC,EAmBC,EAnBDA,SACAvF,EAkBC,EAlBDA,MACAwF,EAiBC,EAjBDA,iBACEC,EAgBD,EAhBCA,0BAiBInF,EAAOC,cACPmF,EAA4BD,EAC5BE,EAAWC,mBAAQ,iBAAO,CAC9BC,UAAW,MACXC,KAAM,MACNC,UAAW,SAACC,EAAWC,EAAUC,GAAtB,eACT,cAAC,WAAD,UACGA,EAAW,IAAK,UAAClB,EAAiBmB,YAAlB,QAA0B,GAAK,IAAhC,UAAsCnB,EAAiBoB,aAAvD,QAAgE,MAGpFC,cAAe,cACfC,MAAO,YACL,CAACtB,IACCuB,EAAehB,EACjBrC,IAAEsD,QAAQnB,GAAV,CACOM,GADP,mBACoBN,IADpB,aAEQoB,IAAKd,GAAaN,GAC1BA,EAEJ,OACE,eAAC,IAAD,CAAM5E,UAAW,mBAAjB,UACGT,GAAS,cAAC,IAAD,CAAYA,MAAOM,EAAKK,cAAc,CAAEC,GAAIZ,IAASa,gBAC/D,eAAC,IAAD,YACwB,IAArB2E,GACC,sBAAK/E,UAAU,uBAAf,UACG0E,GACD,yBACEvD,KAAK,SACLnB,UAAU,uCACVC,QAASyE,EAHX,UAIE,cAAC,IAAD,CAASnD,MAAOC,MACf3B,EAAKK,cAAc,CAAEC,GAAI,mDAG3B0E,GACC,yBACE1D,KAAK,SACLnB,UAAU,0CACVC,QAAS,WACPwE,GAAgBA,EAAaE,GAC7BE,KALJ,UAOE,cAAC,IAAD,CAA2BtD,MAAOC,MACjC3B,EAAKK,cAAc,CAAEC,GAAI,sDAG7B8E,GAA8B,cAACA,EAAD,OAGnC,cAAC,IAAD,CACEb,SAAUA,EACVQ,QAASkB,EACTzB,MAAOA,EACPC,QAASA,EACTC,iBAAkBA,EAClBC,oBAAqBA,EACrBC,aAAcA,EACdE,iBAAkBA,Y,yDChH5B,2MAeO,SAASsB,EACdC,EACAV,EACAC,EAHK,GAKJ,IADAU,EACD,EADCA,aAAcC,EACf,EADeA,SAAUC,EACzB,EADyBA,OAAOC,EAChC,EADgCA,OAAsBC,GACtD,EADwCC,aACxC,EADsDD,SAASE,EAC/D,EAD+DA,YAAa5G,EAC5E,EAD4EA,KAE5E,OACE,gCACGyG,GAAW,mBAGVtG,UAAU,uDACVC,QAAS,SAACyG,GACRJ,EAAOd,GACPkB,EAAEC,kBANM,SAQV,sBAAM3G,UAAU,wCAAhB,SACE,cAAC,IAAD,CACE0B,IAAKC,YAAc,+BACnBpC,MAAOM,EAAKK,cAAc,CAACC,GAAI,sDAIpCoG,GAAa,mBACZhH,MAAOM,EAAKK,cAAc,CAACC,GAAI,iDAC/BH,UAAU,kEACVC,QAAS,SAACyG,GACRH,EAAQf,GACRkB,EAAEC,kBALQ,SAOZ,sBAAM3G,UAAU,wCAAhB,SACE,sBAAMA,UAAU,wCAAhB,SACE,cAAC,IAAD,CAAmBA,UAAU,2BAIlCmG,GAAiB,mBAChB5G,MAAOM,EAAKK,cAAc,CAACC,GAAI,uDAC/BH,UAAU,6DACVC,QAAS,SAACyG,GACRP,EAAaX,GACbkB,EAAEC,kBALY,SAOhB,sBAAM3G,UAAU,wCAAhB,SACE,cAAC,IAAD,CAAYA,UAAU,yBAGzBqG,GAAW,mBAGVrG,UAAU,uDACVC,QAAS,SAACyG,GACRL,EAAOb,GACPkB,EAAEC,kBANM,SAQV,sBAAM3G,UAAU,wCAAhB,SACE,cAAC,IAAD,CACE0B,IAAKC,YAAc,4CACnBpC,MAAOM,EAAKK,cAAc,CAACC,GAAI,sDAIpCiG,GAAc,mBAEbpG,UAAU,6DACVC,QAAS,SAACyG,GACRN,EAASZ,GACTkB,EAAEC,kBALS,SAOb,sBAAM3G,UAAU,wCAAhB,SACE,sBAAMA,UAAU,wCAAhB,SACE,cAAC,IAAD,CAAYA,UAAU,2BAK1ByG,GACE,mBACAzG,UAAU,kEACVC,QAAS,SAACyG,GACRD,EAAYjB,GACZkB,EAAEC,kBAJJ,SAMA,sBAAM3G,UAAU,wCAAhB,SACE,cAAC,IAAD,CAAaA,UAAU,4BAS5B,SAAS4G,EACdV,EACAV,GACA,MAAwB,MAAhBU,GAAuC,SAAhBA,IAA0C,IAAhBA,EACvD,cAAC,IAAD,CAAiB3E,MAAO,CAACsF,MAAO,aAAkB,cAAC,IAAD,CAAiBtF,MAAO,CAACsF,MAAO,e,kCC9GtF,IAAIpD,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtC3C,OAAO6C,eAAeC,EAAS,aAAc,CAC3CjE,OAAO,IAETiE,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,0HACD,eAEJL,EAAQC,QAAUE,G,kCCjBlB,IAAIP,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtC3C,OAAO6C,eAAeC,EAAS,aAAc,CAC3CjE,OAAO,IAETiE,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,iGACD,yBAEJL,EAAQC,QAAUE,G,kCCjBlB,IAAIP,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtC3C,OAAO6C,eAAeC,EAAS,aAAc,CAC3CjE,OAAO,IAETiE,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,qOACD,WAEJL,EAAQC,QAAUE,G,kCCjBlB,IAAIP,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtC3C,OAAO6C,eAAeC,EAAS,aAAc,CAC3CjE,OAAO,IAETiE,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,kKACD,iBAEJL,EAAQC,QAAUE,G,kCCjBlB,IAAIP,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtC3C,OAAO6C,eAAeC,EAAS,aAAc,CAC3CjE,OAAO,IAETiE,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,8cACD,yBAEJL,EAAQC,QAAUE,G,2OC6GH8C,EA3GM,SAAC,GAMf,IAL2BC,EAK5B,EAL4BA,OACAC,EAI5B,EAJ4BA,WAK1BC,EAAWlD,IAAMmD,OAAY,CAAEtH,MAAO,KADxC,EAEiCmE,IAAMoD,UAAe,OAANJ,QAAM,IAANA,OAAA,EAAAA,EAAQK,WAAY,IAFpE,mBAEGC,EAFH,KAEgBC,EAFhB,KAIJvD,IAAMwD,WAAU,WACVR,GACFO,EAAcP,EAAOK,YAEtB,CAACL,IAgBJ,OACI,cAAC,IAAD,UACE,cAAC,IAAD,UACE,sBAAK/G,UAAU,8BAAf,UACE,sBAAMA,UAAU,oCAAhB,sBACA,sBAAKA,UAAU,6CAAf,iBAcIqH,QAdJ,IAcIA,OAdJ,EAcIA,EAAapG,KACT,SACIrB,EACAsB,GAFJ,OAII,sBAAelB,UAAU,WAAzB,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,IAAD,CAA2BuB,MAAO,CAAEiG,SAAU,QAEhD,sBAAKxH,UAAU,8BAAf,UACE,mBAAGA,UAAU,YAAb,SACGyC,IAAEC,SAAS9C,EAAM6H,WACZ7H,EAAM6H,UACN7H,EAAM6H,UAAUC,SACZ9H,EAAM6H,UAAUC,SAChB,cAEZ,4BAAI9H,EAAM+H,eAZJzG,MAiBpB,sBAAKlB,UAAU,MAAf,UACE,qBAAKA,UAAU,UACf,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC4H,EAAA,EAAD,CACI5H,UAAU,eACV6H,QAAS,EACTC,aAAW,iBACXC,IAAKd,EACLe,YAAY,uBAGlB,qBAAKhI,UAAU,QAAf,SACE,wBACIA,UAAU,8BACVC,QAAS,WAnGf,IAACgI,EAoGsC,KAA3BhB,EAASiB,QAAQtI,MAxEzB,SAACmH,EAAaoB,GAC9BnB,GAAcD,GAChBC,EAAWD,EAAQoB,GACdC,MAAK,SAAAC,GACJf,EAAce,EAAI5H,MAElBwG,EAASiB,QAAQtI,MAAQ,MAE1B0I,OAAM,SAAAC,GACL,MAAMA,KAgEYC,CAAczB,EAAQ,CAAEY,QAASV,EAASiB,QAAQtI,SArG3DqI,EAuGqB,oBAtGxCQ,IAAMR,MAAMA,EAAO,CACjBS,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU3H,MAyFQ,uCC4KP4H,IAvQf,YAkCI,IAjCsBlC,EAiCvB,EAjCuBA,OACAmC,EAgCvB,EAhCuBA,SAgCvB,IA/BuBC,kBA+BvB,MA/BoC,6CA+BpC,EA9BuBC,EA8BvB,EA9BuBA,KACAC,EA6BvB,EA7BuBA,IACAC,EA4BvB,EA5BuBA,UACAC,EA2BvB,EA3BuBA,QACAC,EA0BvB,EA1BuBA,WACAlF,EAyBvB,EAzBuBA,QACAlC,EAwBvB,EAxBuBA,KACAqH,EAuBvB,EAvBuBA,cACAC,EAsBvB,EAtBuBA,YACEC,EAqBzB,EArByBA,cACA3C,EAoBzB,EApByBA,WAoBzB,IAnByB4C,mBAmBzB,SACK/J,EAAOC,cACP+J,EAAUC,cACVC,EAAa5E,mBAAQ,kBAAM6E,YAAWV,KAAY,CAACA,IAHxD,EAKyCnC,mBAASJ,GALlD,mBAKMkD,EALN,KAKqBC,EALrB,KAMD3C,qBAAU,WACRR,GAAUmD,EAAiBnD,KAC1B,CAACA,IAEJQ,qBAAU,WACH6B,GAASrC,GAAQmD,EAAiBH,KACtC,CAACA,EAAYX,IAZf,IAaMe,EAA4Bb,EAA5Ba,QAAYC,EAblB,YAakCd,EAblC,aA2BD,OAZA/B,qBAAU,WACJ6B,GACFC,GACAA,EAAID,GAAMhB,MAAK,SAACC,GACd6B,EAAiB,eAAI7B,EAAI5H,OACrBgJ,GAAiBA,EAAcpB,EAAI5H,WAG1C,CAAC2I,IAEJiB,QAAQC,IAAIL,GAGV,mCACE,cAAC,IAAD,CACEM,oBAAoB,EACpBlK,cAAe4J,EACfO,iBAAkBhB,EAClBlJ,SAAU,SAACC,EAAD,GAA2C,EAAjCkK,cAAiC,EAAlBC,aACjCL,QAAQC,IAAI/J,GACZ2I,EAAS3I,GAAQ6H,MAAK,WACpByB,EAAQc,KAAR,OAAajB,QAAb,IAAaA,IAAekB,YAAYC,OAAOC,SAASC,cACvDzC,OAAM,SAACC,QARd,SAYG,cAAE7H,aAAF,EAAgBI,cAAhB,OACC,qCACE,cAAC,IAAD,CAAMd,UAAU,wBAAhB,SACGe,OAAOC,KAAKoJ,GAAcnJ,KAAI,SAACC,EAAKsB,EAAOxB,GAC1C,IAAMgK,EAAMZ,EAAalJ,GACzB,GAAIuB,IAAEC,SAASsI,GACb,MAAM,IAAIrI,MAAM,iCAAsBzB,EAAM,KAAO0B,KAAKC,UAAUuH,IAHjB,IAI5Ca,EAAoBD,EAApBC,OAAWC,EAJiC,YAIxBF,EAJwB,YAKnD,OACE,eAAC,IAAD,CAAqChL,UAAW,cAAhD,UACE,cAAC,IAAD,CACEA,UAAW,kBACXT,MACW,GAATiD,EACE,oBACEvC,QAAS,kBAAM4J,EAAQsB,UACvBnL,UAAW,kDAFb,UAGE,cAAC,IAAD,IACCyC,IAAEC,SAASyH,GAAWtK,EACpBK,cACC,CAACC,GAAIgK,GACL,CAAChB,WAAYtJ,EAAKK,cAAc,CAACC,GAAE,OAAEgJ,QAAF,IAAEA,IAAc,YAEpD/I,cAAgB+J,EAAQF,MAG7B,mCACGpK,EACEK,cACC,CAACC,GAAI8K,GACL,CAAC9B,WAAYtJ,EAAKK,cAAc,CAACC,GAAE,OAAEgJ,QAAF,IAAEA,IAAc,YAEpD/I,kBAKX,eAAC,IAAD,WACE,cAAC,IAAD,CACEgC,KAAMA,EAGND,YAAa+I,IAEhBvB,GAAwC,YAAvBA,EAAcxI,MAC5B,qBAAKnB,UAAU,mBAAf,SACKe,OAAOC,KAAK2I,EAAclJ,MAAMQ,KAAI,SAAAmK,GACjC,OAAQzB,EAAa,KAASyB,GAAOC,MACjC,IAAK,SACD,OACI,yBACIlK,KAAMwI,EAAa,KAASyB,GAAOjK,KACnClB,QAAS,WAEL0J,EAAa,KAASyB,GAAOnL,WAEjCD,UAAW2J,EAAa,KAASyB,GAAOpL,UAN5C,UAQK2J,EAAa,KAASyB,GAAOE,KARlC,IAQyC3B,EAAa,KAASyB,GAAOG,QAD7DH,GAKjB,IAAK,UACD,OACI,yBACIjK,KAAMwI,EAAa,KAASyB,GAAOjK,KACnClB,QAAS,WAEL0J,EAAa,KAASyB,GAAOnL,QAAQgK,IAEzCjK,UAAW2J,EAAa,KAASyB,GAAOpL,UAN5C,UAQK2J,EAAa,KAASyB,GAAOE,KARlC,IAQyC3B,EAAa,KAASyB,GAAOG,QAD7DH,GAIjB,IAAK,SACD,OACI,yBACIjK,KAAMwI,EAAa,KAASyB,GAAOjK,KACnCnB,UAAW2J,EAAa,KAASyB,GAAOpL,UAExCC,QAAS,WACL0J,EAAa,KAASyB,GAAOnL,QAAQgK,IAL7C,UAOKN,EAAa,KAASyB,GAAOE,KAPlC,IAOyC3B,EAAa,KAASyB,GAAOG,QAJ7DH,GAOjB,IAAK,cACD,OACI,cAAC,IAAD,CAAMI,GAAI7B,EAAa,KAASyB,GAAOK,OAAvC,SACI,yBACItK,KAAMwI,EAAa,KAASyB,GAAOjK,KACnCnB,UAAW2J,EAAa,KAASyB,GAAOpL,UAF5C,UAGK2J,EAAa,KAASyB,GAAOE,KAHlC,IAGyC3B,EAAa,KAASyB,GAAOG,UAJtBH,SAYxE7B,GAAW/G,IAAUzB,OAAOC,KAAKoJ,GAAcsB,OAAS,GACxD,qBAAK1L,UAAU,mBAAf,SACGe,OAAOC,KAAKuI,EAAQ9I,MAAMQ,KAAI,SAAAmK,GAAU,IAAD,EACtC,OAAQ7B,EAAQ9I,KAAK2K,GAAOC,MAC1B,IAAK,SACH,OACE,yBACErL,UAAWuJ,EAAQ9I,KAAK2K,GAAOpL,UAE/BmB,KAAM,SAHR,WAKe,IAAZmD,EAAA,UAAmBiF,EAAQ9I,KAAK2K,GAAO9G,eAAvC,QACC,cAACqH,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,QAC3BC,KAAK,OAAUvC,EAAQ9I,KAAK2K,GAAOE,KAPhD,IAOuDzL,EAAKK,cAAc,CAACC,GAAIoJ,EAAQ9I,KAAK2K,GAAOG,UAL5FH,GASX,IAAK,SACH,OACE,yBACEjK,KAAMoI,EAAQ9I,KAAK2K,GAAOjK,KAC1BnB,UAAWuJ,EAAQ9I,KAAK2K,GAAOpL,UAFjC,UAIGuJ,EAAQ9I,KAAK2K,GAAOE,KAJvB,IAI8BzL,EAAKK,cAAc,CAACC,GAAIoJ,EAAQ9I,KAAK2K,GAAOG,UADnEH,GAIX,IAAK,cACH,OACE,cAAC,IAAD,CAAMI,GAAIjC,EAAQ9I,KAAK2K,GAAOK,OAA9B,SACE,yBACEtK,KAAMoI,EAAQ9I,KAAK2K,GAAOjK,KAC1BnB,UAAWuJ,EAAQ9I,KAAK2K,GAAOpL,UAFjC,UAGGuJ,EAAQ9I,KAAK2K,GAAOE,KAHvB,IAG8BzL,EAAKK,cAAc,CAACC,GAAIoJ,EAAQ9I,KAAK2K,GAAOG,YAJjCH,QA3BdlK,QA7FlC,mBAAqBA,SA0InB,IAAhB0I,GAAyB5C,EAA4D,OAAzB,OAAbiD,QAAa,IAAbA,OAAA,EAAAA,EAAe8B,sBAC3B,KAAf,OAAb9B,QAAa,IAAbA,OAAA,EAAAA,EAAe+B,WAA2D,OAAzB,OAAb/B,QAAa,IAAbA,OAAA,EAAAA,EAAe8B,oBACvD,cAAC,IAAD,UACI,cAAC,IAAD,CAAU/L,UAAW,MAArB,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAMA,UAAU,2CAAhB,+BACA,qBAAKA,UAAU,6CAAf,SACKiK,GAAiBA,EAAc7C,SAASsE,OAAS,EAC9CzB,EAAc7C,SAASnG,KACnB,SACIrB,EACAsB,GAFJ,OAII,sBAAelB,UAAU,WAAzB,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,IAAD,CAA2BuB,MAAO,CAAEiG,SAAU,QAElD,sBAAKxH,UAAU,8BAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BJ,EAAM6H,UAAUC,WAC1C,4BAAI9H,EAAM+H,eANRzG,MAYlB,8EAOpB,cAAC,EAAD,CAAc6F,OAAQkD,EAAejD,WAAYA,IAhCd,uC,kCC7OrD,2DAKI2E,EAAuB5H,IAAMkI,YAAW,SAAUC,EAAMnE,GAC1D,IAAIoE,EAAWD,EAAKC,SAChBN,EAAUK,EAAKL,QACfD,EAAYM,EAAKN,UACjBE,EAAOI,EAAKJ,KACZM,EAAWF,EAAKE,SAChBC,EAAUH,EAAKI,GACfvK,OAAwB,IAAZsK,EAAqB,MAAQA,EACzCrM,EAAYkM,EAAKlM,UACjB8B,EAAQyK,YAA8BL,EAAM,CAAC,WAAY,UAAW,YAAa,OAAQ,WAAY,KAAM,cAG3GM,GADJL,EAAWM,YAAmBN,EAAU,YACP,IAAMP,EACvC,OAAoB7H,IAAME,cAAclC,EAAW2K,YAAS,CAC1D3E,IAAKA,GACJjG,EAAO,CACR9B,UAAW2M,IAAW3M,EAAWwM,EAAiBV,GAAQU,EAAkB,IAAMV,EAAMD,GAAW,QAAUA,KAC3GO,MAENT,EAAQiB,YAAc,UACPjB,O,4FCbFkB,EAAUC,IAAe,YAGzBC,EAAeF,EAAU,QAIzBG,GAFeF,IAEY,SAACrM,GACvC,OAAOwM,IAAMC,KAAKL,EAASpM,KAGhB0M,EAAiC,SAAC,GAIgB,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAExD,OAAOL,IAAM5D,IAAN,UAAawD,GAAW,CAC7BU,OAAO,uCAAKH,GAAeE,GAArB,IAAsCD,eAE3CjF,MAAK,SAAAC,GACJ,IAAMmF,EAAYnF,EAAI5H,KAAKA,KAAK,GAE1BgN,EADapF,EAAI5H,KAAKA,KAAK,GACD,GAAGiN,UAC7BC,EAAUH,EAAUvM,KAAI,SAAC2M,GAAD,mBAAC,eAAmBA,GAApB,IAA2BC,QAASD,EAAKF,UAAUD,OACjF,OAAO,2BAAIpF,GAAX,IAAgB5H,KAAMkN,QAIfG,EAAyB,SAAC,GAIgB,IAHLV,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAEhD,OAAOL,IAAM5D,IAAN,UAAawD,EAAb,UAA8B,CACnCU,OAAO,uCAAKH,GAAeE,GAArB,IAAsCD,gBAKnCU,EAAqB,SAAAhH,GAChC,OAAOkG,IAAM5D,IAAN,UAAawD,EAAb,YAAwB9F,EAAOf,MACjCoC,MAAK,SAAAC,GACF,IAAMmF,EAAYnF,EAAI5H,KAAKA,KAAK,GAC1BuN,EAAa3F,EAAI5H,KAAKA,KAAK,GACjC4J,QAAQC,IAAI0D,GACZ,IAAMC,EAAeD,EAAW,GAAGhI,IAAIiI,aACjCN,EAAUH,EAAUvM,KAAI,SAAC2M,GAAD,mBAAC,eAAmBA,GAApB,IAA2BK,oBAGzD,OADA5D,QAAQC,IAAR,2BAAgBjC,GAAhB,IAAqB5H,KAAMkN,EAAQ,MAC5B,2BAAItF,GAAX,IAAgB5H,KAAMkN,EAAQ,SAI3BO,EAAU,SAAClI,GACtB,OAAOiH,IAAM5D,IAAN,UAAawD,EAAb,YAAwB7G,IAC1BoC,MAAK,SAAAC,GACF,IAAMmF,EAAYnF,EAAI5H,KAAKA,KAAK,GAC1BuN,EAAa3F,EAAI5H,KAAKA,KAAK,GAC3BwN,EAAeD,EAAW,GAC5BP,EAAeO,EAAW,GAAGN,UAC7BC,EAAUH,EAAUvM,KAAI,SAAC2M,GAAD,mBAAC,eAAmBA,GAApB,IAA2BC,QAASD,EAAKF,UAAUD,OAEjF,OAAO,2BAAIpF,GAAX,IAAgB5H,KAAM,CAACwN,eAAcT,UAAWG,SAG3CQ,EAA2B,SAACpH,GACvC,OAAOkG,IAAMmB,IAAN,UAAavB,EAAb,YAAwB9F,EAAOf,KAAOe,IAGlCsH,EAA2B,SAACtH,GACvC,OAAOkG,IAAMqB,OAAN,UAAgBzB,EAAhB,YAA2B9F,EAAOf,OAG9BuI,EAAmC,SAACnK,GAC/C,OAAO6I,IAAMqB,OAAOvB,EAAc,CAChCtM,KAAM,CAACA,KAAK2D,M,kGCrDVoK,EAAY,SAAC1M,GAAqB,IAAD,IACN2M,YAAc3M,EAAMV,MADd,mBAC9BsN,EAD8B,eAIrC,OAFArE,QAAQC,IAAIoE,EAAM9O,OAEX,cAAC,IAAD,CAAcwE,SAAQ,UAAEsK,EAAM9O,aAAR,QAAiB,GAAIgF,QAAS9C,EAAM8C,WA6TpD+J,UA1Tf,WAAoB,IAAD,EAoCbC,YAA8B,CAChCC,UAAWd,EACXe,YAAahB,EACbiB,aAAc/B,EACdgC,aAAcX,EACdY,iBAAkBV,EAClBW,aAAc/B,EACdgC,aAAchB,IAzCd/J,EAFe,EAEfA,SACAvE,EAHe,EAGfA,KAMA8E,GATe,EAIfyK,aAJe,EAKfC,gBALe,EAMfC,WANe,EAOf7F,cAPe,EAQf8F,aARe,EASf5K,kBACA6K,EAVe,EAUfA,oBAYAlC,GAtBe,EAWfmC,aAXe,EAYfC,WAZe,EAafC,cAbe,EAcfC,SAde,EAefC,YAfe,EAgBfC,WAhBe,EAiBfC,cAjBe,EAkBfC,WAlBe,EAmBfC,cAnBe,EAoBfC,eApBe,EAqBfC,kBArBe,EAsBf7C,iBACA8C,EAvBe,EAuBfA,mBACAC,EAxBe,EAwBfA,YACAC,EAzBe,EAyBfA,eACAjM,EA1Be,EA0BfA,MACAC,EA3Be,EA2BfA,QAIAiM,GA/Be,EA4BftI,MA5Be,EA6BfuI,SA7Be,EA8BfC,IA9Be,EA+BfF,QAIAG,GAnCe,EAgCfrH,IAhCe,EAiCfsH,WAjCe,EAkCfC,SAlCe,EAmCfF,QAYIG,EAAc,8BA/CH,EAiDqB1J,mBAAS,6BAjD9B,mBAqDX0C,GArDW,UAqDDC,eAEhBvC,qBAAU,WACRmJ,EAAOL,KAEN,CAAC/C,EAAiB+C,IACrB,IAAMzL,EAAUO,mBAAQ,iBAA0B,CAChD/D,KAAK,aACHgE,UAAW,WACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,uCAC9B2Q,KAELC,UAAU,aACR3L,UAAW,gBACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,4CACjCmF,UAAW,SAAAlC,GAAK,OAAI,cAAC,IAAD,CAAiBA,MAAOA,EAAO4N,QAAS,iBACzDF,KAELG,YAAY,aACV7L,UAAW,kBACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,8CACjCmF,UAAW,SAAAlC,GAAK,OAAI,cAAC,IAAD,CAAiBA,MAAOA,EAAO4N,QAAS,iBACzDF,KAELI,iBAAiB,aACf9L,UAAW,uBACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,oDACjCmF,UAAW,SAAAlC,GAAK,OAAI,cAAC,IAAD,CAAiBA,MAAOA,EAAO4N,QAAS,iBACzDF,KAELK,aAAa,aACX/L,UAAW,eACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,gDAC9B2Q,KAELpD,UAAU,aACRtI,UAAW,YACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,6CAC9B2Q,KAELjD,QAAQ,aACNzI,UAAW,UACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,yCACjCmF,UAAW8L,KACRN,KAELO,OAAO,yBACLjM,UAAW,SACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,8CACjCmF,UAAWW,IACXqL,gBAAiB,CACfzR,OACAsG,aAAc,SAACY,GAIb8C,EAAQc,KAAR,UAAgBE,OAAOC,SAASC,SAAhC,YAA4ChE,EAAOf,IAAIA,SAGxDuL,KAbC,IAcJhQ,MAAO,CAACiQ,SAAU,cAElB,IACEC,EAA2B,CAC/BxG,OAAQ4F,EACRa,WAAY,CACVpP,UAAW,QACXQ,WAAY,0BACZC,gBAAiB,QACjB,qCAAsC,CACpCQ,MAAO,SACPgI,MAAO,mCACPoG,UAAU,GAEZ,0CAA2C,CACzCpO,MAAO,YACPgI,MAAO,yCAEPoG,UAAU,GAEZ,iDAAkD,CAChDpO,MAAO,YACPgI,MAAO,iDAEPoG,UAAU,GAEV,4BAA6B,CAC7BpO,MAAO,SACPgI,MAAO,4CAEPoG,UAAU,GAEV,yBAA0B,CAC1BpO,MAAO,SACPgI,MAAO,yCAEPoG,UAAU,KAIVC,EAAazM,mBAAQ,iBAA0B,CACjD0M,QAAQ,aACRzM,UAAW,cACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,oCAC9B2Q,KAEHK,aAAa,aACT/L,UAAW,eACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,gDAC9B2Q,KAEPpD,UAAU,aACNtI,UAAW,YACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,6CAC9B2Q,KAEPjD,QAAQ,aACJzI,UAAW,UACXC,KAAK,GAAD,OAAKxF,EAAKK,cAAc,CAACC,GAAI,yCACjCmF,UAAW8L,KACRN,QAEP,IACEgB,EAA4B,CAChC7G,OAAQ4F,EACRkB,MAAO,CACLzP,UAAW,QACXQ,WAAY,sBACZ,GAAI,CACFS,MAAO,SACP1B,UAAW,WACT,OAAO,cAAC,EAAD,CAAWT,KAAM,YAAawD,QAASgN,QAOhDI,EAAa7M,mBAAQ,iBAAmB,CAC5C8M,OAAQR,EACRS,OAAQJ,EACR3H,QAAU,SAACpD,GAAD,cAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAQkH,aAAajI,IAAIiI,aAAa7M,SAC/D,IA2DE+Q,GAzD6ChN,mBAAQ,iBAAO,CAChE,CACEnF,UAAW,cAEXoS,cAAe,cACf3R,KAAM,CACJ,GAAM,CACJ6E,UAAW,SAAClC,EAAO2D,GAEjB,OADAsD,QAAQC,IAAIlH,EAAO2D,GACZ,cAAC,IAAD,CAAgBmC,SAAU,KAAaI,UAAW0I,EAAYjL,OAAQA,WA2BnF,IAEuC5B,mBAAQ,iBAAO,CACxD,CACEkN,OAAQ,mCACRrS,UAAW,cACXsS,eAAgB,aAChBF,cAAe,kBACf3R,KAAM,CACJ,OAAU,CACRlB,MAAO,oBACP+F,UAAW,SAAClC,GAAD,OAAiB,cAAC,IAAD,CAAiBA,MAAOA,MAEtD,kBAAmB,CACjB7D,MAAO,kCAIX,IAGoB4F,mBAAqB,iBAC3C,CACE/D,KAAM,CACJD,KAAM,gBACNoK,MAAO,gBACP/L,SAAU+S,IACVC,SAAU,QAEZzB,UAAW,CACT5P,KAAM,YACNoK,MAAO,iBAEP,KA1QW,EA2QqBpE,mBAASgL,GA3Q9B,mBA2QV1S,EA3QU,KA6QjB,OA7QiB,KA8Qf,cAAC,WAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgT,OAAK,EAACC,KAAK,iBAAlB,SACG,gBAAEC,EAAF,EAAEA,MAAF,OACC,cAAC,IAAD,CACEzJ,SAAUqH,EACVpH,WAtOO,sBAuOP/G,KAAM,WAENgH,KAAI,OAAEuJ,QAAF,IAAEA,OAAF,EAAEA,EAAOpF,OAAOnE,KACpBC,IAAK6E,EACL5E,UAAW0I,OAIjB,eAAC,IAAD,CAAOU,KAAK,WAAZ,cACE,cAAC,IAAD,CACEnT,MAAOsR,EACPrR,SAAU,SAACI,GACTwQ,EAAmBwC,UACAvR,IAAfzB,EAAMwB,KAAoBkP,EAAe,2BAAI1Q,GAAL,IAAYwB,KAAMxB,EAAMwB,KAAKA,QACpEkP,EAAe1Q,IAEtBH,YAAaA,IAEf,cAAC,IAAD,CACEF,MAxPQ,4BAyPRoF,iBAAkBA,EAClBF,aAAc+K,EACdpL,SAAUA,EACVC,MAAOA,EACPO,QAASA,EACTN,QAASA,EACTC,iBAAkB+I,EAClB9I,oBAAqB4L,EACrBtL,UAAU","file":"static/js/16.e1fb6173.chunk.js","sourcesContent":["import React from 'react';\nimport {useIntl} from 'react-intl';\nimport {Formik} from 'formik';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Card, CardBody, CardHeader} from '../card';\nimport SVG from 'react-inlinesvg';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {SearchModel} from '../common-types/common-type';\n// import InfiniteScroll from 'react-infinite-scroll-component';\nimport {iconStyle} from '../common-consts/const';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport './master-header.css';\nimport {\n  InputDateTime,\n  InputNumber,\n  InputSearchSelect,\n  InputString,\n  InputStringNumber,\n  InputTreeSelect\n} from \"./common-input\";\n\nexport function MasterHeader<T>({\n                                  title,\n                                  onSearch,\n                                  searchModel,\n                                  initValue = {},\n                                  value,\n                                  onClickBack\n                                }: {\n  searchModel: SearchModel;\n  title: string;\n  initValue?: any;\n  value?: any;\n  onSearch?: (data: any) => void;\n  onClickBack?: () => void;\n}) {\n  const intl = useIntl();\n  const defaultClassName = \"col-xxl-2 col-md-3 master-header-search-input-margin\";\n  const handleResetForm = (resetForm: any) => {\n    resetForm();\n  };\n  return (\n    <Card className={'master-header-card'}>\n      <CardHeader title={onClickBack ? <span\n                            onClick={onClickBack}\n                            className={'cursor-pointer text-primary font-weight-boldest'}>\n                            <ArrowBackIosIcon/>\n                            {intl.formatMessage({id: title}).toUpperCase()}\n                          </span> : intl.formatMessage({id: title}).toUpperCase()}/>\n      <CardBody>\n        <Formik\n          initialValues={initValue}\n          onSubmit={values => {\n            onSearch && onSearch({...values});\n          }}\n          onReset={data => {\n            onSearch && onSearch({});\n            // if (onReset) {\n            //   onReset(data);\n            // }\n          }}\n        >\n          {({values, handleSubmit, handleBlur, handleChange, setFieldValue, resetForm}) => (\n            <form onSubmit={handleSubmit} className=\"form form-label-right\">\n              <div className=\"form-group row master-header-search-margin\">\n                {searchModel ? (\n                  Object.keys(searchModel).map(key => {\n                    // console.log(values)\n                    switch (searchModel[key].type) {\n                      case 'string': {\n                        return (\n                          <InputString\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'string-number': {\n                        return (\n                          <InputStringNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'number': {\n                        return (\n                          <InputNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'date-time': {\n                        return (\n                          <InputDateTime\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'search-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputSearchSelect\n                            className={defaultClassName}\n                            name={key}\n                            value={values[key]}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'tree-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputTreeSelect\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                    }\n                    return <></>;\n                  })\n                ) : (\n                  <></>\n                )}\n              </div>\n  \n              {onSearch && (<div className=\"row no-gutters\">\n                <button className=\"btn btn-primary mr-8 fixed-btn-width\" type=\"submit\">\n                  <SearchIcon style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.SEARCH_BTN'})}\n                </button>\n                <button\n                  className=\"btn btn-outline-primary fixed-btn-width\"\n                  type=\"reset\"\n                  onClick={() => handleResetForm(resetForm)}>\n                  <SVG src={ToAbsoluteUrl('/media/svg/vncheck/reset-filter.svg')}\n                       style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.RESET_FILTER_BTN'})}\n                </button>\n              </div>)}\n            </form>\n          )}\n        </Formik>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useFormikContext} from \"formik\";\n\nexport function InputCustom({\n                              className, component, ...props\n                            }: {\n  className: string,\n  component: (props: any) => ReactElement;\n  \n}) {\n  const Component = component;\n  const formik = useFormikContext<any>();\n  return (<div className={className}>\n    <Component  {...formik} {...props}/>\n  </div>)\n}\n\n","import React, {Fragment} from 'react';\nimport {InputGroups} from '../common-types/common-type';\nimport {useIntl} from 'react-intl';\nimport {\n  InputBoolean,\n  InputCheckBox,\n  InputDateTime,\n  InputImage,\n    InputFile,\n  InputNumber,\n  InputRadio,\n  InputSearchSelect,\n  InputSelect,\n  InputString,\n  InputStringNumber,\n  InputTag,\n  InputTreeSelect,\n} from './common-input';\nimport _ from 'lodash';\nimport {InputCustom} from \"../forms/input-custom\";\n\nexport function ModifyEntityPage<T>({\n                                      inputGroups,\n                                      mode = 'horizontal',\n                                    }:\n                                      {\n                                        inputGroups: InputGroups;\n                                        mode?: 'horizontal' | 'vertical';\n                                        errors?: any;\n                                      }) {\n  const intl = useIntl();\n  const {_subTitle, ...pl} = inputGroups;\n  return (\n    <>\n      <div className={'row'}>\n        {pl && Object.values(pl).map((inputGroup, index) => {\n          if (_.isString(inputGroup)) throw new Error('Sử dụng sai cách ' + inputGroup + '\\n' + JSON.stringify(pl));\n          const {_subTitle, _className, _inputClassName, ...inputs} = inputGroup;\n          return (\n            <div key={`modify-entity-page${index}`} className={_className ?? 'col-12'}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={inputs} prevKey={''} inputClassName={_inputClassName} mode={mode}/>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  );\n}\n\nexport const RenderForm = ({inputs, prevKey, mode, inputClassName}: any) => {\n  const intl = useIntl();\n  const defaultClassName = inputClassName ?? 'mb-5';\n  return (<>\n    {Object.keys(inputs).map(key => {\n      const input = inputs[key];\n      const trimKey = key.trim();\n      if (_.isString(input)) throw new Error('Sử dụng sai cách ' + key + '\\n' + JSON.stringify(inputs));\n      const name = prevKey ? ((trimKey === '' || prevKey === '') ? prevKey : `${prevKey}.${trimKey}`) : trimKey;\n      switch (input._type) {\n        case 'string':\n        case 'email':\n          return (\n            <InputString\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'string-number': {\n          return (\n            <InputStringNumber\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        }\n        case 'number':\n          return (\n            <InputNumber\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'date-time':\n          return (\n            <InputDateTime\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'radio':\n          return (\n            <InputRadio\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          )\n        case 'boolean': {\n          return (\n            <InputBoolean\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'image':\n          return (\n            <InputImage\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              // value={(values && values[key]) || []}\n              key={`modify-page-form-${name}`}\n            />\n          );\n      case 'file':\n          return (\n              <InputFile\n                  className={defaultClassName}\n                  name={name}\n                  mode={mode}\n                  type={input._type}\n                  {...input}\n                  // value={(values && values[key]) || []}\n                  key={`modify-page-form-${name}`}\n              />\n          );\n        case 'search-select': {\n          return (\n            <InputSearchSelect\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'tree-select': {\n          return (\n            <InputTreeSelect\n              className={defaultClassName}\n              name={key}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`master_header${key}`}\n            />\n          );\n        }\n        case 'tag': {\n          return (\n            <InputTag\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        \n        case 'checkbox':\n          return (\n            <InputCheckBox\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        \n        case 'select':\n          return (\n            <InputSelect\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          )\n        \n        case 'custom': {\n          const {_type, ...props} = input;\n          return (<InputCustom {...props} key={`modify-page-form-${name}`}/>);\n        }\n        default: {\n          const {_type, _subTitle, _className, _inputClassName, ...innt} = input as any;\n          return _className ? (\n              <span key={`render_form_span${name}`} className={_className}>\n            {_subTitle && _subTitle !== '' && (<div\n              className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n                <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                            prevKey={name}\n                            mode={mode}/>\n            </span>) :\n            (<Fragment key={`render_form${name}`}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                          prevKey={name}\n                          mode={mode}/>\n            </Fragment>)\n        }\n      }\n    })}</>)\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import React, {Fragment, ReactElement, useMemo} from 'react';\nimport { Card, CardBody, CardHeader } from '../card';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useIntl } from 'react-intl';\nimport { iconStyle } from '../common-consts/const';\nimport { MasterTable } from './master-table';\nimport { MasterBodyColumns, PaginationProps } from '../common-types/common-type';\nimport _ from 'lodash';\n\nexport interface BasicUnitDataProps {\n  showModal: any;\n  hideModal: any;\n  show: any;\n  list: any[];\n  total: number;\n  loading: boolean;\n  queryParams: any;\n  setQueryParamsBase: any;\n  ids: any[];\n  setIds: any;\n  setQueryParams: any;\n}\n\nexport function MasterBody<T>({\n  entities,\n  total,\n  loading,\n  paginationParams,\n  setPaginationParams,\n  onSelectMany,\n  onCreate,\n  selectedEntities = [],\n  columns,\n  onDeleteMany,\n  isShowId,\n  title,\n  hideHeaderButton,\n    additionalActionComponent\n}: {\n  total: number;\n  loading: boolean;\n  onSelectMany?: (entities: T[]) => void;\n  onCreate?: () => void;\n  columns: MasterBodyColumns;\n  entities: T[];\n  selectedEntities?: T[];\n  paginationParams: PaginationProps;\n  setPaginationParams: (data: PaginationProps) => void;\n  additionalActionComponent?: (props: any) => ReactElement;\n  onDeleteMany?: () => void;\n  isShowId?: boolean;\n  title?: string;\n  hideHeaderButton?: boolean;\n}) {\n  const intl = useIntl();\n  const AdditionalActionComponent = additionalActionComponent;\n  const idColumn = useMemo(() => ({\n    dataField: '_id',\n    text: 'STT',\n    formatter: (cell: any, row: any, rowIndex: number) => (\n      <Fragment>\n        {rowIndex + 1 + ((paginationParams.page ?? 0) - 1) * (paginationParams.limit ?? 0)}\n      </Fragment>\n    ),\n    headerClasses: 'text-center',\n    align: 'center'\n  }), [paginationParams]);\n  const masterColumn = isShowId\n    ? _.isArray(columns)\n          ? [idColumn, ...columns]\n          : { _id: idColumn, ...columns }\n    : columns;\n\n  return (\n    <Card className={'master-body-card'}>\n      {title && <CardHeader title={intl.formatMessage({ id: title }).toUpperCase()} />}\n      <CardBody>\n        {hideHeaderButton !== true && (\n          <div className=\"row no-gutters mb-10\">\n            {onCreate && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary fixed-btn-width mr-8\"\n              onClick={onCreate}>\n              <AddIcon style={iconStyle} />\n              {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.ADD_BTN' })}\n            </button>\n            )}\n            {onDeleteMany && (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary fixed-btn-width\"\n                onClick={() => {\n                  onSelectMany && onSelectMany(selectedEntities);\n                  onDeleteMany();\n                }}>\n                <DeleteOutlineOutlinedIcon style={iconStyle} />\n                {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.DELETE_BTN' })}\n              </button>\n            )}\n            {AdditionalActionComponent && (<AdditionalActionComponent />)}\n          </div>\n        )}\n        <MasterTable\n          entities={entities}\n          columns={masterColumn}\n          total={total}\n          loading={loading}\n          paginationParams={paginationParams}\n          setPaginationParams={setPaginationParams}\n          onSelectMany={onSelectMany}\n          selectedEntities={selectedEntities}\n        />\n\n        {/* <MasterTreeStructure /> */}\n      </CardBody>\n    </Card>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport Visibility from '@material-ui/icons/Visibility';\nimport './master-table.scss';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {ActionColumnProps} from '../common-types/common-type';\nimport {IntlShape} from 'react-intl';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport QueueOutlinedIcon from '@material-ui/icons/QueueOutlined';\nimport HistoryIcon from '@material-ui/icons/History';\n\nexport function ActionsColumnFormatter<T>(\n  cellContent: any,\n  row: any,\n  rowIndex: number,\n  {onShowDetail, onDelete, onEdit,onLock, onChangeRole, onClone, onGoHistory, intl}: ActionColumnProps<T> & { intl: IntlShape },\n) {\n  return (\n    <div>\n      {onLock && (<a\n        // to={`/purchase-order/${row.code}`}\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\"\n        onClick={(e) => {\n          onLock(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={ToAbsoluteUrl('/media/svg/vncheck/lock.svg')}\n            title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.LOCK_BTN'})}\n          />\n        </span>\n      </a>)}\n      {onClone &&  (<a\n        title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.CLONE_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility mx-1\"\n        onClick={(e) => {\n          onClone(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <QueueOutlinedIcon className=\"text-primary eye\"/>\n          </span>\n        </span>\n      </a>)}\n      {onShowDetail && (<a\n        title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.SHOW_DETAIL_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n        onClick={(e) => {\n          onShowDetail(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <Visibility className=\"text-primary eye\"/>\n        </span>\n      </a>)}\n      {onEdit && (<a\n        // to={`/purchase-order/${row.code}`}\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\"\n        onClick={(e) => {\n          onEdit(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={ToAbsoluteUrl('/media/svg/icons/Communication/Write.svg')}\n            title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n          />\n        </span>\n      </a>)}\n      {onDelete &&  (<a\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.DELETE_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n        onClick={(e) => {\n          onDelete(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <DeleteIcon className=\"text-primary eye\"/>\n          </span>\n        </span>\n      </a>)}\n      {\n        onGoHistory && (\n          <a\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility mx-1\"\n          onClick={(e) => {\n            onGoHistory(row);\n            e.preventDefault();\n          }}>\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <HistoryIcon className=\"text-primary eye\" />\n          </span>\n        </a>\n        )\n      }\n    </div>\n  );\n}\n\nexport function TickColumnFormatter<T>(\n  cellContent: string | boolean,\n  row: any) {\n  return (cellContent === \"1\" || cellContent === \"true\" || cellContent === true) ? (\n    <CheckCircleIcon style={{color: '#1DBE2D'}}/>) : (<CheckCircleIcon style={{color: '#C4C4C4'}}/>)\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteOutlineOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'History');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H8V4h12v12zm-7-1h2v-4h4V9h-4V5h-2v4H9v2h4z\"\n}), 'QueueOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z\"\n}), 'AccountCircleOutlined');\n\nexports.default = _default;","import React from 'react';\nimport { Card, CardBody } from '../../common-library/card';\nimport { TextareaAutosize } from '@material-ui/core';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { AxiosResponse } from 'axios';\nimport _ from 'lodash';\n\nconst notifyError = (error: string) => {\n  toast.error(error, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nconst PostComments = ({\n                                  entity,\n                                  onComments,\n                                }: {\n  entity?: any;\n  onComments?: (entity: any, data: { content: string }) => Promise<AxiosResponse<any>>;\n}) => {\n  const valueRef = React.useRef<any>({ value: '' });\n  const [commentsArr, setCommentArr] = React.useState(entity?.comments || []);\n\n  React.useEffect(() => {\n    if (entity) {\n      setCommentArr(entity.comments)\n    }\n  }, [entity])\n\n  const handleComment = (entity: any, comment: any) => {\n    if (onComments && entity) {\n      onComments(entity, comment)\n          .then(res => {\n            setCommentArr(res.data);\n            // setComment({ content: '' });\n            valueRef.current.value = '';\n          })\n          .catch(err => {\n            throw err;\n          });\n    }\n  };\n\n  return (\n      <Card>\n        <CardBody>\n          <div className=\"pl-xl-15 pl-md-10 pl-5 mb-5\">\n            <span className=\"modify-subtitle text-primary mt-8\">COMMENTS</span>\n            <div className=\"mt-8 border border-light rounded pt-5 pb-5\">\n              {//entityForEdit.comments\n                // [\n                //   {\n                //     fullName: 'Đầu khấc',\n                //     content:\n                //       'Kế hoạch như tốt mai cho nghỉ việc..........vsdgkdfhkdfoihnsoirnhiosgboisdnbiodrgiosehuigheubguiwebguwebiugwebfiuwebfiuwebguiebgierdnhiordnhoifdnhidofjhpọhpotfjpofk',\n                //   },\n                //   {\n                //     fullName: 'Đầu khấc',\n                //     content:\n                //       'Kế hoạch như tốt mai cho nghỉ việc..........vsdgkdfhkdfoihnsoirnhiosgboisdnbiodrgiosehuigheubguiwebguwebiugwebfiuwebfiuwebguiebgierdnhiordnhoifdnhidofjhpọhpotfjpofk',\n                //   },\n                // ]\n                commentsArr?.map(\n                    (\n                        value: { createdBy: { _id: string; fullName: string }; content: string },\n                        key: number,\n                    ) => (\n                        <div key={key} className=\"row mb-3\">\n                          <div className=\"col-1 text-center\">\n                            <AccountCircleOutlinedIcon style={{ fontSize: 30 }} />\n                          </div>\n                          <div className=\"col-10 bg-light rounded p-3\">\n                            <p className=\"font-bold\">\n                              {_.isString(value.createdBy)\n                                  ? value.createdBy\n                                  : value.createdBy.fullName\n                                      ? value.createdBy.fullName\n                                      : 'Anonymous'}\n                            </p>\n                            <p>{value.content}</p>\n                          </div>\n                        </div>\n                    ),\n                )}\n              <div className=\"row\">\n                <div className=\"col-1\"></div>\n                <div className=\"col-10\">\n                  <div className=\"row\">\n                    <div className=\"col-11\">\n                      <TextareaAutosize\n                          className=\"form-control\"\n                          rowsMin={1}\n                          aria-label=\"empty textarea\"\n                          ref={valueRef}\n                          placeholder=\"Write comment...\"\n                      />\n                    </div>\n                    <div className=\"col-1\">\n                      <button\n                          className=\"btn btn-primary pl-11 pr-11\"\n                          onClick={() => {\n                            if (valueRef.current.value !== '') {\n                              handleComment(entity, { content: valueRef.current.value });\n                            } else {\n                              notifyError('Comment is empty!');\n                            }\n                          }}>\n                        Sent\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n  );\n};\n\nexport default PostComments;\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport {Form, Formik} from 'formik';\nimport {Link, useHistory} from 'react-router-dom';\nimport {Card, CardBody, CardHeader} from '../card';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {ModifyForm} from '../common-types/common-type';\nimport _ from 'lodash';\nimport {ModifyEntityPage} from './modify-entity-page';\nimport {GetHomePage, InitValues} from \"../helpers/common-function\";\nimport {Spinner} from \"react-bootstrap\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport PostComments from \"../../pages/post/post-comments\";\nimport {AxiosResponse} from \"axios\";\n\nfunction EntityCrudPage({\n                          entity,\n                          onModify,\n                          moduleName = 'COMMON_COMPONENT.CREATE_UPDATE.MODULE_NAME',\n                          code,\n                          get,\n                          formModel,\n                          actions,\n                          validation,\n                          loading,\n                          mode,\n                          setEditEntity,\n                          homePageUrl,\n                            allFormButton,\n                            onComments,\n                            showComment = true\n                        }: {\n  // modifyModel: ModifyModel;\n  moduleName?: string;\n  entity?: any;\n  onModify: (values: any) => Promise<any>;\n  code?: string;\n  get?: (code: string) => any;\n  formModel: ModifyForm;\n  mode?: 'horizontal' | 'vertical';\n  actions?: any;\n  validation?: any;\n  autoFill?: any;\n  loading?: boolean;\n  setEditEntity?: (entity: any) => void;\n  homePageUrl?: string\n    allFormButton?: any;\n    onComments?: (entity: any, data: { content: string }) => Promise<AxiosResponse<any>>;\n    showComment?: boolean;\n}) {\n  const intl = useIntl();\n  const history = useHistory();\n  const initValues = useMemo(() => InitValues(formModel), [formModel]);\n\n  const [entityForEdit, setEntityForEdit] = useState(entity);\n  useEffect(()=>{\n    entity && setEntityForEdit(entity);\n  }, [entity])\n\n  useEffect(() => {\n    if (!code && !entity) setEntityForEdit(initValues);\n  }, [initValues, code]);\n  const {_header, ...modifyPanels} = formModel;\n  \n  useEffect(() => {\n    if (code) {\n      get &&\n      get(code).then((res: { data: any }) => {\n        setEntityForEdit({...res.data});\n        if (setEditEntity) { setEditEntity(res.data) }\n      });\n    }\n  }, [code]);\n\n  console.log(entityForEdit)\n  \n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={entityForEdit}\n        validationSchema={validation}\n        onSubmit={(values, {setSubmitting, validateForm}) => {\n          console.log(values)\n          onModify(values).then(() => {\n            history.push(homePageUrl ?? GetHomePage(window.location.pathname))\n          }).catch((err) => {\n            // setSubmitting(false);\n          });\n        }}>\n        {({handleSubmit, setFieldValue}) => (\n          <>\n            <Form className=\"form form-label-right\">\n              {Object.keys(modifyPanels).map((key, index, keys) => {\n                const val = modifyPanels[key];\n                if (_.isString(val))\n                  throw new Error('Sử dụng sai cách ' + key + '\\n' + JSON.stringify(modifyPanels));\n                const {_title, ...panel} = val;\n                return (\n                  <Card key={`entity-crud-card` + key} className={'modify-page'}>\n                    <CardHeader\n                      className={'border-bottom-0'}\n                      title={\n                        index == 0 ? (\n                          <a\n                            onClick={() => history.goBack()}\n                            className={'cursor-pointer text-primary font-weight-boldest'}>\n                            <ArrowBackIosIcon/>\n                            {_.isString(_header) ? intl\n                              .formatMessage(\n                                {id: _header},\n                                {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n                              )\n                              .toUpperCase() : _header(entityForEdit)}\n                          </a>\n                        ) : (\n                          <>\n                            {intl\n                              .formatMessage(\n                                {id: _title},\n                                {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n                              )\n                              .toUpperCase()}\n                          </>\n                        )\n                      }\n                    />\n                    <CardBody>\n                      <ModifyEntityPage\n                        mode={mode}\n                        // className={formPart[key].className}\n                        // images={images}\n                        inputGroups={panel}\n                      />\n                    {allFormButton && allFormButton.type === 'outside' && (\n                        <div className=\"text-right mt-10\">\n                            {Object.keys(allFormButton.data).map(keyss => {\n                                switch (allFormButton['data'][keyss].role) {\n                                    case 'submit':\n                                        return (\n                                            <button\n                                                type={allFormButton['data'][keyss].type}\n                                                onClick={() => {\n                                                    // handleSubmit();\n                                                    allFormButton['data'][keyss].onClick();\n                                                }}\n                                                className={allFormButton['data'][keyss].className}\n                                                key={keyss}>\n                                                {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                            </button>\n                                        );\n\n                                    case 'special':\n                                        return (\n                                            <button\n                                                type={allFormButton['data'][keyss].type}\n                                                onClick={() => {\n                                                    // handleSubmit();\n                                                    allFormButton['data'][keyss].onClick(entityForEdit);\n                                                }}\n                                                className={allFormButton['data'][keyss].className}\n                                                key={keyss}>\n                                                {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                            </button>\n                                        );\n                                    case 'button':\n                                        return (\n                                            <button\n                                                type={allFormButton['data'][keyss].type}\n                                                className={allFormButton['data'][keyss].className}\n                                                key={keyss}\n                                                onClick={() => {\n                                                    allFormButton['data'][keyss].onClick(entityForEdit);\n                                                }}>\n                                                {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                            </button>\n                                        );\n                                    case 'link-button':\n                                        return (\n                                            <Link to={allFormButton['data'][keyss].linkto} key={keyss}>\n                                                <button\n                                                    type={allFormButton['data'][keyss].type}\n                                                    className={allFormButton['data'][keyss].className}>\n                                                    {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                                </button>\n                                            </Link>\n                                        );\n                                }\n                            })}\n                        </div>\n                    )}\n                      {(actions && index === Object.keys(modifyPanels).length - 1) && (\n                        <div className=\"text-right mt-10\" key={key}>\n                          {Object.keys(actions.data).map(keyss => {\n                            switch (actions.data[keyss].role) {\n                              case 'submit':\n                                return (\n                                  <button\n                                    className={actions.data[keyss].className}\n                                    key={keyss}\n                                    type={'submit'}\n                                  >\n                                    {loading === true ? actions.data[keyss].loading ?? (\n                                      <Spinner animation=\"border\" variant=\"light\"\n                                               size=\"sm\"/>) : actions.data[keyss].icon} {intl.formatMessage({id: actions.data[keyss].label})}\n                                  </button>\n                                );\n                              \n                              case 'button':\n                                return (\n                                  <button\n                                    type={actions.data[keyss].type}\n                                    className={actions.data[keyss].className}\n                                    key={keyss}>\n                                    {actions.data[keyss].icon} {intl.formatMessage({id: actions.data[keyss].label})}\n                                  </button>\n                                );\n                              case 'link-button':\n                                return (\n                                  <Link to={actions.data[keyss].linkto} key={keyss}>\n                                    <button\n                                      type={actions.data[keyss].type}\n                                      className={actions.data[keyss].className}>\n                                      {actions.data[keyss].icon} {intl.formatMessage({id: actions.data[keyss].label})}\n                                    </button>\n                                  </Link>\n                                );\n                            }\n                          })}\n                        </div>)\n                      }\n                    </CardBody>\n                  </Card>\n                );\n              })}\n\n            </Form>\n              {showComment !== true || !onComments ? <></> : (entityForEdit?.confirmationStatus === '3'\n                  || (entityForEdit?.isMaster === true && entityForEdit?.confirmationStatus === '2')) ? (\n                  <Card>\n                      <CardBody className={'p-0'}>\n                          <div className=\"mb-5 mt-5\">\n                              <span className=\"text-primary detail-dialog-subtitle mt-8\">BÌNH LUẬN</span>\n                              <div className=\"mt-8 border border-light rounded pt-5 pb-5\">\n                                  {entityForEdit && entityForEdit.comments.length > 0 ? (\n                                      entityForEdit.comments.map(\n                                          (\n                                              value: { createdBy: { _id: string; fullName: string }; content: string },\n                                              key: number,\n                                          ) => (\n                                              <div key={key} className=\"row mb-3\">\n                                                  <div className=\"col-1 text-center\">\n                                                      <AccountCircleOutlinedIcon style={{ fontSize: 30 }} />\n                                                  </div>\n                                                  <div className=\"col-10 bg-light rounded p-3\">\n                                                      <p className=\"font-bold\">{value.createdBy.fullName}</p>\n                                                      <p>{value.content}</p>\n                                                  </div>\n                                              </div>\n                                          ),\n                                      )\n                                  ) : (\n                                      <span>Chưa có bình luận</span>\n                                  )}\n                              </div>\n                          </div>\n                      </CardBody>\n                  </Card>\n              ) : (\n                  <PostComments entity={entityForEdit} onComments={onComments} />\n              )}\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default EntityCrudPage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n    CountProps,\n    CreateProps,\n    DeleteManyProps,\n    DeleteProps,\n    GetAllPropsServer,\n    GetProps,\n    UpdateProps,\n} from '../../common-library/common-types/common-type';\n\nexport const API_URL = API_BASE_URL + '/analysis';\n\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                          queryProps,\n                                                          sortList,\n                                                          paginationProps,\n                                                        }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  }).then(res => {\n      const dataArray = res.data.data[0];\n      const optionData = res.data.data[1];\n      const totalAllPost = optionData[0].totalPost;\n      const newData = dataArray.map((item: any) => ({...item , percent: item.totalPost/totalAllPost}));\n      return {...res, data: newData};\n  });\n};\n\nexport const Count: CountProps<any> = ({\n                                                  queryProps,\n                                                  sortList,\n                                                  paginationProps,\n                                                }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\n\nexport const Get: GetProps<any> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`)\n      .then(res => {\n          const dataArray = res.data.data[0];\n          const optionData = res.data.data[1];\n          console.log(optionData)\n          const academicYear = optionData[0]._id.academicYear;\n          const newData = dataArray.map((item: any) => ({...item , academicYear}));\n\n          console.log({...res, data: newData[0]})\n          return {...res, data: newData[0]};\n      });\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`)\n      .then(res => {\n          const dataArray = res.data.data[0];\n          const optionData = res.data.data[1];\n          const academicYear = optionData[0];\n        const totalAllPost = optionData[0].totalPost;\n        const newData = dataArray.map((item: any) => ({...item , percent: item.totalPost/totalAllPost}));\n\n        return {...res, data: {academicYear, dataArray: newData}};\n      });\n};\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {data:entities},\n  });\n};","import React, {Fragment, ReactElement, useEffect, useMemo, useState} from 'react';\nimport {Count, Create, Delete, DeleteMany, Get, GetAll, GetById, Update} from './analyst.service';\nimport {LandLotModel} from '../land-lot/land-lot.model';\nimport {DefaultPagination, HomePageURL, NormalColumn, SortColumn} from '../../common-library/common-consts/const';\nimport {ActionsColumnFormatter} from '../../common-library/common-components/actions-column-formatter';\nimport {InitMasterProps,} from '../../common-library/helpers/common-function';\nimport {Link, Redirect, Route, Switch, useHistory} from 'react-router-dom';\nimport {\n  MasterBodyColumns,\n  ModifyForm,\n  ModifyInputGroup, ModifyPanel,\n  RenderInfoDetail,\n  SearchModel\n} from \"../../common-library/common-types/common-type\";\nimport {MasterEntityDetailDialog} from \"../../common-library/common-components/master-entity-detail-dialog\";\nimport {MasterHeader} from \"../../common-library/common-components/master-header\";\nimport {MasterBody} from \"../../common-library/common-components/master-body\";\nimport ModifyEntityDialog from \"../../common-library/common-components/modify-entity-dialog\";\nimport {DeleteEntityDialog} from \"../../common-library/common-components/delete-entity-dialog\";\nimport DeleteManyEntitiesDialog from \"../../common-library/common-components/delete-many-entities-dialog\";\nimport isNumeric from \"antd/es/_util/isNumeric\";\nimport {DisplayDateTime, DisplayPercent, DisplayTable} from \"../../common-library/helpers/detail-helpers\";\nimport * as AcademicYearService from \"../academic-year/academic-year.service\";\nimport * as AnalysisService from \"../analyst/analyst.service\";\nimport {MasterEntityDetailPage} from \"../../common-library/common-components/master-detail-page\";\nimport {paddingInfo} from \"../qr-management/qr.render-info\";\nimport EntityCrudPage from \"../../common-library/common-components/entity-crud-page\";\nimport * as CategoryService from \"../category/category.service\";\nimport {ModifyEntityPage} from \"../../common-library/common-components/modify-entity-page\";\nimport * as ShippingAgencyService from \"../shipping-agency/shipping-agency.service\";\nimport {loginCryption} from \"../auth/service/auth-cryptography\";\nimport {useField} from \"formik\";\nimport {LocalGasStation} from \"@material-ui/icons\";\n\nconst DisplayTb = (props: any): any => {\n  const [field, meta, helpers] = useField<any>(props.name);\n  console.log(field.value);\n\n  return <DisplayTable entities={field.value ?? []} columns={props.columns}/>\n}\n\nfunction Analyst() {\n  const {\n    entities,\n    intl,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    setEditEntity,\n    createEntity,\n    selectedEntities,\n    setSelectedEntities,\n    detailEntity,\n    showDelete,\n    setShowDelete,\n    showEdit,\n    setShowEdit,\n    showCreate,\n    setShowCreate,\n    showDetail,\n    setShowDetail,\n    showDeleteMany,\n    setShowDeleteMany,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    error,\n    setError,\n    add,\n    update,\n    get,\n    deleteMany,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<LandLotModel>({\n    getServer: Get,\n    countServer: Count,\n    createServer: Create,\n    deleteServer: Delete,\n    deleteManyServer: DeleteMany,\n    getAllServer: GetAll,\n    updateServer: Update,\n  });\n\n  const moduleName = 'ANALYST.MODULE_NAME';\n  const headerTitle = 'ANALYST.MASTER.HEADER.TITLE';\n  const bodyTitle = 'ANALYST.MASTER.BODY.TITLE';\n  const [createTitle, setCreateTitle] = useState('ANALYST.CREATE.STATISTICS');\n  const updateTitle = 'ANALYST.ElDIT.TITLE';\n  const viewTitle = 'ANALYST.VIEW.TITLE';\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getAll(filterProps);\n\n  }, [paginationProps, filterProps]);\n  const columns = useMemo((): MasterBodyColumns => ({\n    name: {\n      dataField: '_id.name',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.NAME'})}`,\n      ...SortColumn,\n    },\n    startDate: {\n      dataField: '_id.startDate',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.START_DATE'})}`,\n      formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'}/>,\n      ...SortColumn,\n    },\n    closureDate: {\n      dataField: '_id.closureDate',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.CLOSURE_DATE'})}`,\n      formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'}/>,\n      ...SortColumn,\n    },\n    finalClosureDate: {\n      dataField: '_id.finalClosureDate',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.FINAL_CLOSURE_DATE'})}`,\n      formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'}/>,\n      ...SortColumn,\n    },\n    totalStudent: {\n      dataField: 'totalStudent',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.TOTAL_STUDENT'})}`,\n      ...SortColumn,\n    },\n    totalPost: {\n      dataField: 'totalPost',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.TOTAL_POST'})}`,\n      ...SortColumn,\n    },\n    percent: {\n      dataField: 'percent',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.PERCENT'})}`,\n      formatter: DisplayPercent,\n      ...SortColumn,\n    },\n    action: {\n      dataField: 'action',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.TABLE.ACTION_COLUMN'})}`,\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        intl,\n        onShowDetail: (entity: LandLotModel) => {\n          // get(entity._id);\n          // setShowDetail(true);\n          // console.log(entity)\n          history.push(`${window.location.pathname}/${entity._id._id}`);\n        },\n      },\n      ...NormalColumn,\n      style: {minWidth: '130px'},\n    },\n  }), []);\n  const modifyModel: ModifyPanel = {\n    _title: headerTitle,\n    commonInfo: {\n      _subTitle: 'EMPTY',\n      _className: 'col-12 row text-primary',\n      _inputClassName: 'col-4',\n      'academicYear._id.academicYear.name': {\n        _type: 'string',\n        label: 'ACADEMIC_YEAR.MASTER.HEADER.NAME',\n        disabled: true,\n      },\n      'academicYear._id.academicYear.startDate': {\n        _type: 'date-time',\n        label: 'ACADEMIC_YEAR.MASTER.HEADER.START_DATE',\n        // onSearch: UserService.GetAll,\n        disabled: true,\n      },\n      'academicYear._id.academicYear.finalClosureDate': {\n        _type: 'date-time',\n        label: 'ACADEMIC_YEAR.MASTER.HEADER.FINAL_CLOSURE_DATE',\n        // onSearch: UserService.GetAll,\n        disabled: true,\n      },\n        'academicYear.totalStudent': {\n        _type: 'string',\n        label: 'ACADEMIC_YEAR.MASTER.HEADER.TOTAL_STUDENT',\n        // onSearch: UserService.GetAll,\n        disabled: true,\n      },\n        'academicYear.totalPost': {\n        _type: 'string',\n        label: 'ACADEMIC_YEAR.MASTER.HEADER.TOTAL_POST',\n        // onSearch: UserService.GetAll,\n        disabled: true,\n      },\n    },\n  };\n  const tableModel = useMemo((): MasterBodyColumns => ({\n      faculty: {\n      dataField: '_id.faculty',\n      text: `${intl.formatMessage({id: 'ANALYST.MASTER.HEADER.FACULTY'})}`,\n      ...SortColumn,\n    },\n      totalStudent: {\n          dataField: 'totalStudent',\n          text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.TOTAL_STUDENT'})}`,\n          ...SortColumn,\n      },\n      totalPost: {\n          dataField: 'totalPost',\n          text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.TOTAL_POST'})}`,\n          ...SortColumn,\n      },\n      percent: {\n          dataField: 'percent',\n          text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.PERCENT'})}`,\n          formatter: DisplayPercent,\n          ...SortColumn,\n      },\n  }), []);\n  const modifyModel2: ModifyPanel = {\n    _title: headerTitle,\n    table: {\n      _subTitle: 'EMPTY',\n      _className: 'col-12 text-primary',\n      '': {\n        _type: 'custom',\n        component: () => {\n          return <DisplayTb name={'dataArray'} columns={tableModel}/>\n        }\n      },\n    },\n  };\n\n\n  const createForm = useMemo((): ModifyForm => ({\n    panel1: modifyModel,\n    panel2: modifyModel2,\n    _header: ((entity: any) => entity?.academicYear._id.academicYear.name) as any,\n  }), []);\n\n  const masterEntityDetailDialog: RenderInfoDetail = useMemo(() => ([\n    {\n      className: 'col-12 mb-5',\n      // titleClassName: 'col-3 mb-3',\n      dataClassName: 'col-12 mb-3',\n      data: {\n        'ss': {\n          formatter: (input, entity) => {\n            console.log(input, entity)\n            return <EntityCrudPage onModify={null as any} formModel={createForm} entity={entity}/>\n          }\n        },\n        // 'academicYear.name': {\n        //   title: 'ACADEMIC_YEAR.HEADER.ACADEMIC_YEAR.NAME',\n        //   formatter: (input: any) => {\n        //     console.log(input)\n        //     return <>{input}</>\n        //   }\n        // },\n        // 'academicYear.startDate': {\n        //   title: 'ACADEMIC_YEAR.HEADER.ACADEMIC_YEAR.START_DATE',\n        //   formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n        // },\n        // 'academicYear.finalClosureDate': {\n        //   title: 'ACADEMIC_YEAR.HEADER.ACADEMIC_YEAR.FINAL_CLOSURE_DATE',\n        //   formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n        // },\n        // 'totalStudent': {\n        //   title: 'ACADEMIC_YEAR.HEADER.ACADEMIC_YEAR.TOTAL_STUDENT',\n        // },\n        // 'totalPost': {\n        //   title: 'ACADEMIC_YEAR.HEADER.ACADEMIC_YEAR.TOTAL_POST',\n        // },\n      },\n      // titleClassName: 'col-3',\n    },\n  ]), []);\n\n  const academicYearInfo: RenderInfoDetail = useMemo(() => ([\n    {\n      header: 'ACADEMIC_YEAR.HEADER.DETAIL_INFO',\n      className: 'col-12 mb-5',\n      titleClassName: 'col-3 mb-3',\n      dataClassName: 'col-9 mb-3 pl-5',\n      data: {\n        'scanAt': {\n          title: 'Ngày gán QR',\n          formatter: (input: any) => (<DisplayDateTime input={input}/>),\n        },\n        'scanBy.fullName': {\n          title: 'Người gán QR',\n        },\n      },\n    }\n  ]), []);\n\n\n  const initSearchModel = useMemo<SearchModel>(() => (\n    {\n      name: {\n        type: 'search-select',\n        label: 'Academic Year',\n        onSearch: AcademicYearService.GetAll,\n        keyField: 'name',\n      },\n      startDate: {\n        type: 'date-time',\n        label: 'Start time',\n      }\n    }), []);\n  const [searchModel, setSearchModel] = useState(initSearchModel);\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path=\"/analyst/:code\">\n          {({match}) => (\n            <EntityCrudPage\n              onModify={update}\n              moduleName={moduleName}\n              mode={\"vertical\"}\n              //  modifyModel={modifyModel}\n              code={match?.params.code}\n              get={GetById}\n              formModel={createForm}\n            />\n          )}\n        </Route>\n        <Route path=\"/analyst\">`\n          <MasterHeader\n            title={headerTitle}\n            onSearch={(value) => {\n              setPaginationProps(DefaultPagination);\n              if (value.name !== undefined) setFilterProps({...value, name: value.name.name})\n              else setFilterProps(value)\n            }}\n            searchModel={searchModel}\n          />\n          <MasterBody\n            title={bodyTitle}\n            selectedEntities={selectedEntities}\n            onSelectMany={setSelectedEntities}\n            entities={entities}\n            total={total}\n            columns={columns}\n            loading={loading}\n            paginationParams={paginationProps}\n            setPaginationParams={setPaginationProps}\n            isShowId={true}\n          />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\n\nexport default Analyst;\n"],"sourceRoot":""}