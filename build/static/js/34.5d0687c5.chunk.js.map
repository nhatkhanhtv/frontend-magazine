{"version":3,"sources":["app/pages/shipping-agency/shipping-agency.service.tsx","app/pages/shipping-agency/shipping-agency.tsx"],"names":["API_URL","API_BASE_URL","BULK_API_URL","Create","data","axios","post","type","GetAll","queryProps","sortList","paginationProps","get","params","Count","Get","entity","_id","GetById","Update","put","Delete","delete","DeleteMany","entities","listAgencies","moduleName","ShippingAgency","intl","useIntl","history","useHistory","InitMasterProps","getServer","ShippingAgencyService","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","deleteEntity","setDeleteEntity","editEntity","selectedEntities","setSelectedEntities","detailEntity","setDetailEntity","showDelete","setShowDelete","showCreate","showDetail","setShowDetail","showDeleteMany","setShowDeleteMany","setPaginationProps","filterProps","setFilterProps","total","loading","error","add","update","deleteMany","deleteFn","getAll","useEffect","columns","useMemo","code","dataField","text","formatMessage","id","SortColumn","align","name","phone","status","formatter","TickColumnFormatter","action","ActionsColumnFormatter","formatExtraData","onShowDetail","onDelete","onEdit","push","window","location","pathname","NormalColumn","style","minWidth","masterEntityDetailDialog","header","className","dataClassName","title","address","addressString","district","city","state","titleClassName","fullName","keyField","email","useState","initOwner","setInitOwner","setState","setCity","ownerState","setOwnerState","ownerCity","setOwnerCity","managementUnit","setManagementUnit","owner","ManagementUnitService","limit","then","res","index","findIndex","value","RoleService","ress","roleIndex","role","getCity","useCallback","GetCity","getDistrict","GetDistrict","getOwnerCity","console","log","getOwnerDistrict","group1","_subTitle","_className","_type","label","disabled","required","onSearch","GetState","values","onChange","setFieldValue","setFieldTouched","taxId","images","group2","username","gender","options","birthDay","image","isArray","maxNumber","createForm","_header","panel1","_title","updateForm","validationSchema","Yup","shape","max","min","Date","actions","save","linkto","undefined","icon","Spinner","iconStyle","animation","variant","size","cancel","initCreateValues","InitValues","_init","path","onModify","formModel","validation","homePageUrl","HomePageURL","shippingAgency","match","DefaultPagination","searchModel","onCreate","onDeleteMany","onSelectMany","paginationParams","setPaginationParams","isShowId","onHide","show","renderInfo","isShow","bodyTitle"],"mappings":"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","file":"static/js/34.5d0687c5.chunk.js","sourcesContent":["import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\nimport {ShippingAgencyModel} from \"./shipping-agency.model\";\n\nexport const API_URL = API_BASE_URL + '/shipping-agency';\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, { ...data, type: '1' });\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                 queryProps,\n                                                 sortList,\n                                                 paginationProps,\n                                               }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const Count: CountProps<any> = ({\n                                         queryProps,\n                                         sortList,\n                                         paginationProps,\n                                       }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const Get: GetProps<ShippingAgencyModel> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<ShippingAgencyModel> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, { ...entity, type: '1' });\n};\n\nexport const Delete: DeleteProps<ShippingAgencyModel> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {listAgencies: entities},\n  });\n};\n","import React, {Fragment, useCallback, useEffect, useMemo, useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport {DefaultPagination, HomePageURL, iconStyle, NormalColumn, SortColumn} from '../../common-library/common-consts/const';\nimport {MasterHeader} from '../../common-library/common-components/master-header';\nimport {MasterBody} from '../../common-library/common-components/master-body';\nimport {\n  ActionsColumnFormatter,\n  TickColumnFormatter\n} from '../../common-library/common-components/actions-column-formatter';\nimport {DeleteEntityDialog} from '../../common-library/common-components/delete-entity-dialog';\nimport DeleteManyEntitiesDialog from '../../common-library/common-components/delete-many-entities-dialog';\nimport {\n  ModifyForm,\n  ModifyInputGroup,\n  RenderInfoDetail,\n  SearchModel\n} from '../../common-library/common-types/common-type';\nimport {InitMasterProps, InitValues,} from '../../common-library/helpers/common-function';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport EntityCrudPage from '../../common-library/common-components/entity-crud-page';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport * as ShippingAgencyService from './shipping-agency.service'\nimport {ShippingAgencyModel} from './shipping-agency.model';\nimport {MasterEntityDetailDialog} from \"../../common-library/common-components/master-entity-detail-dialog\";\nimport {GetCity, GetDistrict, GetState} from \"../address/address.service\";\nimport * as RoleService from \"../role/role.service\";\nimport * as Yup from \"yup\";\nimport * as ManagementUnitService from '../management-organization/management-organization.service';\n\nimport {Spinner} from \"react-bootstrap\";\n\nconst headerTitle = 'PRODUCT_TYPE.MASTER.HEADER.TITLE';\nconst tableTitle = 'SHIPPING_AGENCY.MASTER.TABLE.TITLE';\nconst detailDialogTitle = 'SHIPPING_AGENCY.DETAIL_DIALOG.TITLE';\nconst moduleName = 'SHIPPING_AGENCY.MODULE_NAME';\nconst deleteDialogTitle = 'SHIPPING_AGENCY.DELETE_DIALOG.TITLE';\nconst deleteDialogBodyTitle = 'SHIPPING_AGENCY.DELETE_DIALOG.BODY_TITLE';\nconst createTitle = 'SHIPPING_AGENCY.CREATE.HEADER';\nconst updateTitle = 'SHIPPING_AGENCY.UPDATE.HEADER';\n\nfunction ShippingAgency() {\n  const intl = useIntl();\n  \n  const history = useHistory();\n  const {\n    entities,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    selectedEntities,\n    setSelectedEntities,\n    detailEntity,\n    setDetailEntity,\n    showDelete,\n    setShowDelete,\n    showCreate,\n    showDetail,\n    setShowDetail,\n    showDeleteMany,\n    setShowDeleteMany,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    error,\n    add,\n    update,\n    get,\n    deleteMany,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<ShippingAgencyModel>({\n    getServer: ShippingAgencyService.Get,\n    countServer: ShippingAgencyService.Count,\n    createServer: ShippingAgencyService.Create,\n    deleteServer: ShippingAgencyService.Delete,\n    deleteManyServer: ShippingAgencyService.DeleteMany,\n    getAllServer: ShippingAgencyService.GetAll,\n    updateServer: ShippingAgencyService.Update,\n  });\n  \n  useEffect(() => {\n    getAll({ ...filterProps, type: '1' });\n  }, [paginationProps, filterProps]);\n  \n  const columns = useMemo(() => {\n    return {\n      code: {\n        dataField: 'code',\n        text: `${intl.formatMessage({id: 'SHIPPING_AGENCY.MASTER.TABLE.CODE_COLUMN'})}`,\n        ...SortColumn,\n        align: 'center',\n      },\n      name: {\n        dataField: 'name',\n        text: `${intl.formatMessage({id: 'SHIPPING_AGENCY.MASTER.TABLE.NAME_COLUMN'})}`,\n        ...SortColumn,\n        align: 'center',\n      },\n      phone: {\n        dataField: 'phone',\n        text: `${intl.formatMessage({id: 'SHIPPING_AGENCY.MASTER.TABLE.PHONE_COLUMN'})}`,\n        ...SortColumn,\n        align: 'center',\n      },\n      status: {\n        dataField: 'status',\n        text: `${intl.formatMessage({id: 'SHIPPING_AGENCY.MASTER.TABLE.STATUS_COLUMN'})}`,\n        formatter: TickColumnFormatter,\n        ...SortColumn,\n        align: 'center',\n      },\n      action: {\n        dataField: 'action',\n        text: `${intl.formatMessage({id: 'SHIPPING_AGENCY.MASTER.TABLE.ACTION_COLUMN'})}`,\n        formatter: ActionsColumnFormatter,\n        formatExtraData: {\n          intl,\n          onShowDetail: (entity: ShippingAgencyModel) => {\n            get(entity);\n            setShowDetail(true);\n            setDetailEntity(entity);\n          },\n          onDelete: (entity: ShippingAgencyModel) => {\n            setDeleteEntity(entity);\n            setShowDelete(true);\n          },\n          onEdit: (entity: ShippingAgencyModel) => {\n            history.push(`${window.location.pathname}/${entity._id}`);\n          },\n        },\n        ...NormalColumn,\n        style: {minWidth: '130px'},\n      },\n    }\n  }, []);\n  \n  const masterEntityDetailDialog: RenderInfoDetail = useMemo((): RenderInfoDetail => [\n    {\n      header: 'SHIPPING_AGENCY.DETAIL_DIALOG.SHIPPING.SUBTITLE',\n      className: 'col-7',\n      dataClassName: 'col-7',\n      data: {\n        code: {title: 'SHIPPING_AGENCY.DETAIL_DIALOG.SHIPPING.CODE'},\n        name: {title: 'SHIPPING_AGENCY.DETAIL_DIALOG.SHIPPING.NAME'},\n        address: {\n          title: 'SHIPPING_AGENCY.DETAIL_DIALOG.SHIPPING.ADDRESS',\n          formatter: (address: any) => {\n            const addressString = `${address.address}, ${address.district}, ${address.city}, ${address.state}`;\n            return (<>{addressString}</>);\n          }\n        },\n        phone: {title: 'SHIPPING_AGENCY.DETAIL_DIALOG.SHIPPING.PHONE_NUMBER'},\n        status: {\n          title: 'SHIPPING_AGENCY.DETAIL_DIALOG.SHIPPING.STATUS',\n          formatter: TickColumnFormatter\n        },\n      },\n    },\n    {\n      header: 'SHIPPING_AGENCY.DETAIL_DIALOG.OWNER.SUBTITLE',\n      className: 'col-5',\n      titleClassName: 'col-5',\n      dataClassName: 'col-7',\n      data: {\n        fullName: {\n          title: 'SHIPPING_AGENCY.DETAIL_DIALOG.OWNER.FULL_NAME',\n          keyField: 'owner.fullName'\n        }, email: {\n          title: 'SHIPPING_AGENCY.DETAIL_DIALOG.OWNER.EMAIL',\n          keyField: 'owner.email'\n        }, phone: {\n          title: 'SHIPPING_AGENCY.DETAIL_DIALOG.OWNER.PHONE_NUMBER',\n          keyField: 'owner.phone'\n        },\n      },\n    },\n  ], []);\n  \n  const searchModel: SearchModel = {\n    code: {\n      type: 'string',\n      label: 'SHIPPING_AGENCY.MASTER.SEARCH.CODE',\n    },\n    name: {\n      type: 'string',\n      label: 'SHIPPING_AGENCY.MASTER.SEARCH.NAME',\n    },\n    phone: {\n      type: 'string-number',\n      label: 'SHIPPING_AGENCY.MASTER.SEARCH.PHONE',\n    },\n  };\n\n  const [initOwner, setInitOwner] = useState({})\n  const [state, setState] = useState<string | null | undefined>(null);\n  const [city, setCity] = useState<string | null | undefined>(null);\n  const [ownerState, setOwnerState] = useState<string | null | undefined>(null);\n  const [ownerCity, setOwnerCity] = useState<string | null | undefined>(null);\n  const [managementUnit, setManagementUnit] = useState<any>(null);\n\n  useEffect(() => {\n    setState(editEntity?.address?.state);\n    setCity(editEntity?.address?.city);\n  }, [editEntity]);\n\n  useEffect(() => {\n    const owner: any = {}\n    ManagementUnitService.getAll({ queryProps: { ...filterProps }, paginationProps: {...paginationProps, limit: 100} }).then(res => {\n      const index = res.data.data.findIndex(value => (value.name === 'Phòng Vận chuyển' || value.code === '00006'))\n      if (index !== -1) {\n        owner.managementUnit = res.data.data[index]\n        RoleService.GetAll({\n          queryProps: { ...filterProps, managementUnit: { ...owner.managementUnit } },\n          paginationProps,\n        }).then(ress => {\n          const roleIndex = ress.data.data.findIndex(value => value.name === 'Chủ đơn vị vận chuyển')\n          if (roleIndex !== -1) {\n            owner.role = ress.data.data[roleIndex]\n            setInitOwner(owner)\n          }\n         \n        });\n      }\n    })\n  }, [])\n\n  const getCity = useCallback(({queryProps, paginationProps}: any): Promise<any> => {\n    return GetCity({queryProps: {...queryProps, state}, paginationProps})\n  }, [state]);\n  const getDistrict = useCallback(({queryProps, paginationProps}: any): Promise<any> => {\n    return GetDistrict({queryProps: {...queryProps, city}, paginationProps})\n  }, [city]);\n  const getOwnerCity = useCallback(\n    ({ queryProps, paginationProps }: any): Promise<any> => {\n      console.log(ownerState);\n      return GetCity({ queryProps: { ...queryProps, state: ownerState }, paginationProps });\n    },\n    [ownerState],\n  );\n  const getOwnerDistrict = useCallback(\n    ({ queryProps, paginationProps }: any): Promise<any> => {\n      return GetDistrict({ queryProps: { ...queryProps, city: ownerCity }, paginationProps });\n    },\n    [ownerCity],\n  );\n  \n  const group1 = useMemo((): ModifyInputGroup => ({\n    _subTitle: 'THÔNG TIN CHUNG',\n    _className: 'col-6 pr-xl-15 pr-md-10 pr-5',\n    code: {\n      _type: 'string',\n      label: 'SHIPPING_AGENCY.MODIFY.CODE',\n      disabled: true,\n    },\n    name: {\n      _type: 'string',\n      required: true,\n      label: 'SHIPPING_AGENCY.MODIFY.NAME',\n    },\n    address: {\n      _type: 'object',\n      state: {\n        _type: 'search-select',\n        onSearch: GetState,\n        disabled: (values: any) => {\n          console.log(values)\n        },\n        onChange: (value: any, {setFieldValue, setFieldTouched}: any) => {\n          console.log(state, value);\n          if (!value || state != value) {\n            setCity(null);\n            setFieldValue('address.city', '');\n            setFieldTouched('address.city', false);\n            setFieldValue('address.district', '');\n            setFieldTouched('address.district', false);\n          }\n          setState(value);\n        },\n        required: true,\n        label: 'SHIPPING_AGENCY.MODIFY.STATE',\n      },\n      city: {\n        _type: 'search-select',\n        onSearch: getCity,\n        // selectField: 'code',\n        required: true,\n        onChange: (value: any, {setFieldValue, setFieldTouched}: any) => {\n          if (!value || city != value) {\n            setFieldValue('address.district', '');\n            setFieldTouched('address.district', false);\n          }\n          setCity(value);\n        },\n        disabled: (values: any) => {\n          return (values?.address?.state === '');\n        },\n        label: 'SHIPPING_AGENCY.MODIFY.CITY',\n      },\n      district: {\n        _type: 'search-select',\n        onSearch: getDistrict,\n        // selectField: 'code',\n        required: true,\n        disabled: (values: any) => {\n          return (values?.address?.city === '');\n        },\n        label: 'SHIPPING_AGENCY.MODIFY.DISTRICT',\n      },\n      address: {\n        _type: 'string',\n        required: true,\n        label: 'SHIPPING_AGENCY.MODIFY.ADDRESS',\n      },\n    },\n    status: {\n      _type: 'boolean',\n      label: 'SHIPPING_AGENCY.MODIFY.STATUS',\n    },\n    phone: {\n      _type: 'string-number',\n      required: true,\n      label: 'SHIPPING_AGENCY.MODIFY.PHONE_NUMBER',\n    },\n    taxId: {\n      _type: 'string-number',\n      required: true,\n      label: 'SHIPPING_AGENCY.MODIFY.TAX_NUMBER',\n    },\n    images: {\n      _type: 'image',\n      label: 'SHIPPING_AGENCY.MODIFY.IMAGE',\n    },\n  }), [getCity, getDistrict]);\n  const group2 = useMemo(() :ModifyInputGroup => ({\n    _subTitle: 'THÔNG TIN CHỦ ĐƠN VỊ',\n    _className: 'col-6 pl-xl-15 pl-md-10 pl-5',\n    owner: {\n      _type: 'object',\n      code: {\n        _type: 'string',\n        label: 'AGENCY.MODIFY.USER_CODE',\n        disabled: true\n      },\n      username: {\n        _type: 'string',\n        label: 'SHIPPING_AGENCY.MODIFY.USER_NAME',\n        required: true,\n      },\n      fullName: {\n        _type: 'string',\n        required: true,\n        label: 'SHIPPING_AGENCY.MODIFY.DISPLAY_NAME',\n      },\n      phone: {\n        _type: 'string-number',\n        required: true,\n        label: 'SHIPPING_AGENCY.MODIFY.PHONE_NUMBER',\n      },\n      email: {\n        _type: 'email',\n        required: true,\n        label: 'SHIPPING_AGENCY.MODIFY.EMAIL',\n      },\n      gender: {\n        _type: 'radio',\n        required: true,\n        options: [\n          {label: 'SHIPPING_AGENCY.MODIFY.GENDER_OPTION.MALE', value: '1'},\n          {label: 'SHIPPING_AGENCY.MODIFY.GENDER_OPTION.FEMALE', value: '0'}\n        ],\n        label: 'SHIPPING_AGENCY.MODIFY.GENDER',\n      },\n      birthDay: {\n        _type: 'date-time',\n        required: true,\n        label: 'SHIPPING_AGENCY.MODIFY.DATE_OF_BIRTH',\n      },\n      address: {\n        _type: 'object',\n        state: {\n          _type: 'search-select',\n          onSearch: GetState,\n          disabled: (values: any) => {\n            console.log(values);\n          },\n          onChange: (value: any, { setFieldValue, setFieldTouched }: any) => {\n            if (ownerState != value) {\n              setOwnerCity(null);\n              setFieldValue('owner.address.city', '');\n              setFieldTouched('owner.address.city', false);\n              setFieldValue('owner.address.district', '');\n              setFieldTouched('owner.address.district', false);\n            }\n            setOwnerState(value);\n          },\n          required: true,\n          label: 'AGENCY.MODIFY.STATE',\n        },\n        city: {\n          _type: 'search-select',\n          onSearch: getOwnerCity,\n          // selectField: 'code',\n          required: true,\n          onChange: (value: any, { setFieldValue, setFieldTouched }: any) => {\n            if (ownerCity != value) {\n              setFieldValue('owner.address.district', '');\n              setFieldTouched('owner.address.district', false);\n            }\n            setOwnerCity(value);\n          },\n          disabled: (values: any) => {\n            return values?.owner?.address?.state === '';\n          },\n          label: 'AGENCY.MODIFY.CITY',\n        },\n        district: {\n          _type: 'search-select',\n          onSearch: getOwnerDistrict,\n          // selectField: 'code',\n          required: true,\n          disabled: (values: any) => {\n            return values?.owner?.address?.city === '';\n          },\n          label: 'AGENCY.MODIFY.DISTRICT',\n        },\n        address: {\n          _type: 'string',\n          required: true,\n          label: 'AGENCY.MODIFY.ADDRESS',\n        },\n      },\n      managementUnit: {\n        _type: 'search-select',\n        label: 'USER.MODIFY.MANAGEMENT_UNIT',\n        keyField: 'name',\n        required: true,\n        onSearch: ManagementUnitService.getAll,\n        onChange: (value: any, { setFieldValue }: any) => {\n          if (managementUnit != value) {\n            setFieldValue('role', null);\n          }\n          setManagementUnit(value);\n        },\n        disabled: true\n      },\n      role: {\n        _type: 'search-select',\n        label: 'USER.MODIFY.ROLE',\n        keyField: 'name',\n        onSearch: ({ queryProps, paginationProps }: any, values: any): Promise<any> => {\n          return RoleService.GetAll({\n            queryProps: { ...queryProps, managementUnit: { ...values?.managementUnit } },\n            paginationProps,\n          });\n        },\n        disabled: true,\n      },\n      image: {\n        _type: 'image',\n        isArray: false,\n        maxNumber: 1,\n        label: 'SHIPPING_AGENCY.MODIFY.REPRESENT_IMAGE',\n      },\n    }\n  }), [showCreate, getOwnerCity, getOwnerDistrict, managementUnit]);\n  \n  const createForm = useMemo((): ModifyForm => ({\n    _header: createTitle,\n    panel1: {\n      _title: '',\n      group1: group1,\n      group2: group2,\n    },\n  }), [group1, group2]);\n  const updateForm = useMemo((): ModifyForm => {\n    return ({...createForm, _header: updateTitle});\n  }, [createForm]);\n  const validationSchema = useMemo(() => Yup.object().shape({\n    phone: Yup.string()\n      .max(11, 'VALIDATE.ERROR.INVALID_INPUT')\n      .min(8, 'VALIDATE.ERROR.INVALID_INPUT'),\n    taxId: Yup.string()\n      .min(10, 'VALIDATE.ERROR.INVALID_INPUT')\n      .max(13, 'VALIDATE.ERROR.INVALID_INPUT'),\n    owner: Yup.object().shape({\n      phone: Yup.string()\n        .max(11, 'VALIDATE.ERROR.INVALID_INPUT')\n        .min(8, 'VALIDATE.ERROR.INVALID_INPUT'),\n      birthDay: Yup.date().max(new Date(),'VALIDATE.ERROR.MUST_LESS_THAN_TODAY')\n    })\n  }), []);\n  const actions: any = useMemo(() => ({\n    type: 'inside',\n    data: {\n      save: {\n        role: 'submit',\n        type: 'submit',\n        linkto: undefined,\n        className: 'btn btn-primary mr-8 fixed-btn-width',\n        label: 'SAVE_BTN_LABEL',\n        icon: loading ? (<Spinner style={iconStyle} animation=\"border\" variant=\"light\" size=\"sm\"/>) :\n          (<SaveOutlinedIcon style={iconStyle}/>)\n      },\n      cancel: {\n        role: 'link-button',\n        type: 'button',\n        linkto: '/shipping-agency',\n        className: 'btn btn-outline-primary fixed-btn-width',\n        label: 'CANCEL_BTN_LABEL',\n        icon: <CancelOutlinedIcon/>,\n      }\n    }\n  }), [loading]);\n\n  const initCreateValues = useMemo((): any => ({ ...InitValues(createForm), status: '0',}), [\n    createForm,\n  \n  ]);\n\n  const _init = useMemo(() => ({ ...initCreateValues, owner: { ...initCreateValues.owner, ...initOwner } }), [initCreateValues, initOwner])\n\n  \n  return (\n    <Fragment>\n      <Switch>\n        <Route path=\"/shipping-agency/new\">\n          <EntityCrudPage\n            moduleName={moduleName}\n            onModify={add}\n            formModel={createForm}\n            entity={_init}\n            actions={actions}\n            validation={validationSchema}\n            homePageUrl={HomePageURL.shippingAgency}\n          />\n        </Route>\n        <Route path={`/shipping-agency/:code`}>\n          {({match}) => (\n            <EntityCrudPage\n              onModify={update}\n              moduleName={moduleName}\n              //  modifyModel={modifyModel}\n              code={match?.params.code}\n              get={ShippingAgencyService.GetById}\n              formModel={updateForm}\n              actions={actions}\n              validation={validationSchema}\n              homePageUrl={HomePageURL.shippingAgency}\n            />\n          )}\n        </Route>\n        <Route path=\"/shipping-agency\">\n          <MasterHeader\n            title={headerTitle}\n            onSearch={(value) => {\n              setPaginationProps(DefaultPagination)\n              setFilterProps(value)\n            }}\n            searchModel={searchModel}\n          />\n          <MasterBody\n            title={tableTitle}\n            onCreate={() => {\n              history.push(`${window.location.pathname}/new`);\n            }}\n            onDeleteMany={() => setShowDeleteMany(true)}\n            selectedEntities={selectedEntities}\n            onSelectMany={setSelectedEntities}\n            entities={entities}\n            total={total}\n            columns={columns as any}\n            loading={loading}\n            paginationParams={paginationProps}\n            setPaginationParams={setPaginationProps}\n            isShowId={true}\n          />\n          \n          {/* <MasterTreeStructure /> */}\n        </Route>\n      </Switch>\n      <MasterEntityDetailDialog\n        title={detailDialogTitle}\n        moduleName={moduleName}\n        entity={detailEntity}\n        onHide={() => {\n          setShowDetail(false);\n        }}\n        show={showDetail}\n        size={'lg'}\n        renderInfo={masterEntityDetailDialog}/>\n      <DeleteEntityDialog\n        entity={deleteEntity}\n        onDelete={deleteFn}\n        isShow={showDelete}\n        loading={loading}\n        error={error}\n        onHide={() => {\n          setShowDelete(false);\n        }}\n        title={deleteDialogTitle}\n        bodyTitle={deleteDialogBodyTitle}\n      />\n      <DeleteManyEntitiesDialog\n        moduleName={moduleName}\n        selectedEntities={selectedEntities}\n        loading={loading}\n        isShow={showDeleteMany}\n        onDelete={deleteMany}\n        error={error}\n        onHide={() => {\n          setShowDeleteMany(false);\n        }}\n      />\n    </Fragment>\n  );\n}\n\nexport default ShippingAgency\n"],"sourceRoot":""}