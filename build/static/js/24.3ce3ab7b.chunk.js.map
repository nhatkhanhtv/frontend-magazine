{"version":3,"sources":["app/common-library/common-components/master-header.tsx","../node_modules/@material-ui/icons/Search.js","app/common-library/common-components/master-entity-detail-dialog.tsx","app/common-library/common-components/master-body.tsx","../node_modules/@material-ui/icons/DeleteOutlineOutlined.js","../node_modules/@material-ui/icons/History.js","app/pages/customers/customers.service.tsx","app/pages/customers/customers.model.tsx","app/pages/customers/customers-management-history.tsx","app/pages/customers/customers-management.tsx"],"names":["MasterHeader","title","onSearch","searchModel","initValue","onClickBack","value","intl","useIntl","defaultClassName","className","onClick","formatMessage","id","toUpperCase","initialValues","onSubmit","values","onReset","data","handleSubmit","resetForm","handleBlur","handleChange","setFieldValue","Object","keys","map","key","type","name","undefined","t","style","iconStyle","handleResetForm","src","ToAbsoluteUrl","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","React","_default","createElement","d","MasterEntityDetailDialog","moduleName","show","entity","onHide","renderInfo","size","aria-labelledby","dialogClassName","Header","closeButton","Title","MasterEntityDetail","Footer","Body","index","header","dataKey","titleClassName","dataClassName","displayInfo","fieldName","keyField","displayData","indexOf","getFieldV3","formatter","_","isNumber","isString","JSON","stringify","MasterBody","entities","total","loading","paginationParams","setPaginationParams","onSelectMany","onCreate","selectedEntities","columns","onDeleteMany","isShowId","hideHeaderButton","additionalActionComponent","AdditionalActionComponent","idColumn","useMemo","dataField","text","cell","row","rowIndex","page","limit","headerClasses","align","masterColumn","isArray","_id","API_URL","API_BASE_URL","API_ORDER_DETAIL","BULK_API_URL","Create","axios","post","GetAll","queryProps","sortList","paginationProps","get","params","Count","Get","Update","put","Delete","delete","DeleteMany","listSpecies","historyData","Date","buyDate","species","qr","store","seller","CustomersManagementView","code","history","onFetch","useState","setLoading","setEntity","DefaultPagination","setPaginationProps","setTotal","orderCode","setOrderCode","useEffect","then","res","products","paging","customer","catch","err","console","log","finally","goBack","CustomersManagement","useHistory","InitMasterProps","getServer","CustomersService","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","detailEntity","showDetail","setShowDetail","filterProps","setFilterProps","getAll","SortDefault","sortField","setSortField","sortBy","sortType","order","masterColumns","classes","paddingTop","SortColumn","fullName","username","createdAt","Intl","DateTimeFormat","format","action","push","pathname","state","NormalColumn","minWidth","historyColumn","fontWeight","cursor","sellAgency","location","productInPurChaseOrderColumn","packing","masterEntityDetailDialog","image","width","height","images","gender","birthDay","email","exact","path","match","label"],"mappings":"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","file":"static/js/24.3ce3ab7b.chunk.js","sourcesContent":["import React from 'react';\nimport {useIntl} from 'react-intl';\nimport {Formik} from 'formik';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Card, CardBody, CardHeader} from '../card';\nimport SVG from 'react-inlinesvg';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {SearchModel} from '../common-types/common-type';\n// import InfiniteScroll from 'react-infinite-scroll-component';\nimport {iconStyle} from '../common-consts/const';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport './master-header.css';\nimport {\n  InputDateTime,\n  InputNumber,\n  InputSearchSelect,\n  InputString,\n  InputStringNumber,\n  InputTreeSelect\n} from \"./common-input\";\n\nexport function MasterHeader<T>({\n                                  title,\n                                  onSearch,\n                                  searchModel,\n                                  initValue = {},\n                                  value,\n                                  onClickBack\n                                }: {\n  searchModel: SearchModel;\n  title: string;\n  initValue?: any;\n  value?: any;\n  onSearch?: (data: any) => void;\n  onClickBack?: () => void;\n}) {\n  const intl = useIntl();\n  const defaultClassName = \"col-xxl-2 col-md-3 master-header-search-input-margin\";\n  const handleResetForm = (resetForm: any) => {\n    resetForm();\n  };\n  return (\n    <Card className={'master-header-card'}>\n      <CardHeader title={onClickBack ? <span\n                            onClick={onClickBack}\n                            className={'cursor-pointer text-primary font-weight-boldest'}>\n                            <ArrowBackIosIcon/>\n                            {intl.formatMessage({id: title}).toUpperCase()}\n                          </span> : intl.formatMessage({id: title}).toUpperCase()}/>\n      <CardBody>\n        <Formik\n          initialValues={initValue}\n          onSubmit={values => {\n            onSearch && onSearch({...values});\n          }}\n          onReset={data => {\n            onSearch && onSearch({});\n            // if (onReset) {\n            //   onReset(data);\n            // }\n          }}\n        >\n          {({values, handleSubmit, handleBlur, handleChange, setFieldValue, resetForm}) => (\n            <form onSubmit={handleSubmit} className=\"form form-label-right\">\n              <div className=\"form-group row master-header-search-margin\">\n                {searchModel ? (\n                  Object.keys(searchModel).map(key => {\n                    // console.log(values)\n                    switch (searchModel[key].type) {\n                      case 'string': {\n                        return (\n                          <InputString\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'string-number': {\n                        return (\n                          <InputStringNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'number': {\n                        return (\n                          <InputNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'date-time': {\n                        return (\n                          <InputDateTime\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'search-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputSearchSelect\n                            className={defaultClassName}\n                            name={key}\n                            value={values[key]}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'tree-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputTreeSelect\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                    }\n                    return <></>;\n                  })\n                ) : (\n                  <></>\n                )}\n              </div>\n  \n              {onSearch && (<div className=\"row no-gutters\">\n                <button className=\"btn btn-primary mr-8 fixed-btn-width\" type=\"submit\">\n                  <SearchIcon style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.SEARCH_BTN'})}\n                </button>\n                <button\n                  className=\"btn btn-outline-primary fixed-btn-width\"\n                  type=\"reset\"\n                  onClick={() => handleResetForm(resetForm)}>\n                  <SVG src={ToAbsoluteUrl('/media/svg/vncheck/reset-filter.svg')}\n                       style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.RESET_FILTER_BTN'})}\n                </button>\n              </div>)}\n            </form>\n          )}\n        </Formik>\n      </CardBody>\n    </Card>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {useIntl} from 'react-intl';\nimport {iconStyle} from \"../common-consts/const\";\nimport {getField} from \"../helpers/common-function\";\nimport {RenderInfoDetail} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nimport {getFieldV3} from \"./master-detail-page\";\n\nexport function MasterEntityDetailDialog({\n                                           title = 'COMMON_COMPONENT.DETAIL_DIALOG.HEADER_TITLE',\n                                           moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                           show,\n                                           entity,\n                                           onHide,\n                                           renderInfo,\n                                           size = 'sm'\n                                         }: {\n  title?: string;\n  moduleName?: string;\n  show: boolean;\n  entity: any;\n  renderInfo: RenderInfoDetail;\n  onHide: () => void;\n  size?: 'sm' | 'lg' | 'xl';\n}) {\n  const intl = useIntl();\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-detail\"\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      \n      <MasterEntityDetail entity={entity} renderInfo={renderInfo}/>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: 'COMMON_COMPONENT.DETAIL_DIALOG.CLOSE_BTN'})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function MasterEntityDetail({\n                                     entity,\n                                     renderInfo,\n                                   }: {\n  renderInfo: RenderInfoDetail;\n  entity: any;\n}) {\n  const intl = useIntl();\n  return entity ? (\n    <Modal.Body>\n      <div className={`row`}>\n        {renderInfo.map((value, index) => (\n          <div key={index} className={`${value.className ?? 'col-12'}`}>\n            {value.header && value.header !== '' && <p className=\"text-primary detail-dialog-subtitle\">\n              {intl.formatMessage({id: value.header})}\n            </p>}\n            {Object.keys(value.data).map((dataKey) => (\n              <div className={`detail-dialog-row-info row`} key={dataKey}>\n                {value.data[dataKey].title && value.data[dataKey].title !== '' &&\n                <div className={`${value.titleClassName ?? 'col-4'}`}>\n                  {intl.formatMessage({id: value.data[dataKey].title})}:\n                </div>}\n                <div className={`${value.dataClassName ?? 'col-8'}`}>\n                  {(() => {\n                    const displayInfo = value.data[dataKey];\n                    const fieldName = displayInfo.keyField ?? dataKey;\n                    const displayData = fieldName.indexOf(\"[\") > -1 ?\n                      getFieldV3(entity, fieldName) :\n                      getFieldV3(entity, fieldName)[0]\n                    return displayInfo.formatter ? displayInfo.formatter(displayData, entity)\n                      : (<>{(_.isNumber(displayData) || _.isString(displayData)) ? displayData : JSON.stringify(displayData)}</>)\n                  })()\n                  }\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Modal.Body>\n  ) : (\n    <></>\n  );\n}\n","import React, {Fragment, ReactElement, useMemo} from 'react';\nimport { Card, CardBody, CardHeader } from '../card';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useIntl } from 'react-intl';\nimport { iconStyle } from '../common-consts/const';\nimport { MasterTable } from './master-table';\nimport { MasterBodyColumns, PaginationProps } from '../common-types/common-type';\nimport _ from 'lodash';\n\nexport interface BasicUnitDataProps {\n  showModal: any;\n  hideModal: any;\n  show: any;\n  list: any[];\n  total: number;\n  loading: boolean;\n  queryParams: any;\n  setQueryParamsBase: any;\n  ids: any[];\n  setIds: any;\n  setQueryParams: any;\n}\n\nexport function MasterBody<T>({\n  entities,\n  total,\n  loading,\n  paginationParams,\n  setPaginationParams,\n  onSelectMany,\n  onCreate,\n  selectedEntities = [],\n  columns,\n  onDeleteMany,\n  isShowId,\n  title,\n  hideHeaderButton,\n    additionalActionComponent\n}: {\n  total: number;\n  loading: boolean;\n  onSelectMany?: (entities: T[]) => void;\n  onCreate?: () => void;\n  columns: MasterBodyColumns;\n  entities: T[];\n  selectedEntities?: T[];\n  paginationParams: PaginationProps;\n  setPaginationParams: (data: PaginationProps) => void;\n  additionalActionComponent?: (props: any) => ReactElement;\n  onDeleteMany?: () => void;\n  isShowId?: boolean;\n  title?: string;\n  hideHeaderButton?: boolean;\n}) {\n  const intl = useIntl();\n  const AdditionalActionComponent = additionalActionComponent;\n  const idColumn = useMemo(() => ({\n    dataField: '_id',\n    text: 'STT',\n    formatter: (cell: any, row: any, rowIndex: number) => (\n      <Fragment>\n        {rowIndex + 1 + ((paginationParams.page ?? 0) - 1) * (paginationParams.limit ?? 0)}\n      </Fragment>\n    ),\n    headerClasses: 'text-center',\n    align: 'center'\n  }), [paginationParams]);\n  const masterColumn = isShowId\n    ? _.isArray(columns)\n          ? [idColumn, ...columns]\n          : { _id: idColumn, ...columns }\n    : columns;\n\n  return (\n    <Card className={'master-body-card'}>\n      {title && <CardHeader title={intl.formatMessage({ id: title }).toUpperCase()} />}\n      <CardBody>\n        {hideHeaderButton !== true && (\n          <div className=\"row no-gutters mb-10\">\n            {onCreate && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary fixed-btn-width mr-8\"\n              onClick={onCreate}>\n              <AddIcon style={iconStyle} />\n              {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.ADD_BTN' })}\n            </button>\n            )}\n            {onDeleteMany && (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary fixed-btn-width\"\n                onClick={() => {\n                  onSelectMany && onSelectMany(selectedEntities);\n                  onDeleteMany();\n                }}>\n                <DeleteOutlineOutlinedIcon style={iconStyle} />\n                {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.DELETE_BTN' })}\n              </button>\n            )}\n            {AdditionalActionComponent && (<AdditionalActionComponent />)}\n          </div>\n        )}\n        <MasterTable\n          entities={entities}\n          columns={masterColumn}\n          total={total}\n          loading={loading}\n          paginationParams={paginationParams}\n          setPaginationParams={setPaginationParams}\n          onSelectMany={onSelectMany}\n          selectedEntities={selectedEntities}\n        />\n\n        {/* <MasterTreeStructure /> */}\n      </CardBody>\n    </Card>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteOutlineOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'History');\n\nexports.default = _default;","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\nimport { CustomersModel } from './customers.model';\n\nexport const API_URL = API_BASE_URL + '/customer';\n\nexport const API_ORDER_DETAIL = API_BASE_URL + '/customer-order'\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<CustomersModel> = (data: CustomersModel) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<CustomersModel> = ({\n                                                          queryProps,\n                                                          sortList,\n                                                          paginationProps,\n                                                        }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const Count: CountProps<CustomersModel> = ({\n                                                  queryProps,\n                                                  sortList,\n                                                  paginationProps,\n                                                }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const GetOrders = (_id: string, {\n  queryProps,\n  paginationProps,\n  sortField\n}: any) => {\n  console.log(paginationProps)\n  return axios.get(`${API_URL}/${_id}/orders`, { params: {...queryProps, ...paginationProps, ...sortField}, });\n}\n\nexport const GetOrderDetail = (_id: string,  {\n  queryProps,\n  paginationProps,\n}: any) => {\n  return axios.get(`${API_ORDER_DETAIL}/${_id}`, { params: {...queryProps, ...paginationProps} })\n}\n\nexport const Get: GetProps<CustomersModel> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<CustomersModel> = (entity: CustomersModel) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: CustomersModel) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<CustomersModel> = (entities: CustomersModel[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {listSpecies: entities},\n  });\n};","export interface CustomersModel {\n    [X: string]: any;\n}\n\nexport const masterData: CustomersModel[] = [\n    {\n        _id: '000001',\n        code: '000001',\n        phone: '0868670715',\n        createdAt: new Date()\n    },\n    {\n        _id: '000002',\n        code: '000002',\n        phone: '0969333010',\n        createdAt: new Date()\n    },\n    {\n        _id: '000003',\n        code: '000003',\n        phone: '0974947335',\n        createdAt: new Date()\n    },\n    {\n        _id: '000004',\n        code: '000004',\n        phone: '0245748956',\n        createdAt: new Date()\n    },\n]\n\nexport const historyData: any[] = [\n    {\n        buyDate: new Date(),\n        species: {\n            _id: 'abc',\n            name: 'Rau muống',\n        },\n        qr: {\n            _id: 'ABCXYZ1234A'\n        },\n        store: {\n            _id: 'csvks',\n            name: 'Đại lý số 1',\n            seller: {\n                _id: 'cávav',\n                name: 'Nguyễn Văn A'\n            }\n        },\n\n    }\n]","import React, { ReactElement } from 'react';\nimport { Card, CardHeader, CardBody } from '../../common-library/card';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { SortOrder } from 'react-bootstrap-table-next';\nimport { DefaultPagination } from '../../common-library/common-consts/const';\nimport { AxiosResponse } from 'axios';\nimport { MasterTable } from '../../common-library/common-components/master-table';\n\ninterface Prop {\n  columns: { [X: string]: any };\n  code: string;\n  history: any;\n  title: string | ReactElement;\n  onFetch: (code: string, params: any) => Promise<AxiosResponse<any>>;\n  sortField: { dataField: any; order: SortOrder };\n  setSortField: (sortField: { dataField: any; order: string }) => void\n}\n\nfunction CustomersManagementView({ columns, code, history, title, onFetch }: Prop) {\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [entity, setEntity] = React.useState<{ [X: string]: any }[]>([]);\n  const [paginationProps, setPaginationProps] = React.useState(DefaultPagination);\n  const [total, setTotal] = React.useState(0)\n  const [orderCode, setOrderCode] = React.useState('')\n\n  React.useEffect(() => {\n    setLoading(true);\n    onFetch(code, { ...paginationProps })\n      .then(res => {\n        setEntity(res.data.data ? res.data.data : res.data.products);\n        setTotal(res.data?.paging?.total)\n        setOrderCode(res.data?.code || res.data?.customer?.code || 'CHI TIẾT')\n      })\n      .catch(err => console.log(err))\n      .finally(() => {\n        setLoading(false);\n      });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [code, paginationProps]);\n\n  console.log(paginationProps)\n\n  return (\n    <Card>\n      <CardHeader\n        title={\n          <>\n            <span onClick={() => history.goBack()} className=\" cursor-pointer text-primary font-weight-boldest\">\n              <ArrowBackIosIcon /> {orderCode}\n            </span>\n          </>\n        }\n      />\n      <CardBody>\n        <div className=\"mt-8 mb-10\">\n          <span className=\"text-primary detail-dialog-subtitle\">{title} {orderCode}</span>\n        </div>\n        {/* <BootstrapTable\n            wrapperClasses=\"table-responsive\"\n            bordered={false}\n            classes=\"table table-head-custom table-vertical-center overflow-hidden noBorderOnClick\"\n            bootstrap4\n            remote\n            keyField=\"_id\"\n            data={entity}\n            columns={Object.values(columns)}\n            defaultSorted={SortDefault as any}\n            sort={sortField}\n            onTableChange={(type: string, state: any) => {\n              console.log(state)\n              if (type === 'sort') {\n                setSortField({ dataField: state.sortField, order: state.sortOrder })\n              }\n            }}\n          >\n            <PleaseWaitMessage entities={entity} />\n            <NoRecordsFoundMessage entities={entity} />\n          </BootstrapTable> */}\n            <MasterTable\n              entities={entity}\n              columns={columns}\n              total={total}\n              loading={loading}\n              paginationParams={paginationProps}\n              setPaginationParams={setPaginationProps}\n            />\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default CustomersManagementView;\n","import React, { Fragment, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport {\n  DefaultPagination,\n  NormalColumn,\n  SortColumn,\n  SortDefault,\n} from '../../common-library/common-consts/const';\nimport { MasterHeader } from '../../common-library/common-components/master-header';\nimport { MasterBody } from '../../common-library/common-components/master-body';\nimport { InitMasterProps } from '../../common-library/helpers/common-function';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MasterEntityDetailDialog } from '../../common-library/common-components/master-entity-detail-dialog';\nimport {\n  RenderInfoDetail,\n  SearchModel,\n} from '../../common-library/common-types/common-type';\nimport { DetailImage } from '../../common-library/common-components/detail/detail-image';\nimport * as CustomersService from './customers.service';\nimport { CustomersModel, historyData } from './customers.model';\nimport HistoryIcon from '@material-ui/icons/History';\nimport CustomersManagementView from './customers-management-history';\nimport Visibility from '@material-ui/icons/Visibility';\n\nconst headerTitle = 'PRODUCT_TYPE.MASTER.HEADER.TITLE';\nconst bodyTitle = 'CUSTOMERS_LISTS';\n\nconst HistoryTitle = \"LỊCH SỬ MUA HÀNG\"\nconst PurchaseOrderTitle = \"ĐƠN HÀNG \"\n\nfunction CustomersManagement() {\n  const intl = useIntl();\n\n  const history = useHistory();\n  const {\n    entities,\n    detailEntity,\n    showDetail,\n    setShowDetail,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    getAll,\n  } = InitMasterProps<CustomersModel>({\n    getServer: CustomersService.Get,\n    countServer: CustomersService.Count,\n    createServer: CustomersService.Create,\n    deleteServer: CustomersService.Delete,\n    deleteManyServer: CustomersService.DeleteMany,\n    getAllServer: CustomersService.GetAll,\n    updateServer: CustomersService.Update,\n  });\n\n  const [sortField, setSortField] = React.useState<any>(SortDefault[0])\n    useEffect(() => {\n      getAll({ ...filterProps, sortBy: sortField.dataField, sortType: sortField.order });\n    }, [paginationProps, filterProps]);\n\n  const masterColumns = {\n    _id: {\n      dataField: '_id',\n      text: 'STT',\n      formatter: (cell: any, row: any, rowIndex: number) => (\n        <p>{rowIndex + 1 + ((paginationProps.page ?? 0) - 1) * (paginationProps.limit ?? 0)}</p>\n      ),\n      classes: 'mr-3',\n      style: { paddingTop: 20 },\n    },\n    code: {\n      dataField: 'code',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_CODE' })}`,\n      // formatter: (cell: any, row: any, rowIndex: number) => (\n      //   <span\n      //     className=\"text-primary\"\n      //     style={{ fontWeight: 600, cursor: 'pointer' }}\n      //     onClick={() => {\n      //       setShowDetail(true);\n      //       setDetailEntity(row);\n      //     }}>\n      //     {row.code}\n      //   </span>\n      // ),\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    fullName: {\n      dataField: 'fullName',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_DETAIL_NAME' })}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    username: {\n      dataField: 'username',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_PHONE_NUMBER' })}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n\n    createdAt: {\n      dataField: 'createdAt',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_CREATED_AT' })}`,\n      formatter: (cell: any, row: any) => (\n        <span>\n          {row.createdAt\n            ? new Intl.DateTimeFormat('en-GB').format(new Date(row.createdAt))\n            : 'Không có thông tin'}\n        </span>\n      ),\n      ...SortColumn,\n      classes: 'text-center',\n      headerClasses: 'text-center',\n    },\n    action: {\n      dataField: 'action',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_DETAIL_ACTION' })}`,\n      formatter: (cell: any, row: any) => (\n        <span\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n          onClick={() => {\n            // ProductionPlanService.GetById(row._id).then(res => {\n            //   setEditEntity(res.data);\n            //   history.push({\n            //     pathname: '/production-plan/plan-view/' + row._id,\n            //     state: res.data,\n            //   });\n            // });\n            history.push({\n              pathname: '/customers-management/' + row._id + '/history',\n              state: historyData,\n            });\n          }}>\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <HistoryIcon className=\"text-primary eye\" />\n          </span>\n        </span>\n      ),\n\n      ...NormalColumn,\n      style: { minWidth: '130px' },\n    },\n  };\n\n  const historyColumn = {\n    code: {\n      dataField: 'code',\n      text: `ĐƠN HÀNG`,\n      formatter: (cell: any, row: any) => (\n        <span\n          className=\"text-primary\"\n          style={{ fontWeight: 600, cursor: 'pointer' }}\n        >\n          {row.code}\n        </span>\n      ),\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    createdAt: {\n      dataField: 'createdAt',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_BUY_DATE' })}`,\n      formatter: (cell: any, row: any) => (\n        <span>\n          {row.createdAt\n            ? new Intl.DateTimeFormat('en-GB').format(new Date(row.createdAt))\n            : 'Không có thông tin'}\n        </span>\n      ),\n      ...SortColumn,\n      classes: 'text-center',\n      headerClasses: 'text-center',\n    },\n    sellAgency: {\n      dataField: 'sellAgency.name',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_STORE' })}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    location: {\n      dataField: 'sellAgency.location',\n      text: `${intl.formatMessage({ id: 'GPS' })}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    seller: {\n      dataField: 'seller.fullName',\n      text: `${intl.formatMessage({ id: 'CUSTOMERS_SELLER' })}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n\n    action: {\n      dataField: 'action',\n      text: 'action',\n      formatter: (cell: any, row: any) => (\n        <span\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n          onClick={() => {\n            history.push({\n              pathname: '/customers-management/' + row._id + '/purchase-order',\n            });\n          }}>\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <Visibility className=\"text-primary eye\" />\n          </span>\n        </span>\n      ),\n      classes: 'text-center',\n      headerClasses: 'text-center',\n    }\n  };\n\n  const productInPurChaseOrderColumn = {\n    _id: {\n      dataField: '_id',\n      text: 'STT',\n      formatter: (cell: any, row: any, rowIndex: number) => (\n        <p>{rowIndex + 1 + ((paginationProps.page ?? 0) - 1) * (paginationProps.limit ?? 0)}</p>\n      ),\n      classes: 'mr-3',\n      style: { paddingTop: 20 },\n    },\n    species: {\n      dataField: 'species.name',\n      text: 'Tên chủng loại',\n      classes: 'text-center',\n    },\n    packing: {\n      dataField: 'packing.weight',\n      text: 'Quy cách đóng gói',\n      classes: 'text-center',\n    },\n    qr: {\n      dataField: 'qr',\n      text: 'Mã QR',\n      ...SortColumn,\n      classes: 'text-center',\n    }\n  }\n\n  const masterEntityDetailDialog: RenderInfoDetail = [\n    {\n      data: {\n        image: {\n          formatter: (data, values) => (\n            <DetailImage width={'270px'} height={'270px'} images={data} values={values} />\n          ),\n        },\n      },\n      className: 'col-lg-6 col-md-12 d-flex justify-content-right align-items-center mr-5 ml-5',\n      dataClassName: 'd-flex',\n    },\n    {\n      data: {\n        fullName: { title: 'CUSTOMERS_DETAIL_NAME' },\n        gender: { title: 'CUSTOMERS_DETAIL_GENDER' },\n        username: { title: 'CUSTOMERS_PHONE_NUMBER' },\n        birthDay: { title: 'CUSTOMERS_DETAIL_DOB' },\n        email: { title: 'EMAIL' },\n      },\n      dataClassName: 'col-lg-5 col-md-8',\n      titleClassName: 'col-lg-7 col-md-4',\n      className: 'col-lg-5 col-md-12',\n    },\n  ];\n\n  const productTypeSearchModel: SearchModel = {\n    username: {\n      type: 'string',\n      label: 'CUSTOMERS_PHONE_NUMBER',\n    },\n  };\n\n  return (\n    <Fragment>\n      <MasterEntityDetailDialog\n        show={showDetail}\n        entity={detailEntity}\n        renderInfo={masterEntityDetailDialog}\n        onHide={() => {\n          setShowDetail(false);\n        }}\n        moduleName={'EMPTY'}\n        size={'lg'}\n      />\n\n      <Switch>\n        <Route exact path={`/customers-management/:code/history`}>\n          {({ history, match }) => (\n            <CustomersManagementView\n              columns={historyColumn}\n              code={match?.params.code??''}\n              history={history}\n              title={HistoryTitle}\n              onFetch={(code: string, paginationProps: any) => CustomersService.GetOrders(code, { paginationProps })}\n              sortField={sortField}\n              setSortField={setSortField}\n            />\n          )}\n        </Route>\n        <Route exact path={`/customers-management/:code/purchase-order`}>\n          {({ history, match }) => (\n            <CustomersManagementView\n              columns={productInPurChaseOrderColumn}\n              code={match?.params.code??''}\n              history={history}\n              title={PurchaseOrderTitle}\n              onFetch={(code: string, paginationProps: any) => CustomersService.GetOrderDetail(code, { paginationProps })}\n              sortField={sortField}\n              setSortField={setSortField}\n            />\n          )}\n        </Route>\n        <Route path=\"/customers-management\">\n          <MasterHeader\n            title={headerTitle}\n            onSearch={value => {\n              setPaginationProps(DefaultPagination);\n              setFilterProps(value);\n            }}\n            searchModel={productTypeSearchModel}\n          />\n          <MasterBody\n            title={bodyTitle}\n            onCreate={() => {}}\n            hideHeaderButton={true}\n            entities={entities}\n            total={total}\n            columns={masterColumns as any}\n            loading={loading}\n            paginationParams={paginationProps}\n            setPaginationParams={setPaginationProps}\n            isShowId={true}\n          />\n\n          {/* <MasterTreeStructure /> */}\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default CustomersManagement;\n"],"sourceRoot":""}