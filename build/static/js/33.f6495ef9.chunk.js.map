{"version":3,"sources":["app/pages/product/product.tsx","app/pages/product/product-group.tsx","app/pages/product/index.tsx"],"names":["randomBytes","require","secp256k1","Product","props","privKey","msg","privateKeyVerify","publicKeyCreate","ecdsaSign","console","log","ProductGroup","ProductPage","exact","from","to","path","component"],"mappings":"0IAEOA,EAAeC,EAAQ,KAAvBD,YACDE,EAAYD,EAAQ,KAkCXE,MAhCf,SAAiBC,GAQf,IAGIC,EAHEC,EAAMN,EAAY,IAIxB,GACEK,EAAUL,EAAY,WACdE,EAAUK,iBAAiBF,IAWrC,OAReH,EAAUM,gBAAgBH,GAG1BH,EAAUO,UAAUH,EAAKD,GAGxCK,QAAQC,IAAIN,GAGV,wDCrBWO,MARf,SAAsBR,GACpB,OACE,iDCYWS,UAVf,SAAqBT,GACnB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUU,OAAO,EAAMC,KAAK,oBAAoBC,GAAG,8BACnD,cAAC,IAAD,CAAcC,KAAK,4BAA4BC,UAAWf,IAC1D,cAAC,IAAD,CAAcc,KAAK,kCAAkCC,UAAWN","file":"static/js/33.f6495ef9.chunk.js","sourcesContent":["import React from 'react';\n\nconst {randomBytes} = require('crypto')\nconst secp256k1 = require('secp256k1')\n\nfunction Product(props: any) {\n\n// or require('secp256k1/elliptic')\n//   if you want to use pure js implementation in node\n\n// generate message to sign\n// message should have 32-byte length, if you have some other length you can hash message\n// for example `msg = sha256(rawMessage)`\n  const msg = randomBytes(32)\n\n// generate privKey\n  let privKey\n  do {\n    privKey = randomBytes(32)\n  } while (!secp256k1.privateKeyVerify(privKey))\n\n// get the public key in a compressed format\n  const pubKey = secp256k1.publicKeyCreate(privKey)\n\n// sign the message\n  const sigObj = secp256k1.ecdsaSign(msg, privKey)\n\n// verify the signature\n  console.log(privKey)\n// => true\n  return (\n    <div>\n      this is product page\n    </div>\n  );\n}\n\nexport default Product;","import React from 'react';\n\nfunction ProductGroup(props: any) {\n  return (\n    <div>\n      product group\n    </div>\n  );\n}\n\nexport default ProductGroup;","import React from 'react';\nimport {Redirect, Switch} from 'react-router-dom';\nimport {ContentRoute} from \"../../layout/components/content/content-route\";\nimport Product from \"./product\";\nimport ProductGroup from \"./product-group\";\n\nfunction ProductPage(props: any) {\n  return (\n    <Switch>\n      <Redirect exact={true} from=\"/product-category\" to=\"/product-category/product\"/>\n      <ContentRoute path=\"/product-category/product\" component={Product}/>\n      <ContentRoute path=\"/product-category/group-product\" component={ProductGroup}/>\n    </Switch>\n  );\n}\n\nexport default ProductPage;"],"sourceRoot":""}