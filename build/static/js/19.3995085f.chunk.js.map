{"version":3,"sources":["../node_modules/@material-ui/icons/SaveOutlined.js","app/common-library/common-components/master-header.tsx","app/common-library/forms/input-custom.tsx","app/common-library/common-components/modify-entity-page.tsx","../node_modules/@material-ui/icons/Search.js","app/common-library/common-components/master-entity-detail-dialog.tsx","app/common-library/common-components/master-body.tsx","../node_modules/@material-ui/icons/DeleteOutlineOutlined.js","app/common-library/common-components/modify-entity-dialog-form.tsx","app/common-library/common-components/modify-entity-dialog.tsx","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/CheckCircleOutline.js","app/pages/academic-year/academic-year.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","MasterHeader","title","onSearch","searchModel","initValue","onClickBack","intl","useIntl","defaultClassName","className","onClick","formatMessage","id","toUpperCase","initialValues","onSubmit","values","onReset","data","handleSubmit","resetForm","handleBlur","handleChange","setFieldValue","keys","map","key","type","name","undefined","t","style","iconStyle","handleResetForm","src","ToAbsoluteUrl","InputCustom","component","props","Component","formik","useFormikContext","ModifyEntityPage","inputGroups","mode","pl","_subTitle","inputGroup","index","_","isString","Error","JSON","stringify","_className","_inputClassName","inputs","prevKey","inputClassName","RenderForm","input","trimKey","trim","_type","innt","MasterEntityDetailDialog","moduleName","show","entity","onHide","renderInfo","size","aria-labelledby","dialogClassName","Header","closeButton","Title","MasterEntityDetail","Footer","Body","header","dataKey","titleClassName","dataClassName","displayInfo","fieldName","keyField","displayData","indexOf","getFieldV3","formatter","isNumber","MasterBody","entities","total","loading","paginationParams","setPaginationParams","onSelectMany","onCreate","selectedEntities","columns","onDeleteMany","isShowId","hideHeaderButton","additionalActionComponent","AdditionalActionComponent","idColumn","useMemo","dataField","text","cell","row","rowIndex","page","limit","headerClasses","align","masterColumn","isArray","_id","ModifyEntityDialogForm","onModify","modifyPanel","validation","_title","initValues","InitValues","_header","panel1","useState","entityForEdit","setEntityForEdit","useEffect","enableReinitialize","validationSchema","setSubmitting","__v","then","catch","err","Modal","Fragment","Spinner","animation","variant","ModifyEntityDialog","formModel","panels","panel","forwardRef","_ref","ref","bsPrefix","children","_ref$as","as","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","_extends","classNames","displayName","AcademicYear","InitMasterProps","getServer","Get","countServer","Count","createServer","Create","deleteServer","Delete","deleteManyServer","DeleteMany","getAllServer","GetAll","updateServer","Update","editEntity","deleteEntity","setDeleteEntity","setEditEntity","createEntity","detailEntity","setSelectedEntities","showEdit","showDelete","setShowDelete","setShowEdit","showCreate","setShowCreate","showDetail","setShowDetail","paginationProps","showDeleteMany","setShowDeleteMany","setPaginationProps","filterProps","setFilterProps","add","error","setError","update","get","getAll","deleteMany","deleteFn","headerTitle","SortColumn","alertDays","startDate","_format","closureDate","finalClosureDate","code","status","masterEntityDetailDialog","initSearchModel","label","AcademicYearService","disabled","group1","createForm","updateForm","console","log","path","HomePageURL","academicYear","DefaultPagination","activeAcademicYear","filter","item","result"],"mappings":"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","file":"static/js/19.3995085f.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6z\"\n}), 'SaveOutlined');\n\nexports.default = _default;","import React from 'react';\nimport {useIntl} from 'react-intl';\nimport {Formik} from 'formik';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Card, CardBody, CardHeader} from '../card';\nimport SVG from 'react-inlinesvg';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {SearchModel} from '../common-types/common-type';\n// import InfiniteScroll from 'react-infinite-scroll-component';\nimport {iconStyle} from '../common-consts/const';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport './master-header.css';\nimport {\n  InputDateTime,\n  InputNumber,\n  InputSearchSelect,\n  InputString,\n  InputStringNumber,\n  InputTreeSelect\n} from \"./common-input\";\n\nexport function MasterHeader<T>({\n                                  title,\n                                  onSearch,\n                                  searchModel,\n                                  initValue = {},\n                                  value,\n                                  onClickBack\n                                }: {\n  searchModel: SearchModel;\n  title: string;\n  initValue?: any;\n  value?: any;\n  onSearch?: (data: any) => void;\n  onClickBack?: () => void;\n}) {\n  const intl = useIntl();\n  const defaultClassName = \"col-xxl-2 col-md-3 master-header-search-input-margin\";\n  const handleResetForm = (resetForm: any) => {\n    resetForm();\n  };\n  return (\n    <Card className={'master-header-card'}>\n      <CardHeader title={onClickBack ? <span\n                            onClick={onClickBack}\n                            className={'cursor-pointer text-primary font-weight-boldest'}>\n                            <ArrowBackIosIcon/>\n                            {intl.formatMessage({id: title}).toUpperCase()}\n                          </span> : intl.formatMessage({id: title}).toUpperCase()}/>\n      <CardBody>\n        <Formik\n          initialValues={initValue}\n          onSubmit={values => {\n            onSearch && onSearch({...values});\n          }}\n          onReset={data => {\n            onSearch && onSearch({});\n            // if (onReset) {\n            //   onReset(data);\n            // }\n          }}\n        >\n          {({values, handleSubmit, handleBlur, handleChange, setFieldValue, resetForm}) => (\n            <form onSubmit={handleSubmit} className=\"form form-label-right\">\n              <div className=\"form-group row master-header-search-margin\">\n                {searchModel ? (\n                  Object.keys(searchModel).map(key => {\n                    // console.log(values)\n                    switch (searchModel[key].type) {\n                      case 'string': {\n                        return (\n                          <InputString\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'string-number': {\n                        return (\n                          <InputStringNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'number': {\n                        return (\n                          <InputNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'date-time': {\n                        return (\n                          <InputDateTime\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'search-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputSearchSelect\n                            className={defaultClassName}\n                            name={key}\n                            value={values[key]}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'tree-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputTreeSelect\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                    }\n                    return <></>;\n                  })\n                ) : (\n                  <></>\n                )}\n              </div>\n  \n              {onSearch && (<div className=\"row no-gutters\">\n                <button className=\"btn btn-primary mr-8 fixed-btn-width\" type=\"submit\">\n                  <SearchIcon style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.SEARCH_BTN'})}\n                </button>\n                <button\n                  className=\"btn btn-outline-primary fixed-btn-width\"\n                  type=\"reset\"\n                  onClick={() => handleResetForm(resetForm)}>\n                  <SVG src={ToAbsoluteUrl('/media/svg/vncheck/reset-filter.svg')}\n                       style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.RESET_FILTER_BTN'})}\n                </button>\n              </div>)}\n            </form>\n          )}\n        </Formik>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useFormikContext} from \"formik\";\n\nexport function InputCustom({\n                              className, component, ...props\n                            }: {\n  className: string,\n  component: (props: any) => ReactElement;\n  \n}) {\n  const Component = component;\n  const formik = useFormikContext<any>();\n  return (<div className={className}>\n    <Component  {...formik} {...props}/>\n  </div>)\n}\n\n","import React, {Fragment} from 'react';\nimport {InputGroups} from '../common-types/common-type';\nimport {useIntl} from 'react-intl';\nimport {\n  InputBoolean,\n  InputCheckBox,\n  InputDateTime,\n  InputImage,\n    InputFile,\n  InputNumber,\n  InputRadio,\n  InputSearchSelect,\n  InputSelect,\n  InputString,\n  InputStringNumber,\n  InputTag,\n  InputTreeSelect,\n} from './common-input';\nimport _ from 'lodash';\nimport {InputCustom} from \"../forms/input-custom\";\n\nexport function ModifyEntityPage<T>({\n                                      inputGroups,\n                                      mode = 'horizontal',\n                                    }:\n                                      {\n                                        inputGroups: InputGroups;\n                                        mode?: 'horizontal' | 'vertical';\n                                        errors?: any;\n                                      }) {\n  const intl = useIntl();\n  const {_subTitle, ...pl} = inputGroups;\n  return (\n    <>\n      <div className={'row'}>\n        {pl && Object.values(pl).map((inputGroup, index) => {\n          if (_.isString(inputGroup)) throw new Error('Sử dụng sai cách ' + inputGroup + '\\n' + JSON.stringify(pl));\n          const {_subTitle, _className, _inputClassName, ...inputs} = inputGroup;\n          return (\n            <div key={`modify-entity-page${index}`} className={_className ?? 'col-12'}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={inputs} prevKey={''} inputClassName={_inputClassName} mode={mode}/>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  );\n}\n\nexport const RenderForm = ({inputs, prevKey, mode, inputClassName}: any) => {\n  const intl = useIntl();\n  const defaultClassName = inputClassName ?? 'mb-5';\n  return (<>\n    {Object.keys(inputs).map(key => {\n      const input = inputs[key];\n      const trimKey = key.trim();\n      if (_.isString(input)) throw new Error('Sử dụng sai cách ' + key + '\\n' + JSON.stringify(inputs));\n      const name = prevKey ? ((trimKey === '' || prevKey === '') ? prevKey : `${prevKey}.${trimKey}`) : trimKey;\n      switch (input._type) {\n        case 'string':\n        case 'email':\n          return (\n            <InputString\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'string-number': {\n          return (\n            <InputStringNumber\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        }\n        case 'number':\n          return (\n            <InputNumber\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'date-time':\n          return (\n            <InputDateTime\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'radio':\n          return (\n            <InputRadio\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          )\n        case 'boolean': {\n          return (\n            <InputBoolean\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'image':\n          return (\n            <InputImage\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              // value={(values && values[key]) || []}\n              key={`modify-page-form-${name}`}\n            />\n          );\n      case 'file':\n          return (\n              <InputFile\n                  className={defaultClassName}\n                  name={name}\n                  mode={mode}\n                  type={input._type}\n                  {...input}\n                  // value={(values && values[key]) || []}\n                  key={`modify-page-form-${name}`}\n              />\n          );\n        case 'search-select': {\n          return (\n            <InputSearchSelect\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'tree-select': {\n          return (\n            <InputTreeSelect\n              className={defaultClassName}\n              name={key}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`master_header${key}`}\n            />\n          );\n        }\n        case 'tag': {\n          return (\n            <InputTag\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        \n        case 'checkbox':\n          return (\n            <InputCheckBox\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        \n        case 'select':\n          return (\n            <InputSelect\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          )\n        \n        case 'custom': {\n          const {_type, ...props} = input;\n          return (<InputCustom {...props} key={`modify-page-form-${name}`}/>);\n        }\n        default: {\n          const {_type, _subTitle, _className, _inputClassName, ...innt} = input as any;\n          return _className ? (\n              <span key={`render_form_span${name}`} className={_className}>\n            {_subTitle && _subTitle !== '' && (<div\n              className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n                <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                            prevKey={name}\n                            mode={mode}/>\n            </span>) :\n            (<Fragment key={`render_form${name}`}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                          prevKey={name}\n                          mode={mode}/>\n            </Fragment>)\n        }\n      }\n    })}</>)\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {useIntl} from 'react-intl';\nimport {iconStyle} from \"../common-consts/const\";\nimport {getField} from \"../helpers/common-function\";\nimport {RenderInfoDetail} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nimport {getFieldV3} from \"./master-detail-page\";\n\nexport function MasterEntityDetailDialog({\n                                           title = 'COMMON_COMPONENT.DETAIL_DIALOG.HEADER_TITLE',\n                                           moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                           show,\n                                           entity,\n                                           onHide,\n                                           renderInfo,\n                                           size = 'sm'\n                                         }: {\n  title?: string;\n  moduleName?: string;\n  show: boolean;\n  entity: any;\n  renderInfo: RenderInfoDetail;\n  onHide: () => void;\n  size?: 'sm' | 'lg' | 'xl';\n}) {\n  const intl = useIntl();\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-detail\"\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      \n      <MasterEntityDetail entity={entity} renderInfo={renderInfo}/>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: 'COMMON_COMPONENT.DETAIL_DIALOG.CLOSE_BTN'})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function MasterEntityDetail({\n                                     entity,\n                                     renderInfo,\n                                   }: {\n  renderInfo: RenderInfoDetail;\n  entity: any;\n}) {\n  const intl = useIntl();\n  return entity ? (\n    <Modal.Body>\n      <div className={`row`}>\n        {renderInfo.map((value, index) => (\n          <div key={index} className={`${value.className ?? 'col-12'}`}>\n            {value.header && value.header !== '' && <p className=\"text-primary detail-dialog-subtitle\">\n              {intl.formatMessage({id: value.header})}\n            </p>}\n            {Object.keys(value.data).map((dataKey) => (\n              <div className={`detail-dialog-row-info row`} key={dataKey}>\n                {value.data[dataKey].title && value.data[dataKey].title !== '' &&\n                <div className={`${value.titleClassName ?? 'col-4'}`}>\n                  {intl.formatMessage({id: value.data[dataKey].title})}:\n                </div>}\n                <div className={`${value.dataClassName ?? 'col-8'}`}>\n                  {(() => {\n                    const displayInfo = value.data[dataKey];\n                    const fieldName = displayInfo.keyField ?? dataKey;\n                    const displayData = fieldName.indexOf(\"[\") > -1 ?\n                      getFieldV3(entity, fieldName) :\n                      getFieldV3(entity, fieldName)[0]\n                    return displayInfo.formatter ? displayInfo.formatter(displayData, entity)\n                      : (<>{(_.isNumber(displayData) || _.isString(displayData)) ? displayData : JSON.stringify(displayData)}</>)\n                  })()\n                  }\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Modal.Body>\n  ) : (\n    <></>\n  );\n}\n","import React, {Fragment, ReactElement, useMemo} from 'react';\nimport { Card, CardBody, CardHeader } from '../card';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useIntl } from 'react-intl';\nimport { iconStyle } from '../common-consts/const';\nimport { MasterTable } from './master-table';\nimport { MasterBodyColumns, PaginationProps } from '../common-types/common-type';\nimport _ from 'lodash';\n\nexport interface BasicUnitDataProps {\n  showModal: any;\n  hideModal: any;\n  show: any;\n  list: any[];\n  total: number;\n  loading: boolean;\n  queryParams: any;\n  setQueryParamsBase: any;\n  ids: any[];\n  setIds: any;\n  setQueryParams: any;\n}\n\nexport function MasterBody<T>({\n  entities,\n  total,\n  loading,\n  paginationParams,\n  setPaginationParams,\n  onSelectMany,\n  onCreate,\n  selectedEntities = [],\n  columns,\n  onDeleteMany,\n  isShowId,\n  title,\n  hideHeaderButton,\n    additionalActionComponent\n}: {\n  total: number;\n  loading: boolean;\n  onSelectMany?: (entities: T[]) => void;\n  onCreate?: () => void;\n  columns: MasterBodyColumns;\n  entities: T[];\n  selectedEntities?: T[];\n  paginationParams: PaginationProps;\n  setPaginationParams: (data: PaginationProps) => void;\n  additionalActionComponent?: (props: any) => ReactElement;\n  onDeleteMany?: () => void;\n  isShowId?: boolean;\n  title?: string;\n  hideHeaderButton?: boolean;\n}) {\n  const intl = useIntl();\n  const AdditionalActionComponent = additionalActionComponent;\n  const idColumn = useMemo(() => ({\n    dataField: '_id',\n    text: 'STT',\n    formatter: (cell: any, row: any, rowIndex: number) => (\n      <Fragment>\n        {rowIndex + 1 + ((paginationParams.page ?? 0) - 1) * (paginationParams.limit ?? 0)}\n      </Fragment>\n    ),\n    headerClasses: 'text-center',\n    align: 'center'\n  }), [paginationParams]);\n  const masterColumn = isShowId\n    ? _.isArray(columns)\n          ? [idColumn, ...columns]\n          : { _id: idColumn, ...columns }\n    : columns;\n\n  return (\n    <Card className={'master-body-card'}>\n      {title && <CardHeader title={intl.formatMessage({ id: title }).toUpperCase()} />}\n      <CardBody>\n        {hideHeaderButton !== true && (\n          <div className=\"row no-gutters mb-10\">\n            {onCreate && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary fixed-btn-width mr-8\"\n              onClick={onCreate}>\n              <AddIcon style={iconStyle} />\n              {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.ADD_BTN' })}\n            </button>\n            )}\n            {onDeleteMany && (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary fixed-btn-width\"\n                onClick={() => {\n                  onSelectMany && onSelectMany(selectedEntities);\n                  onDeleteMany();\n                }}>\n                <DeleteOutlineOutlinedIcon style={iconStyle} />\n                {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.DELETE_BTN' })}\n              </button>\n            )}\n            {AdditionalActionComponent && (<AdditionalActionComponent />)}\n          </div>\n        )}\n        <MasterTable\n          entities={entities}\n          columns={masterColumn}\n          total={total}\n          loading={loading}\n          paginationParams={paginationParams}\n          setPaginationParams={setPaginationParams}\n          onSelectMany={onSelectMany}\n          selectedEntities={selectedEntities}\n        />\n\n        {/* <MasterTreeStructure /> */}\n      </CardBody>\n    </Card>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteOutlineOutlined');\n\nexports.default = _default;","import React, {useEffect, useMemo, useState} from 'react';\nimport {Modal, Spinner} from 'react-bootstrap';\nimport {Form, Formik} from 'formik';\nimport {useIntl} from 'react-intl';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {ModifyPanel} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {ModifyEntityPage} from './modify-entity-page';\nimport {InitValues} from \"../helpers/common-function\";\n\nfunction ModifyEntityDialogForm<T>({\n                                     entity,\n                                     onModify,\n                                     moduleName = 'COMMON_COMPONENT.CREATE_UPDATE.MODULE_NAME',\n                                     onHide,\n                                     modifyPanel,\n                                     validation,\n                                     loading\n                                   }: {\n  moduleName?: string;\n  entity?: any;\n  onHide: () => void;\n  onModify: (values: any) => Promise<any>;\n  modifyPanel: ModifyPanel;\n  validation: any;\n  loading?: boolean\n}) {\n  const intl = useIntl();\n  const {_title, ...inputGroups} = modifyPanel;\n  const initValues = useMemo(() => InitValues({_header: '', panel1: modifyPanel}), [modifyPanel]);\n  const [entityForEdit, setEntityForEdit] = useState(initValues);\n  \n  useEffect(() => {\n     setEntityForEdit(entity ?? initValues);\n  }, [entity,initValues]);\n  \n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={entityForEdit}\n      validationSchema={validation}\n      onSubmit={(values, {setSubmitting}) => {\n        // console.log(values);\n        onModify({...entity, ...values, __v: undefined}).then(() => {\n          onHide()\n        }).catch((err) => {\n          setSubmitting(false)\n        });\n      }}>\n      {({handleSubmit}) => (\n        <>\n          <Modal.Body className=\"overlay overlay-block cursor-default\">\n            <Form className=\"form form-label-right\">\n              {Object.keys(inputGroups).map(key => (\n                <React.Fragment key={key}>\n                  <ModifyEntityPage inputGroups={inputGroups}/>\n                </React.Fragment>\n              ))}\n            </Form>\n          </Modal.Body>\n          <Modal.Footer className=\"border-top-0 pt-10\">\n            <button\n              type=\"submit\"\n              onClick={() => handleSubmit()}\n              className=\"btn btn-primary fixed-btn-width\">\n              {\n                loading === true ? <Spinner animation=\"border\" variant=\"light\" size=\"sm\"/> :\n                  <SaveOutlinedIcon style={iconStyle}/>\n              }\n              {'\\u00A0'}\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.SAVE_BTN'})}\n            </button>\n            <button\n              type=\"button\"\n              onClick={onHide}\n              className=\"btn btn-outline-primary fixed-btn-width\">\n              <CancelOutlinedIcon style={iconStyle}/>\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.CLOSE_BTN'})}\n            </button>\n          </Modal.Footer>\n        </>\n      )}\n    </Formik>\n  );\n}\n\nexport default ModifyEntityDialogForm;\n","import React, {useState} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ModifyEntityDialogForm from './modify-entity-dialog-form';\nimport {useIntl} from 'react-intl';\nimport {ModifyForm} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nfunction ModifyEntityDialog<T>({\n                                 show,\n                                 onHide,\n                                 entity,\n                                 onModify,\n                                 size = 'sm',\n                                 moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                 formModel,\n                                 validation,\n                                 loading\n                               }: {\n  show: boolean;\n  onHide: () => void;\n  entity?: T;\n  moduleName?: string;\n  onModify: (values: any) => Promise<any>;\n  formModel: ModifyForm;\n  size?: 'sm' | 'lg';\n  actions?: any;\n  validation?: any;\n  homePage?: string;\n  error?: { error: string };\n  loading?: boolean;\n}) {\n  const intl = useIntl();\n  const {_header, ...panels} = formModel;\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-modify\"\n      // style={{width}}\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {_.isString(_header) ? intl\n            .formatMessage(\n              {id: _header},\n              {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n            )\n            .toUpperCase() : _header(entity)}\n        </Modal.Title>\n      </Modal.Header>\n      {Object.values(panels).map((panel, index) => {\n        if(_.isString(panel)) throw new Error('Sử dụng sai cách ' + panel);\n        return (<ModifyEntityDialogForm\n          modifyPanel={panel}\n          validation={validation}\n          entity={entity}\n          onHide={onHide}\n          onModify={onModify}\n          key={`tttttttt${index}`}\n          loading={loading}\n        />)\n      })}\n      {/*<MasterEntityDetail data={entity} renderInfo={renderInfo}/>*/}\n     \n    </Modal>\n  );\n}\n\nexport default ModifyEntityDialog;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 7.58L10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\n\nexports.default = _default;","import React, {Fragment, useCallback, useEffect, useMemo, useState} from 'react';\nimport {Count, Create, Delete, DeleteMany, Get, GetAll,  Update} from './academic-year.service';\nimport {\n  DefaultPagination,\n  HomePageURL,\n  iconStyle,\n  NormalColumn,\n  SortColumn\n} from '../../common-library/common-consts/const';\nimport {ActionsColumnFormatter} from '../../common-library/common-components/actions-column-formatter';\nimport {InitMasterProps,} from '../../common-library/helpers/common-function';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {\n  MasterBodyColumns,\n  ModifyForm,\n  ModifyInputGroup, ModifyPanel,\n  RenderInfoDetail,\n  SearchModel\n} from \"../../common-library/common-types/common-type\";\nimport {MasterEntityDetailDialog} from \"../../common-library/common-components/master-entity-detail-dialog\";\nimport {MasterHeader} from \"../../common-library/common-components/master-header\";\nimport {MasterBody} from \"../../common-library/common-components/master-body\";\nimport ModifyEntityDialog from \"../../common-library/common-components/modify-entity-dialog\";\nimport {DeleteEntityDialog} from \"../../common-library/common-components/delete-entity-dialog\";\nimport DeleteManyEntitiesDialog from \"../../common-library/common-components/delete-many-entities-dialog\";\nimport isNumeric from \"antd/es/_util/isNumeric\";\nimport {DisplayDateTime} from \"../../common-library/helpers/detail-helpers\";\nimport * as AcademicYearService from \"../academic-year/academic-year.service\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nfunction AcademicYear() {\n  const {\n    entities,\n    intl,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    setEditEntity,\n    createEntity,\n    selectedEntities,\n    setSelectedEntities,\n    detailEntity,\n    showDelete,\n    setShowDelete,\n    showEdit,\n    setShowEdit,\n    showCreate,\n    setShowCreate,\n    showDetail,\n    setShowDetail,\n    showDeleteMany,\n    setShowDeleteMany,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    error,\n    setError,\n    add,\n    update,\n    get,\n    deleteMany,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<any>({\n    getServer: Get,\n    countServer: Count,\n    createServer: Create,\n    deleteServer: Delete,\n    deleteManyServer: DeleteMany,\n    getAllServer: GetAll,\n    updateServer: Update,\n  });\n  \n  const moduleName = 'ACADEMIC_YEAR.MODULE_NAME';\n  const headerTitle = 'ACADEMIC_YEAR.MASTER.HEADER.TITLE';\n  const bodyTitle = 'ACADEMIC_YEAR.MASTER.BODY.TITLE';\n  const createTitle = 'ACADEMIC_YEAR.CREATE.TITLE';\n  const updateTitle = 'ACADEMIC_YEAR.EDIT.TITLE';\n  const viewTitle = 'ACADEMIC_YEAR.VIEW.TITLE';\n  \n  useEffect(() => {\n    getAll(filterProps);\n    \n  }, [paginationProps, filterProps]);\n  const columns = useMemo((): MasterBodyColumns => ({\n    name: {\n      dataField: 'name',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.NAME'})}`,\n      ...SortColumn,\n    },\n    alertDays: {\n      dataField: 'alertDays',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.ALERT_DAYS'})}`,\n      ...SortColumn,\n    },\n    startDate: {\n      dataField: 'startDate',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.START_DATE'})}`,\n      formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n      ...SortColumn,\n    },\n    closureDate: {\n      dataField: 'closureDate',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.CLOSURE_DATE'})}`,\n      formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n      ...SortColumn,\n    },\n    finalClosureDate: {\n      dataField: 'finalClosureDate',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.FINAL_CLOSURE_DATE'})}`,\n      formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n      ...SortColumn,\n    },\n    code: {\n      dataField: 'code',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.CODE'})}`,\n      ...SortColumn,\n    },\n    status: {\n      dataField: 'status',\n      text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.HEADER.STATUS'})}`,\n      ...SortColumn,\n    },\n    // action: {\n    //   dataField: 'additionalActionComponent',\n    //   text: `${intl.formatMessage({id: 'ACADEMIC_YEAR.MASTER.TABLE.ACTION_COLUMN'})}`,\n    //   formatter: ActionsColumnFormatter,\n    //   formatExtraData: {\n    //     intl,\n    //     // onShowDetail: (entity: any) => {\n    //     //   get(entity);\n    //     //   setShowDetail(true);\n    //     // },\n    //     // onDelete: (entity: any) => {\n    //     //   setDeleteEntity(entity);\n    //     //   setShowDelete(true);\n    //     // },\n    //     // onEdit: (entity: any) => {\n    //     //   get(entity).then(result => {\n    //     //     setEditEntity(result.data);\n    //     //     setShowEdit(true);\n    //     //   });\n    //     // },\n    //   },\n    //   ...NormalColumn,\n    //   style: {minWidth: '130px'},\n    // },\n  }), []);\n\n  const masterEntityDetailDialog: RenderInfoDetail = useMemo((): RenderInfoDetail => [\n    {\n      data: {\n        startDate: {\n          title: 'ACADEMIC_YEAR.MASTER.HEADER.START_DATE',\n          formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n        },\n        closureDate: {\n          title: 'ACADEMIC_YEAR.MASTER.HEADER.CLOSURE_DATE',\n          formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n        },\n        finalClosureDate: {\n          title: 'ACADEMIC_YEAR.MASTER.HEADER.FINAL_CLOSURE_DATE',\n          formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n        },\n        alertDays: {title: 'ACADEMIC_YEAR.MASTER.HEADER.ALERT_DAYS'},\n        code: {title: 'ACADEMIC_YEAR.MASTER.HEADER.CODE'},\n        name: {title: 'ACADEMIC_YEAR.MASTER.HEADER.NAME'},\n        status: {title: 'ACADEMIC_YEAR.MASTER.HEADER.STATUS'}\n      },\n      titleClassName: 'col-3'\n    },\n  ], []);\n  \n  const initSearchModel = useMemo<SearchModel>(() => (\n    {\n      // faculty: {\n      //   type: 'search-select',\n      //   label: 'Analyst',\n      //   onSearch: AcademicYearService.GetAll,\n      //   keyField: 'faculty',\n      // },\n      name: {\n        type: 'search-select',\n        label: 'Name',\n        onSearch: AcademicYearService.GetAll,\n        keyField: 'name',\n      },\n      startDate: {\n        type: 'date-time',\n        label: 'Start Date'\n      },\n      finalClosureDate: {\n        type: 'date-time',\n        label: 'Final Closure Date'\n      },\n    }), []);\n  const [searchModel, setSearchModel] = useState(initSearchModel);\n  const [group1, setGroup1] = useState<ModifyInputGroup>({\n    _subTitle: '',\n    startDate: {\n      _type: 'date-time',\n      label: 'ACADEMIC_YEAR.MASTER.HEADER.START_DATE',\n    },\n    closureDate: {\n      _type: 'date-time',\n      label: 'ACADEMIC_YEAR.MASTER.HEADER.CLOSURE_DATE',\n    },\n    finalClosureDate: {\n      _type: 'date-time',\n      label: 'ACADEMIC_YEAR.MASTER.HEADER.FINAL_CLOSURE_DATE',\n    },\n    alertDays: {\n      _type: 'string',\n      label: 'ACADEMIC_YEAR.MASTER.HEADER.ALERT_DAYS',\n    },\n    code: {\n      _type: 'string',\n      label: 'ACADEMIC_YEAR.MASTER.HEADER.CODE',\n      disabled: true,\n    },\n    name: {\n      _type: 'string',\n      label: 'ACADEMIC_YEAR.MASTER.HEADER.NAME',\n    },\n  });\n\n  const modifyModel: ModifyPanel = {\n    _title: headerTitle,\n    commonInfo: {\n      _subTitle: 'EMPTY',\n      _className: 'col-12 row text-primary',\n      _inputClassName: 'col-4',\n      'academicYear._id.academicYear.name': {\n        _type: 'string',\n        label: 'ACADEMIC_YEAR.MASTER.HEADER.NAME',\n        disabled: true,\n      },\n      'academicYear._id.academicYear.startDate': {\n        _type: 'date-time',\n        label: 'ACADEMIC_YEAR.MASTER.HEADER.START_DATE',\n        // onSearch: UserService.GetAll,\n        disabled: true,\n      },\n    },\n  };\n\n  const createForm = useMemo((): ModifyForm => ({\n    _header: createTitle,\n    panel1: {\n      _title: '',\n      group1: group1\n    },\n  }), [group1]);\n  const additionalActionComponent = () => {\n    return (\n        <>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary fixed-btn-width mr-8\"\n          onClick={() => {\n            const activeAcademicYear = entities.filter(\n                item => item.status === 'Active')[0]\n            if (activeAcademicYear) get(activeAcademicYear).then(result => {\n              setEditEntity(result.data);\n              setShowEdit(true);\n            });\n          }}>\n          <EditIcon style={iconStyle} />\n          {intl.formatMessage({ id: 'ACADEMIC_YEAR.HEADER.EDIT_BTN' })}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger mr-8\"\n          onClick={() => {\n            const activeAcademicYear = entities.filter(\n                item => item.status === 'Active')[0]\n            AcademicYearService.Update({...activeAcademicYear, status: 'Complete'})\n                .then(() => {\n                  setPaginationProps(DefaultPagination);\n                  setFilterProps({});\n                })\n          }}>\n          <CheckCircleOutlineIcon style={iconStyle} />\n          {intl.formatMessage({ id: 'ACADEMIC_YEAR.HEADER.END_BTN' })}\n        </button>\n        </>);\n  } ;\n  const updateForm = useMemo((): ModifyForm => ({...createForm, _header: updateTitle}), [createForm]);\n  \n  console.log(createEntity)\n  return (\n    <Fragment>\n      <MasterEntityDetailDialog\n        title={viewTitle}\n        moduleName={moduleName}\n        show={showDetail}\n        entity={detailEntity}\n        renderInfo={masterEntityDetailDialog}\n        onHide={() => {\n          setShowDetail(false);\n        }}\n      />\n      <ModifyEntityDialog\n        formModel={createForm}\n        show={showCreate}\n        onModify={add}\n        onHide={() => {\n          setShowCreate(false);\n        }}\n        loading={loading}\n      />\n      <ModifyEntityDialog\n        formModel={updateForm}\n        show={showEdit}\n        entity={editEntity}\n        onModify={update}\n        onHide={() => {\n          setShowEdit(false);\n        }}\n        loading={loading}\n      />\n      <Switch>\n        <Route path={`${HomePageURL.academicYear}`}>\n          <MasterHeader\n            title={headerTitle}\n            onSearch={(value) => {\n              setPaginationProps(DefaultPagination);\n              if (value.name !== undefined) setFilterProps({...value, name: value.name.name})\n              else setFilterProps(value)\n            }}\n            searchModel={searchModel}\n          />\n          <MasterBody\n            title={bodyTitle}\n            onCreate={() => {\n              setShowCreate(true);\n            }}\n            entities={entities}\n            total={total}\n            columns={columns}\n            loading={loading}\n            paginationParams={paginationProps}\n            setPaginationParams={setPaginationProps}\n            isShowId={true}\n            additionalActionComponent={additionalActionComponent}\n          />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\n\nexport default AcademicYear;\n"],"sourceRoot":""}