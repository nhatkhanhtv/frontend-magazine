{"version":3,"sources":["../node_modules/@material-ui/icons/SaveOutlined.js","app/common-library/forms/input-custom.tsx","app/common-library/common-components/modify-entity-page.tsx","../node_modules/@material-ui/icons/Delete.js","app/common-library/common-components/delete-entity-dialog.tsx","app/common-library/common-components/modify-entity-dialog-form.tsx","app/common-library/common-components/modify-entity-dialog.tsx","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/@material-ui/icons/Edit.js","app/pages/multilevel-sale/multilevel-sale.service.tsx","../node_modules/react-bootstrap/esm/Table.js","app/common-library/common-components/master-tree-structure.tsx","app/pages/multilevel-sale/multi-sale-body.tsx","app/pages/multilevel-sale/multilevel-action-column.tsx","app/pages/multilevel-sale/multilevel-sale.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","InputCustom","className","component","props","Component","formik","useFormikContext","ModifyEntityPage","inputGroups","mode","intl","useIntl","pl","_subTitle","values","map","inputGroup","index","_","isString","Error","JSON","stringify","_className","_inputClassName","inputs","formatMessage","id","toUpperCase","prevKey","inputClassName","RenderForm","defaultClassName","keys","key","input","trimKey","trim","name","_type","type","innt","DeleteEntityDialog","isShow","entity","onHide","onDelete","title","bodyTitle","confirmMessage","deleteBtn","deletingMessage","cancelBtn","moduleName","loading","error","_innerError","useMemo","parse","e","show","aria-labelledby","dialogClassName","Header","closeButton","Title","Body","CapitalizeFirstLetter","Footer","onClick","style","iconStyle","additional","message","ModifyEntityDialogForm","onModify","modifyPanel","validation","_title","initValues","InitValues","_header","panel1","useState","entityForEdit","setEntityForEdit","useEffect","enableReinitialize","initialValues","validationSchema","onSubmit","setSubmitting","__v","undefined","then","catch","err","handleSubmit","Modal","Fragment","Spinner","animation","variant","size","ModifyEntityDialog","formModel","panels","panel","forwardRef","_ref","ref","bsPrefix","children","_ref$as","as","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","_extends","classNames","displayName","API_URL","API_BASE_URL","API_AGENCY_URL","API_URL_TREE_FORMAT","BULK_API_URL","Create","data","axios","post","GetAll","queryProps","sortList","paginationProps","get","params","GetAgency","agencyParams","Count","Get","_id","Update","put","Delete","delete","DeleteMany","entities","listSpecies","DeleteAgency","Table","striped","bordered","borderless","hover","responsive","decoratedBsPrefix","classes","table","responsiveClass","MasterTreeStructure","onCreate","onEdit","onFetchEntities","currentChild","setCurrentChild","tableLayout","renderChild","skipDistance","childrenItem","keyItem","backgroundColor","console","log","handleClick","marginLeft","cursor","border","handleAdd","handleEdit","handleDelete","length","MultiLevelSaleBody","body","item","fontWeight","columns","prop","total","paginationParams","setPaginationParams","MultilevelSaleActionColumn","cellContent","row","rowIndex","src","ToAbsoluteUrl","deleteDialogTitle","homeURL","window","location","pathname","MultilevelSale","InitMasterProps","getServer","MultilevelSaleService","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","deleteEntity","setDeleteEntity","editEntity","setEditEntity","setCreateEntity","selectedEntities","setSelectedEntities","showDelete","setShowDelete","showEdit","setShowEdit","showCreate","setShowCreate","setPaginationProps","filterProps","setError","add","update","deleteFn","getAll","agency","setAgency","agencyTotal","setAgencyTotal","agencyLoading","setAgencyLoading","storeLevel","setAgencyParams","showdeleteAgency","setShowDeleteAgency","deleteAgency","setDeleteAgency","refresh","setRefresh","errorAgency","setErrorAgency","history","useHistory","res","paging","dataField","text","formatter","cell","page","limit","paddingTop","code","SortColumn","action","formatExtraData","push","NormalColumn","minWidth","MultilevelSaleSchema","Yup","shape","test","filter","findIndex","el","TreeBody","onSelectMany","placeholder","label","disabled","required","status","group1","createForm","updateForm","onFetchAgency","DefaultPagination","onDeleteAgency","reason","path","parentId","ConvertStatusToString","homePage","ConvertStatusToBoolean"],"mappings":"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","file":"static/js/18.a3cce6a9.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6z\"\n}), 'SaveOutlined');\n\nexports.default = _default;","import React, {ReactElement} from 'react';\nimport {useFormikContext} from \"formik\";\n\nexport function InputCustom({\n                              className, component, ...props\n                            }: {\n  className: string,\n  component: (props: any) => ReactElement;\n  \n}) {\n  const Component = component;\n  const formik = useFormikContext<any>();\n  return (<div className={className}>\n    <Component  {...formik} {...props}/>\n  </div>)\n}\n\n","import React, {Fragment} from 'react';\nimport {InputGroups} from '../common-types/common-type';\nimport {useIntl} from 'react-intl';\nimport {\n  InputBoolean,\n  InputCheckBox,\n  InputDateTime,\n  InputImage,\n    InputFile,\n  InputNumber,\n  InputRadio,\n  InputSearchSelect,\n  InputSelect,\n  InputString,\n  InputStringNumber,\n  InputTag,\n  InputTreeSelect,\n} from './common-input';\nimport _ from 'lodash';\nimport {InputCustom} from \"../forms/input-custom\";\n\nexport function ModifyEntityPage<T>({\n                                      inputGroups,\n                                      mode = 'horizontal',\n                                    }:\n                                      {\n                                        inputGroups: InputGroups;\n                                        mode?: 'horizontal' | 'vertical';\n                                        errors?: any;\n                                      }) {\n  const intl = useIntl();\n  const {_subTitle, ...pl} = inputGroups;\n  return (\n    <>\n      <div className={'row'}>\n        {pl && Object.values(pl).map((inputGroup, index) => {\n          if (_.isString(inputGroup)) throw new Error('Sử dụng sai cách ' + inputGroup + '\\n' + JSON.stringify(pl));\n          const {_subTitle, _className, _inputClassName, ...inputs} = inputGroup;\n          return (\n            <div key={`modify-entity-page${index}`} className={_className ?? 'col-12'}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={inputs} prevKey={''} inputClassName={_inputClassName} mode={mode}/>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  );\n}\n\nexport const RenderForm = ({inputs, prevKey, mode, inputClassName}: any) => {\n  const intl = useIntl();\n  const defaultClassName = inputClassName ?? 'mb-5';\n  return (<>\n    {Object.keys(inputs).map(key => {\n      const input = inputs[key];\n      const trimKey = key.trim();\n      if (_.isString(input)) throw new Error('Sử dụng sai cách ' + key + '\\n' + JSON.stringify(inputs));\n      const name = prevKey ? ((trimKey === '' || prevKey === '') ? prevKey : `${prevKey}.${trimKey}`) : trimKey;\n      switch (input._type) {\n        case 'string':\n        case 'email':\n          return (\n            <InputString\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'string-number': {\n          return (\n            <InputStringNumber\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        }\n        case 'number':\n          return (\n            <InputNumber\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'date-time':\n          return (\n            <InputDateTime\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'radio':\n          return (\n            <InputRadio\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          )\n        case 'boolean': {\n          return (\n            <InputBoolean\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'image':\n          return (\n            <InputImage\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              // value={(values && values[key]) || []}\n              key={`modify-page-form-${name}`}\n            />\n          );\n      case 'file':\n          return (\n              <InputFile\n                  className={defaultClassName}\n                  name={name}\n                  mode={mode}\n                  type={input._type}\n                  {...input}\n                  // value={(values && values[key]) || []}\n                  key={`modify-page-form-${name}`}\n              />\n          );\n        case 'search-select': {\n          return (\n            <InputSearchSelect\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'tree-select': {\n          return (\n            <InputTreeSelect\n              className={defaultClassName}\n              name={key}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`master_header${key}`}\n            />\n          );\n        }\n        case 'tag': {\n          return (\n            <InputTag\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        \n        case 'checkbox':\n          return (\n            <InputCheckBox\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        \n        case 'select':\n          return (\n            <InputSelect\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          )\n        \n        case 'custom': {\n          const {_type, ...props} = input;\n          return (<InputCustom {...props} key={`modify-page-form-${name}`}/>);\n        }\n        default: {\n          const {_type, _subTitle, _className, _inputClassName, ...innt} = input as any;\n          return _className ? (\n              <span key={`render_form_span${name}`} className={_className}>\n            {_subTitle && _subTitle !== '' && (<div\n              className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n                <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                            prevKey={name}\n                            mode={mode}/>\n            </span>) :\n            (<Fragment key={`render_form${name}`}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                          prevKey={name}\n                          mode={mode}/>\n            </Fragment>)\n        }\n      }\n    })}</>)\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import React, {useMemo} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {useIntl} from 'react-intl';\nimport {DeleteDialogProps} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {CapitalizeFirstLetter} from '../helpers/common-function';\nimport _ from \"lodash\";\n\nexport function DeleteEntityDialog<T>({\n                                        isShow,\n                                        entity,\n                                        onHide,\n                                        onDelete,\n                                        title = 'COMMON_COMPONENT.DELETE_DIALOG.TITLE',\n                                        bodyTitle = 'COMMON_COMPONENT.DELETE_DIALOG.BODY_TITLE',\n                                        confirmMessage = 'COMMON_COMPONENT.DELETE_DIALOG.CONFIRM',\n                                        deleteBtn = 'COMMON_COMPONENT.DELETE_DIALOG.DELETE_BTN',\n                                        deletingMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.DELETING',\n                                        cancelBtn = 'COMMON_COMPONENT.DELETE_DIALOG.CANCEL_BTN',\n                                        moduleName = 'COMMON_COMPONENT.DELETE_DIALOG.MODULE_NAME',\n                                        loading,\n                                        error = {error: ''},\n                                      }: DeleteDialogProps<T>) {\n  const intl = useIntl();\n  const _innerError = useMemo((): string | ({ message: string, additional: string }[]) => {\n    try {\n      return JSON.parse(error.error)\n    } catch (e) {\n      return error?.error\n    }\n  }, [error]);\n  return (<><Modal\n    show={isShow && (error.error === '')}\n    onHide={onHide}\n    aria-labelledby=\"example-modal-sizes-title-lg\"\n    dialogClassName=\"modal-delete\">\n    {/*{loading && <ModalProgressBar />}*/}\n    <Modal.Header className=\"border-bottom-0\" closeButton>\n      <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n        {intl\n          .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n          .toUpperCase()}\n      </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {!loading && (\n        <>\n          {CapitalizeFirstLetter(\n            intl.formatMessage(\n              {id: bodyTitle},\n              {moduleName: intl.formatMessage({id: moduleName})},\n            ),\n          )}\n          {' ' + intl.formatMessage(\n            {id: confirmMessage},\n            {moduleName: intl.formatMessage({id: moduleName})},\n          )}\n        </>\n      )}\n      {loading && <span className={'ml-1'}>{intl.formatMessage({id: deletingMessage})}</span>}\n    </Modal.Body>\n    \n    <Modal.Footer className=\"border-top-0\">\n      <button type=\"button\" className=\"btn btn-primary mr-lg-8 fixed-btn-width\"\n              onClick={e => onDelete(entity)}>\n        {/*<DeleteIcon style={iconStyle}/>*/}\n        {loading ? (<div className=\"spinner spinner-sm spinner-darker-white\">\n          <span className={'ml-6'}>{intl.formatMessage({id: deleteBtn})}</span>\n        </div>) : intl.formatMessage({id: deleteBtn})}\n      </button>\n      <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n        <CancelOutlinedIcon style={iconStyle}/>\n        {intl.formatMessage({id: cancelBtn})}\n      </button>\n    </Modal.Footer>\n  </Modal>\n    <Modal\n      show={isShow && (error.error !== '')}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-delete\">\n      <Modal.Header className=\"border-bottom-0\" closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!loading && error.error !== '' && (\n          <>\n            {_.isString(_innerError) ?\n              (<p className='text-danger'>{intl.formatMessage({id: _innerError}, {additional: ''})}</p>)\n              : _innerError.map((e, index) => (\n                (<p key={`abc${index}`} className='text-danger'>{intl.formatMessage({id: e.message}, e)}</p>)\n              ))\n            }\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: cancelBtn})}\n        </button>\n      </Modal.Footer>\n    </Modal></>)\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {Modal, Spinner} from 'react-bootstrap';\nimport {Form, Formik} from 'formik';\nimport {useIntl} from 'react-intl';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {ModifyPanel} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {ModifyEntityPage} from './modify-entity-page';\nimport {InitValues} from \"../helpers/common-function\";\n\nfunction ModifyEntityDialogForm<T>({\n                                     entity,\n                                     onModify,\n                                     moduleName = 'COMMON_COMPONENT.CREATE_UPDATE.MODULE_NAME',\n                                     onHide,\n                                     modifyPanel,\n                                     validation,\n                                     loading\n                                   }: {\n  moduleName?: string;\n  entity?: any;\n  onHide: () => void;\n  onModify: (values: any) => Promise<any>;\n  modifyPanel: ModifyPanel;\n  validation: any;\n  loading?: boolean\n}) {\n  const intl = useIntl();\n  const {_title, ...inputGroups} = modifyPanel;\n  const initValues = useMemo(() => InitValues({_header: '', panel1: modifyPanel}), [modifyPanel]);\n  const [entityForEdit, setEntityForEdit] = useState(initValues);\n  \n  useEffect(() => {\n     setEntityForEdit(entity ?? initValues);\n  }, [entity,initValues]);\n  \n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={entityForEdit}\n      validationSchema={validation}\n      onSubmit={(values, {setSubmitting}) => {\n        // console.log(values);\n        onModify({...entity, ...values, __v: undefined}).then(() => {\n          onHide()\n        }).catch((err) => {\n          setSubmitting(false)\n        });\n      }}>\n      {({handleSubmit}) => (\n        <>\n          <Modal.Body className=\"overlay overlay-block cursor-default\">\n            <Form className=\"form form-label-right\">\n              {Object.keys(inputGroups).map(key => (\n                <React.Fragment key={key}>\n                  <ModifyEntityPage inputGroups={inputGroups}/>\n                </React.Fragment>\n              ))}\n            </Form>\n          </Modal.Body>\n          <Modal.Footer className=\"border-top-0 pt-10\">\n            <button\n              type=\"submit\"\n              onClick={() => handleSubmit()}\n              className=\"btn btn-primary fixed-btn-width\">\n              {\n                loading === true ? <Spinner animation=\"border\" variant=\"light\" size=\"sm\"/> :\n                  <SaveOutlinedIcon style={iconStyle}/>\n              }\n              {'\\u00A0'}\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.SAVE_BTN'})}\n            </button>\n            <button\n              type=\"button\"\n              onClick={onHide}\n              className=\"btn btn-outline-primary fixed-btn-width\">\n              <CancelOutlinedIcon style={iconStyle}/>\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.CLOSE_BTN'})}\n            </button>\n          </Modal.Footer>\n        </>\n      )}\n    </Formik>\n  );\n}\n\nexport default ModifyEntityDialogForm;\n","import React, {useState} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ModifyEntityDialogForm from './modify-entity-dialog-form';\nimport {useIntl} from 'react-intl';\nimport {ModifyForm} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nfunction ModifyEntityDialog<T>({\n                                 show,\n                                 onHide,\n                                 entity,\n                                 onModify,\n                                 size = 'sm',\n                                 moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                 formModel,\n                                 validation,\n                                 loading\n                               }: {\n  show: boolean;\n  onHide: () => void;\n  entity?: T;\n  moduleName?: string;\n  onModify: (values: any) => Promise<any>;\n  formModel: ModifyForm;\n  size?: 'sm' | 'lg';\n  actions?: any;\n  validation?: any;\n  homePage?: string;\n  error?: { error: string };\n  loading?: boolean;\n}) {\n  const intl = useIntl();\n  const {_header, ...panels} = formModel;\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-modify\"\n      // style={{width}}\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {_.isString(_header) ? intl\n            .formatMessage(\n              {id: _header},\n              {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n            )\n            .toUpperCase() : _header(entity)}\n        </Modal.Title>\n      </Modal.Header>\n      {Object.values(panels).map((panel, index) => {\n        if(_.isString(panel)) throw new Error('Sử dụng sai cách ' + panel);\n        return (<ModifyEntityDialogForm\n          modifyPanel={panel}\n          validation={validation}\n          entity={entity}\n          onHide={onHide}\n          onModify={onModify}\n          key={`tttttttt${index}`}\n          loading={loading}\n        />)\n      })}\n      {/*<MasterEntityDetail data={entity} renderInfo={renderInfo}/>*/}\n     \n    </Modal>\n  );\n}\n\nexport default ModifyEntityDialog;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\n\nexport const API_URL = API_BASE_URL + '/store-level';\n\nexport const API_AGENCY_URL = API_BASE_URL + '/agency';\n\nexport const API_URL_TREE_FORMAT = API_URL + '/tree'\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                 queryProps,\n                                                 sortList,\n                                                 paginationProps,\n                                               }) => {\n  return axios.get(`${API_URL_TREE_FORMAT}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const GetAgency = ({agencyParams, paginationProps}: any) => {\n  return axios.get(`${API_AGENCY_URL}`, {\n    params: {...agencyParams, ...paginationProps}\n  })\n}\n\nexport const Count: CountProps<any> = ({\n                                         queryProps,\n                                         sortList,\n                                         paginationProps,\n                                       }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const Get: GetProps<any> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {listSpecies: entities},\n  });\n};\n\nexport const DeleteAgency = (entity: any) => {\n  return axios.delete(`${API_AGENCY_URL}/${entity._id}`);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TreeData } from '../../pages/multilevel-sale/multilevel-sale.model';\nimport { ChildFriendly } from '@material-ui/icons';\nimport { ConvertStatusToBoolean } from '../helpers/common-function';\nimport './master-tree-structure.scss'\n\ninterface TreeDataProp {\n  data: TreeData[];\n  onCreate?: (entity: any) => void;\n    onEdit?: (entity: any) => void;\n    onDelete?: (entity: any) => void;\n    onFetchEntities?: (entity: any) => void;\n}\n\nconst MasterTreeStructure: React.FC<TreeDataProp> = ({ data, onCreate, onEdit, onDelete, onFetchEntities }) => {\n  const [currentChild, setCurrentChild] = useState<string | undefined>()\n\n  const handleAdd = (data: TreeData): void => {\n    if (onCreate) {\n      onCreate(data)\n    }\n  }\n  const handleEdit = (data: TreeData): void => {\n    if (onEdit) {\n      onEdit(data)\n    }\n  };\n\n  const handleClick = (data: TreeData): void => {\n    console.log(data);\n    setCurrentChild(data._id)\n    if (onFetchEntities) {\n      onFetchEntities(data)\n    }\n  }\n\n  const handleDelete = (data: TreeData): void => {\n    console.log(data);\n    if (onDelete) {\n      onDelete(data)\n    }\n  }\n\n\n\n  const renderChild = (data: TreeData[], size: number, skipDistance: number) => {\n    return (\n      <>\n        {data.map((childrenItem: TreeData, keyItem: number) => (\n          <React.Fragment key={'childrenren' + keyItem}>\n            <tr style={{backgroundColor:(currentChild === childrenItem._id ? 'rgba(39, 174, 96,0.1)' : 'transparent')}}>\n              <td onClick={() => handleClick(childrenItem)} className={currentChild === childrenItem._id ? 'text-primary font-weight-700' : ''}  >\n                <div style={{ marginLeft: `${size}px` }}>\n                  {/* {childrenItem.children && childrenItem.children.length > 0 ? (\n                    <button\n                      onClick={() => onShowChildren(childrenItem._id)}\n                      style={{ backgroundColor: 'white', border: 'none' }}>\n                      {'>'}\n                    </button>\n                  ) : (\n                    <button\n                      onClick={() => onShowChildren(childrenItem._id)}\n                      style={{ backgroundColor: 'white', border: 'none' }}>\n                      {'\\u00A0'}\n                    </button>\n                  )} */}\n                  <span onClick={() => {\n                    // console.log('ahihi')\n                    }} style={{ cursor: 'pointer' }}>{childrenItem.name}</span>\n                </div>\n              </td>\n              {(onCreate || onEdit || onDelete) &&\n              <td>\n                <div className=\"text-right\" >\n                {onCreate && (\n                  <button\n                    style={{ backgroundColor: 'transparent', border: 'none' }}\n                    onClick={() => handleAdd(childrenItem)}\n                    className=\"text-primary\">\n                    <AddIcon />\n                  </button>\n                )}\n                {onEdit && (\n                  <button\n                    style={{ backgroundColor: 'transparent', border: 'none' }}\n                    onClick={() => handleEdit(childrenItem)}\n                    className=\"text-primary\">\n                    <EditIcon />\n                  </button>\n                )}\n                {onDelete && (\n                  <button\n                    style={{ backgroundColor: 'transparent', border: 'none' }}\n                    onClick={() => handleDelete(childrenItem)}\n                    className=\"text-primary\">\n                    <DeleteIcon />\n                  </button>\n                )}\n                </div>\n              </td>\n              }\n            </tr>\n            {\n              childrenItem.children &&\n              childrenItem.children.length > 0 &&\n              renderChild(childrenItem.children, size + skipDistance, skipDistance)}\n          </React.Fragment>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <>\n      {/* {data.map((value: TreeData, key: number) => { */}\n      <Table borderless style={{ tableLayout: 'fixed' }} className=\"tree-table\">\n        <tbody>\n          {renderChild(data, 0, 25)}\n\n          {/* {data.map((value: TreeData, key: number) => {\n              return (\n\n              // <tr>\n              //   <td className=\"w-50\">\n              //     <div className=\"mb-5\">\n              //       <button\n              //         onClick={() => onShowChildren(value._id)}\n              //         style={{ backgroundColor: 'white', border: 'none' }}>\n              //         {'>'}\n              //       </button>\n              //       <span onClick={() => onShowChildren(value._id)}>{value.name}</span>\n              //     </div>\n              //   </td>\n              //   <td>\n              //     <button\n              //       style={{ backgroundColor: 'white', border: 'none' }}\n              //       className=\"text-primary\"\n              //       onClick={() => onEdit(value)}>\n              //       <AddIcon />\n              //     </button>\n              //     <button\n              //       style={{ backgroundColor: 'white', border: 'none' }}\n              //       className=\"text-primary\"\n              //       onClick={() => onEdit(value)}>\n              //       <EditIcon />\n              //     </button>\n              //   </td>\n              // </tr>\n              showChildrenV2[value._id] && renderChild(value.children, 3.75, 3.75)\n            )})} */}\n        </tbody>\n      </Table>\n\n      {/* })} */}\n    </>\n  );\n};\n\nexport default MasterTreeStructure;\n","import React, {Fragment} from 'react';\nimport {useIntl} from 'react-intl';\nimport {Card, CardBody, CardHeader} from '../../common-library/card';\nimport {MasterTable} from '../../common-library/common-components/master-table';\nimport MasterTreeStructure from '../../common-library/common-components/master-tree-structure';\nimport {MultilevelSaleBodyProp} from './multilevel-sale.model';\nimport AddIcon from '@material-ui/icons/Add';\nimport './style/multilevel-sale.scss';\n\nconst MultiLevelSaleBody: React.FC<MultilevelSaleBodyProp> = ({\n  title,\n  body,\n  onCreate,\n  onEdit,\n  onDelete,\n  onFetchEntities,\n}) => {\n  const intl = useIntl();\n  \n  return (\n    <Card>\n      {title && <CardHeader title={intl.formatMessage({id: title})}/>}\n      <CardBody>\n        {/* <div className=\"row no-gutters mb-10\">\n          <div className=\"col-md-6 col-12\">\n            <MasterTreeStructure data={data} />\n          </div>\n        </div> */}\n        <div className=\"row no-gutters mb-10 justify-content-between\">\n          {body.map((item: any, key: number) => {\n            switch (item.type) {\n              case 'Tree':\n                return (\n                  <Fragment key={key}>\n                    <div className={`col-xl-${12 / body.length} col-12 pr-xl-3`}>\n                      <div className=\"p-5 layout\">\n                        {\n                          item.title && (\n                            <p style={{fontWeight: 'bold'}}>\n                              {intl.formatMessage({id: item.title})}\n                              <span\n                                className=\"text-primary\"\n                                style={{cursor: 'pointer'}}\n                                onClick={() => {\n                                  if (onCreate) {\n                                    onCreate(null);\n                                  }\n                                }}>\n                                <AddIcon/>\n                              </span>\n                            </p>\n                          )\n                        }\n                        <MasterTreeStructure\n                          data={item.data}\n                          onCreate={onCreate}\n                          onEdit={onEdit}\n                          onDelete={onDelete}\n                          onFetchEntities={onFetchEntities}\n                        />\n                      </div>\n                    </div>\n                  </Fragment>\n                );\n              \n              case 'Table':\n                return (\n                  <Fragment key={key}>\n                    <div className={`col-xl-${12 / body.length} col-12 pl-xl-3`}>\n                      <div className=\"p-5 layout\">\n                        {\n                          item.title && (\n                            <p style={{fontWeight: 'bold'}}>\n                              {intl.formatMessage({id: item.title})}\n                            </p>\n                          )\n                        }\n                        <MasterTable\n                          entities={item.data}\n                          columns={item.prop.columns}\n                          total={item.prop.total}\n                          loading={item.prop.loading}\n                          paginationParams={item.prop.paginationParams}\n                          setPaginationParams={item.prop.setPaginationParams}\n                        />\n                      </div>\n                    </div>\n                  </Fragment>\n                );\n            }\n            return <></>;\n          })}\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default MultiLevelSaleBody;\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\n// import './master-table.scss';\nimport {IntlShape} from 'react-intl';\nimport {ToAbsoluteUrl} from '../../common-library/helpers/assets-helpers';\n\ninterface ActionColumnProps<T> {\n  onDelete: (entity: T) => void;\n}\n\nexport function MultilevelSaleActionColumn<T>(\n  cellContent: any,\n  row: any,\n  rowIndex: number,\n  {onDelete, intl}: ActionColumnProps<T> & { intl: IntlShape },\n) {\n  \n  return (\n    <>\n      <a\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.DELETE_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm\"\n        onClick={() => onDelete(row)}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={ToAbsoluteUrl('/media/svg/icons/General/Trash.svg')}\n            title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.DELETE_BTN'})}\n          />\n        </span>\n      </a>\n    </>\n  );\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {\n  ConvertStatusToBoolean,\n  ConvertStatusToString,\n  InitMasterProps,\n} from '../../common-library/helpers/common-function';\nimport MultiLevelSaleBody from './multi-sale-body';\nimport {TreeData} from './multilevel-sale.model';\nimport * as MultilevelSaleService from './multilevel-sale.service';\nimport {useIntl} from 'react-intl';\nimport {DefaultPagination, NormalColumn, SortColumn,} from '../../common-library/common-consts/const';\nimport {MultilevelSaleActionColumn} from './multilevel-action-column';\nimport ModifyEntityDialog from '../../common-library/common-components/modify-entity-dialog';\nimport {DeleteEntityDialog} from '../../common-library/common-components/delete-entity-dialog';\nimport {ModifyForm, ModifyInputGroup,} from '../../common-library/common-types/common-type';\nimport * as Yup from 'yup';\nimport {Route, Switch, useHistory} from 'react-router-dom';\n\nconst moduleName = 'MULTILEVEL_SALE.MODULE_NAME';\nconst deleteDialogTitle = 'MULTILEVEL_SALE.DELETE_DIALOG.TITLE';\nconst createTitle = 'MULTILEVEL_SALE.CREATE.TITLE';\nconst updateTitle = 'MULTILEVEL_SALE.UPDATE.TITLE';\nconst homeURL = `${window.location.pathname}`;\n\nfunction MultilevelSale() {\n  const intl = useIntl();\n  \n  const {\n    entities,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    setEditEntity,\n    setCreateEntity,\n    selectedEntities,\n    setSelectedEntities,\n    showDelete,\n    setShowDelete,\n    showEdit,\n    setShowEdit,\n    showCreate,\n    setShowCreate,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    loading,\n    error,\n    setError,\n    add,\n    update,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<TreeData>({\n    getServer: MultilevelSaleService.Get,\n    countServer: MultilevelSaleService.Count,\n    createServer: MultilevelSaleService.Create,\n    deleteServer: MultilevelSaleService.Delete,\n    deleteManyServer: MultilevelSaleService.DeleteMany,\n    getAllServer: MultilevelSaleService.GetAll,\n    updateServer: MultilevelSaleService.Update,\n  });\n  \n  const [agency, setAgency] = useState<any[]>([]);\n  const [agencyTotal, setAgencyTotal] = useState(0);\n  const [agencyLoading, setAgencyLoading] = useState(false);\n  const [agencyParams, setAgencyParams] = useState({\n    storeLevel: {\n      _id: ''\n    },\n  });\n  const [showdeleteAgency, setShowDeleteAgency] = useState(false);\n  const [deleteAgency, setDeleteAgency] = useState<any>(null);\n  const [refresh, setRefresh] = useState(false);\n  const [errorAgency, setErrorAgency] = useState('');\n  \n  const history = useHistory();\n  \n  useEffect(() => {\n    getAll({ ...filterProps });\n  }, [filterProps, paginationProps]);\n  \n  useEffect(() => {\n    setAgencyLoading(true);\n    MultilevelSaleService.GetAgency({agencyParams: { ...agencyParams, type: '0' }, paginationProps})\n      .then(res => {\n        setAgency(res.data.data);\n        setAgencyTotal(res.data.paging.total);\n        setAgencyLoading(false);\n        setErrorAgency('');\n      })\n      .catch(err => {\n        console.log(err);\n        setAgencyLoading(false);\n        setErrorAgency(err.message);\n      });\n  }, [paginationProps, agencyParams, refresh]);\n  \n  const columns = {\n    _id: {\n      dataField: '_id',\n      text: `${intl.formatMessage({id: 'ORDINAL'})}`,\n      formatter: (cell: any, row: any, rowIndex: number) => (\n        <p>{rowIndex + 1 + ((paginationProps.page ?? 0) - 1) * (paginationProps.limit ?? 0)}</p>\n      ),\n      style: {paddingTop: 20},\n    },\n    code: {\n      dataField: 'code',\n      text: `${intl.formatMessage({id: 'MULTILEVEL_SALE.MASTER.TABLE.CODE_AGENCY'})}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    name: {\n      dataField: 'name',\n      text: `${intl.formatMessage({id: 'MULTILEVEL_SALE.MASTER.TABLE.NAME_AGENCY'})}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    action: {\n      dataField: 'action',\n      text: `${intl.formatMessage({id: 'PURCHASE_ORDER.MASTER.TABLE.ACTION_COLUMN'})}`,\n      formatter: MultilevelSaleActionColumn,\n      formatExtraData: {\n        intl,\n        onDelete: (entity: any) => {\n          setDeleteAgency(entity);\n          setErrorAgency('');\n          setShowDeleteAgency(true);\n          history.push(`/multilevel-sale/agency/${entity._id}/delete`);\n        },\n      },\n      ...NormalColumn,\n      style: {minWidth: '130px'},\n    },\n  };\n  \n  const MultilevelSaleSchema = Yup.object().shape({\n    name: Yup.string()\n      .test('Exists validate', 'MULTIVELEVEL_SALE_NAME_WAS_EXISTED', function (value) {\n        if (editEntity) {\n          const validArr = entities.filter(item => item._id !== editEntity._id);\n          const index = validArr.findIndex(el => el.name === value);\n          return index === -1;\n        }\n        \n        const index = entities.findIndex(el => el.name === value);\n        return index === -1;\n      }),\n  });\n  \n  const TreeBody = [\n    {\n      name: 'Cấp',\n      title: 'MULTIVELEVEL_SALE_TREE_DATA',\n      type: 'Tree',\n      data: entities,\n    },\n    {\n      name: 'Test',\n      title: 'MULTIVELEVEL_SALE_AGENCY_DATA',\n      type: 'Table',\n      data: agency,\n      prop: {\n        columns: columns,\n        total: agencyTotal,\n        loading: agencyLoading,\n        paginationParams: paginationProps,\n        setPaginationParams: setPaginationProps,\n        onSelectMany: setSelectedEntities,\n        selectedEntities: selectedEntities,\n      },\n    },\n  ];\n  const [group1] = useState<ModifyInputGroup>({\n    _subTitle: '',\n    code: {\n      _type: 'string',\n      placeholder: intl.formatMessage({id: 'EMPTY'}),\n      label: intl.formatMessage({id: 'MULTILEVEL_SALE.MASTER.CODE_COLUMN'}),\n      disabled: true,\n    },\n    name: {\n      _type: 'string',\n      required: true,\n      label: intl.formatMessage({id: 'MULTILEVEL_SALE.MASTER.NAME_COLUMN'}),\n    },\n    status: {\n      _type: 'boolean',\n      placeholder: intl.formatMessage({id: 'COMMON_STATUS'}),\n      label: intl.formatMessage({id: 'COMMON_STATUS'}),\n    },\n  });\n  \n  const createForm = useMemo(\n    (): ModifyForm => ({\n      _header: createTitle,\n      panel1: {\n        _title: '',\n        group1: group1,\n      },\n    }),\n    [],\n  );\n  \n  const updateForm = useMemo((): ModifyForm => ({...createForm, _header: updateTitle}), [\n    createForm,\n  ]);\n  \n  // const allFormField: any = {\n  //   ...GenerateAllFormField(modifyModel),\n  // };\n  \n  const onFetchAgency = (entity: any) => {\n    setPaginationProps(DefaultPagination);\n    setAgencyParams({storeLevel: {_id: entity._id}});\n  };\n  \n  const onDeleteAgency = (entity: any) => {\n    setAgencyLoading(true);\n    MultilevelSaleService.DeleteAgency(entity)\n      .then(() => {\n        setAgencyLoading(false);\n        setShowDeleteAgency(false);\n        setRefresh(!refresh);\n        setErrorAgency('');\n      })\n      .catch(err => {\n        setAgencyLoading(false);\n        setErrorAgency(err.message || err.reason);\n      });\n  };\n  \n  return (\n    <React.Fragment>\n      <Switch>\n        <Route path=\"/multilevel-sale/:id/delete\">\n          {({history}) => (\n            <DeleteEntityDialog\n              moduleName={moduleName}\n              entity={deleteEntity}\n              onDelete={deleteFn}\n              isShow={showDelete}\n              loading={loading}\n              error={error}\n              onHide={() => {\n                setShowDelete(false);\n                history.push('/multilevel-sale');\n              }}\n              title={deleteDialogTitle}\n            />\n          )}\n        </Route>\n        <Route path=\"/multilevel-sale/agency/:id/delete\">\n          {({history}) => (\n            <DeleteEntityDialog\n              moduleName={moduleName}\n              entity={deleteAgency}\n              onDelete={onDeleteAgency}\n              isShow={showdeleteAgency}\n              loading={agencyLoading}\n              error={{error: errorAgency}}\n              onHide={() => {\n                setShowDeleteAgency(false);\n                history.push('/multilevel-sale');\n              }}\n              title={deleteDialogTitle}\n            />\n          )}\n        </Route>\n        <Route path=\"/multilevel-sale/new\">\n          {({history}) => (\n            <ModifyEntityDialog\n              show={showCreate}\n              entity={{name: '', status: true}}\n              validation={MultilevelSaleSchema}\n              onModify={(values) => {\n\n                if (editEntity) {\n                  return add({parentId: editEntity._id, ...ConvertStatusToString(values)});\n                } else {\n                  return add(ConvertStatusToString(values));\n                }\n              }}\n              onHide={() => {\n                setShowCreate(false);\n                history.push('/multilevel-sale');\n              }}\n              loading={loading}\n              error={error}\n              homePage={homeURL}\n              formModel={createForm}\n            />\n          )}\n        </Route>\n        <Route path=\"/multilevel-sale/:id/edit\">\n          {({history}) => (\n            <ModifyEntityDialog\n              show={showEdit}\n              entity={editEntity}\n              validation={MultilevelSaleSchema}\n              onModify={values => {\n                console.log(values);\n                if (editEntity) {\n                  return update({parentId: editEntity._id, ...ConvertStatusToString(values)});\n                } else {\n                  return update(ConvertStatusToString(values));\n                }\n              }}\n              loading={loading}\n              onHide={() => {\n                setShowEdit(false);\n                history.push('/multilevel-sale');\n              }}\n              error={error}\n              homePage={homeURL}\n              formModel={updateForm}\n            />\n          )}\n        </Route>\n      </Switch>\n      \n      <Route path=\"/multilevel-sale\">\n        {({history}) => (\n          <MultiLevelSaleBody\n            title=\"MULTILEVEL_SALE\"\n            body={TreeBody}\n            onCreate={(entity: any) => {\n              setCreateEntity(null);\n              setEditEntity(entity);\n              setShowCreate(true);\n              history.push(`/multilevel-sale/new`);\n            }}\n            onEdit={(entity: any) => {\n              // get(entity);\n              setEditEntity(ConvertStatusToBoolean(entity));\n              setShowEdit(true);\n              history.push(`/multilevel-sale/${entity._id}/edit`);\n            }}\n            onDelete={(entity: any) => {\n              setError({error: ''});\n              setDeleteEntity(entity);\n              setShowDelete(true);\n              history.push(`/multilevel-sale/${entity._id}/delete`);\n            }}\n            onFetchEntities={onFetchAgency}\n          />\n        )}\n      </Route>\n    </React.Fragment>\n  );\n}\n\nexport default MultilevelSale;\n"],"sourceRoot":""}