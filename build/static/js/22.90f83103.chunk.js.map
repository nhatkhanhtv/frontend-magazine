{"version":3,"sources":["../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Add.js","app/pages/role/role.service.tsx","app/pages/user/user.service.tsx","../node_modules/@material-ui/icons/Edit.js","app/pages/management-organization/management-organization.service.tsx","../node_modules/react-bootstrap/esm/Table.js","app/common-library/common-components/master-tree-structure.tsx","app/pages/multilevel-sale/multi-sale-body.tsx","app/pages/management-organization/management-organization.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","API_URL","API_BASE_URL","BULK_API_URL","Create","data","axios","post","GetAll","queryProps","sortList","paginationProps","get","params","Count","Get","entity","_id","Update","put","Delete","delete","DeleteMany","entities","GetById","API_URL_TREE_FORMAT","getAll","then","res","_","isArray","mArr","page","limit","slice","paging","total","length","listSpecies","Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_extends","responsiveClass","MasterTreeStructure","onCreate","onEdit","onDelete","onFetchEntities","useState","currentChild","setCurrentChild","style","tableLayout","renderChild","skipDistance","map","childrenItem","keyItem","Fragment","backgroundColor","onClick","console","log","handleClick","marginLeft","cursor","name","border","handleAdd","handleEdit","handleDelete","children","MultiLevelSaleBody","title","body","intl","useIntl","formatMessage","id","item","key","type","fontWeight","columns","prop","loading","paginationParams","setPaginationParams","ManagementOrganization","InitMasterProps","getServer","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","selectedEntities","setSelectedEntities","setPaginationProps","userEntities","setUserEntities","userTotal","setUserTotal","convertedEntities","setConvertedEntities","userLoading","setUserLoading","role","userParams","setUserParams","setErrorUser","useEffect","UserService","catch","err","message","promises","queryParams","managementUnit","RoleService","DefaultPagination","Promise","all","responses","_convertedEntities","response","index","TreeBody","useMemo","dataField","text","formatter","cell","row","rowIndex","paddingTop","SortColumn","align","onSelectMany","getQueryParams"],"mappings":"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","file":"static/js/22.90f83103.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\n\nexport const API_URL = API_BASE_URL + '/role';\n\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                 queryProps,\n                                                 sortList,\n                                                 paginationProps,\n                                               }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const Count: CountProps<any> = ({\n                                         queryProps,\n                                         sortList,\n                                         paginationProps,\n                                       }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\n\nexport const Get: GetProps<any> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {data:entities},\n  });\n};","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\nimport {UserModel} from \"./user.model\";\nimport {RoleArrayToObject, RoleObjectToArray} from \"../../common-library/helpers/common-function\";\nimport _ from \"lodash\";\n\n\nexport const API_URL = API_BASE_URL + '/user';\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\n// export const Create: CreateProps<any> = (data: any) => {\n//   const sendData = _.cloneDeep(data);\n//   sendData.scopes = RoleObjectToArray(sendData.scopes);\n//   console.log(sendData)\n//   return axios.post(API_URL, sendData);\n// };\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                 queryProps,\n                                                 sortList,\n                                                 paginationProps,\n                                               }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const Count: CountProps<UserModel> = (queryProps) => {\n  return axios.get(`${API_URL}/get/count`, {\n    params: {...queryProps},\n  });\n};\n\n// export const GetById = (id: string) => {\n//   return axios.get(`${API_URL}/${id}`).then(res => {\n//     if (_.isArray(res.data.scopes)) {\n//       let scopeArray = res.data.scopes;\n//       scopeArray = _.isEqual(scopeArray, res.data.addedScope.enable) ? [...scopeArray] : [...scopeArray, ...res.data.addedScope.enable];\n//       scopeArray = scopeArray.filter((s: string) => {\n//         return !res.data.addedScope.disable.some((d: string) => (s === d));\n//       });\n//       res.data.scopes = RoleArrayToObject(scopeArray);\n//     }\n//     console.log(res)\n//     return res;\n//   });\n// };\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\n\nexport const Get: GetProps<UserModel> = (entity) => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\n// export const Update: UpdateProps<any> = (entity) => {\n//   const sendData = _.cloneDeep(entity);\n//   sendData.scopes = RoleObjectToArray(sendData.scopes);\n//   return axios.put(`${API_URL}/${entity._id}`, sendData);\n// };\n\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {data:entities},\n  });\n};\n\n// export const Delete: DeleteProps<UserModel> = (entity) => {\n//   //Lười sửa nên viết như này cho nhanh\n//   return axios.put(`${API_URL}/${entity._id}`, {...entity, status: '0'});\n// };\n//\n// export const DeleteMany: DeleteManyProps<UserModel> = (entities) => {\n//   return axios.delete(API_URL, {\n//     data: {arrayEntities: entities}\n//   });\n// };\n\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import axios from 'axios';\nimport _ from 'lodash';\nimport { API_BASE_URL } from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\n\nexport const API_URL = API_BASE_URL + '/management-unit';\n\nexport const API_USER_URL = API_BASE_URL + '/user';\n\nexport const API_URL_TREE_FORMAT = API_URL + '/tree';\n\nexport const BULK_API_URL = API_URL + '/bulk';\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const getAll: GetAllPropsServer<any> = ({ queryProps, sortList, paginationProps }) => {\n  return axios\n    .get(`${API_URL}`, {\n      params: { ...queryProps, ...paginationProps, sortList },\n      // paramsSerializer: ParamsSerializer\n    }).then(res => {\n      if (_.isArray(res.data)) {\n        const mArr = res.data\n        res.data = {}\n\n        if (paginationProps?.page && paginationProps?.limit) {\n          res.data.data = mArr.slice((paginationProps.page - 1) * paginationProps.limit, paginationProps.page * paginationProps.limit)\n          res.data.paging = {\n            page: paginationProps.page, \n            limit: paginationProps.limit, \n            total: mArr.length\n          }\n        }\n      }\n  \n      return res\n    })\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({ queryProps, sortList, paginationProps }) => {\n  return axios.get(`${API_URL_TREE_FORMAT}`, {\n    params: { ...queryProps, ...paginationProps, sortList },\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const GetUser = ({ userParams, paginationProps }: any) => {\n  return axios.get(`${API_USER_URL}`, {\n    params: { ...userParams, ...paginationProps },\n  });\n};\n\nexport const Count: CountProps<any> = ({ queryProps, sortList, paginationProps }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: { ...queryProps, ...paginationProps, sortList },\n  });\n};\n\nexport const Get: GetProps<any> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: { listSpecies: entities },\n  });\n};\n\nexport const DeleteUser = (entity: any) => {\n  return axios.delete(`${API_USER_URL}/${entity._id}`);\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { TreeData } from '../../pages/multilevel-sale/multilevel-sale.model';\nimport { ChildFriendly } from '@material-ui/icons';\nimport { ConvertStatusToBoolean } from '../helpers/common-function';\nimport './master-tree-structure.scss'\n\ninterface TreeDataProp {\n  data: TreeData[];\n  onCreate?: (entity: any) => void;\n    onEdit?: (entity: any) => void;\n    onDelete?: (entity: any) => void;\n    onFetchEntities?: (entity: any) => void;\n}\n\nconst MasterTreeStructure: React.FC<TreeDataProp> = ({ data, onCreate, onEdit, onDelete, onFetchEntities }) => {\n  const [currentChild, setCurrentChild] = useState<string | undefined>()\n\n  const handleAdd = (data: TreeData): void => {\n    if (onCreate) {\n      onCreate(data)\n    }\n  }\n  const handleEdit = (data: TreeData): void => {\n    if (onEdit) {\n      onEdit(data)\n    }\n  };\n\n  const handleClick = (data: TreeData): void => {\n    console.log(data);\n    setCurrentChild(data._id)\n    if (onFetchEntities) {\n      onFetchEntities(data)\n    }\n  }\n\n  const handleDelete = (data: TreeData): void => {\n    console.log(data);\n    if (onDelete) {\n      onDelete(data)\n    }\n  }\n\n\n\n  const renderChild = (data: TreeData[], size: number, skipDistance: number) => {\n    return (\n      <>\n        {data.map((childrenItem: TreeData, keyItem: number) => (\n          <React.Fragment key={'childrenren' + keyItem}>\n            <tr style={{backgroundColor:(currentChild === childrenItem._id ? 'rgba(39, 174, 96,0.1)' : 'transparent')}}>\n              <td onClick={() => handleClick(childrenItem)} className={currentChild === childrenItem._id ? 'text-primary font-weight-700' : ''}  >\n                <div style={{ marginLeft: `${size}px` }}>\n                  {/* {childrenItem.children && childrenItem.children.length > 0 ? (\n                    <button\n                      onClick={() => onShowChildren(childrenItem._id)}\n                      style={{ backgroundColor: 'white', border: 'none' }}>\n                      {'>'}\n                    </button>\n                  ) : (\n                    <button\n                      onClick={() => onShowChildren(childrenItem._id)}\n                      style={{ backgroundColor: 'white', border: 'none' }}>\n                      {'\\u00A0'}\n                    </button>\n                  )} */}\n                  <span onClick={() => {\n                    // console.log('ahihi')\n                    }} style={{ cursor: 'pointer' }}>{childrenItem.name}</span>\n                </div>\n              </td>\n              {(onCreate || onEdit || onDelete) &&\n              <td>\n                <div className=\"text-right\" >\n                {onCreate && (\n                  <button\n                    style={{ backgroundColor: 'transparent', border: 'none' }}\n                    onClick={() => handleAdd(childrenItem)}\n                    className=\"text-primary\">\n                    <AddIcon />\n                  </button>\n                )}\n                {onEdit && (\n                  <button\n                    style={{ backgroundColor: 'transparent', border: 'none' }}\n                    onClick={() => handleEdit(childrenItem)}\n                    className=\"text-primary\">\n                    <EditIcon />\n                  </button>\n                )}\n                {onDelete && (\n                  <button\n                    style={{ backgroundColor: 'transparent', border: 'none' }}\n                    onClick={() => handleDelete(childrenItem)}\n                    className=\"text-primary\">\n                    <DeleteIcon />\n                  </button>\n                )}\n                </div>\n              </td>\n              }\n            </tr>\n            {\n              childrenItem.children &&\n              childrenItem.children.length > 0 &&\n              renderChild(childrenItem.children, size + skipDistance, skipDistance)}\n          </React.Fragment>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <>\n      {/* {data.map((value: TreeData, key: number) => { */}\n      <Table borderless style={{ tableLayout: 'fixed' }} className=\"tree-table\">\n        <tbody>\n          {renderChild(data, 0, 25)}\n\n          {/* {data.map((value: TreeData, key: number) => {\n              return (\n\n              // <tr>\n              //   <td className=\"w-50\">\n              //     <div className=\"mb-5\">\n              //       <button\n              //         onClick={() => onShowChildren(value._id)}\n              //         style={{ backgroundColor: 'white', border: 'none' }}>\n              //         {'>'}\n              //       </button>\n              //       <span onClick={() => onShowChildren(value._id)}>{value.name}</span>\n              //     </div>\n              //   </td>\n              //   <td>\n              //     <button\n              //       style={{ backgroundColor: 'white', border: 'none' }}\n              //       className=\"text-primary\"\n              //       onClick={() => onEdit(value)}>\n              //       <AddIcon />\n              //     </button>\n              //     <button\n              //       style={{ backgroundColor: 'white', border: 'none' }}\n              //       className=\"text-primary\"\n              //       onClick={() => onEdit(value)}>\n              //       <EditIcon />\n              //     </button>\n              //   </td>\n              // </tr>\n              showChildrenV2[value._id] && renderChild(value.children, 3.75, 3.75)\n            )})} */}\n        </tbody>\n      </Table>\n\n      {/* })} */}\n    </>\n  );\n};\n\nexport default MasterTreeStructure;\n","import React, {Fragment} from 'react';\nimport {useIntl} from 'react-intl';\nimport {Card, CardBody, CardHeader} from '../../common-library/card';\nimport {MasterTable} from '../../common-library/common-components/master-table';\nimport MasterTreeStructure from '../../common-library/common-components/master-tree-structure';\nimport {MultilevelSaleBodyProp} from './multilevel-sale.model';\nimport AddIcon from '@material-ui/icons/Add';\nimport './style/multilevel-sale.scss';\n\nconst MultiLevelSaleBody: React.FC<MultilevelSaleBodyProp> = ({\n  title,\n  body,\n  onCreate,\n  onEdit,\n  onDelete,\n  onFetchEntities,\n}) => {\n  const intl = useIntl();\n  \n  return (\n    <Card>\n      {title && <CardHeader title={intl.formatMessage({id: title})}/>}\n      <CardBody>\n        {/* <div className=\"row no-gutters mb-10\">\n          <div className=\"col-md-6 col-12\">\n            <MasterTreeStructure data={data} />\n          </div>\n        </div> */}\n        <div className=\"row no-gutters mb-10 justify-content-between\">\n          {body.map((item: any, key: number) => {\n            switch (item.type) {\n              case 'Tree':\n                return (\n                  <Fragment key={key}>\n                    <div className={`col-xl-${12 / body.length} col-12 pr-xl-3`}>\n                      <div className=\"p-5 layout\">\n                        {\n                          item.title && (\n                            <p style={{fontWeight: 'bold'}}>\n                              {intl.formatMessage({id: item.title})}\n                              <span\n                                className=\"text-primary\"\n                                style={{cursor: 'pointer'}}\n                                onClick={() => {\n                                  if (onCreate) {\n                                    onCreate(null);\n                                  }\n                                }}>\n                                <AddIcon/>\n                              </span>\n                            </p>\n                          )\n                        }\n                        <MasterTreeStructure\n                          data={item.data}\n                          onCreate={onCreate}\n                          onEdit={onEdit}\n                          onDelete={onDelete}\n                          onFetchEntities={onFetchEntities}\n                        />\n                      </div>\n                    </div>\n                  </Fragment>\n                );\n              \n              case 'Table':\n                return (\n                  <Fragment key={key}>\n                    <div className={`col-xl-${12 / body.length} col-12 pl-xl-3`}>\n                      <div className=\"p-5 layout\">\n                        {\n                          item.title && (\n                            <p style={{fontWeight: 'bold'}}>\n                              {intl.formatMessage({id: item.title})}\n                            </p>\n                          )\n                        }\n                        <MasterTable\n                          entities={item.data}\n                          columns={item.prop.columns}\n                          total={item.prop.total}\n                          loading={item.prop.loading}\n                          paginationParams={item.prop.paginationParams}\n                          setPaginationParams={item.prop.setPaginationParams}\n                        />\n                      </div>\n                    </div>\n                  </Fragment>\n                );\n            }\n            return <></>;\n          })}\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default MultiLevelSaleBody;\n","import React, {useEffect, useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport {DefaultPagination, SortColumn} from '../../common-library/common-consts/const';\nimport {InitMasterProps} from '../../common-library/helpers/common-function';\nimport MultiLevelSaleBody from '../multilevel-sale/multi-sale-body';\nimport {UserModel} from '../user/user.model';\nimport {ManagementOrganizationModel} from './management-organization.model';\nimport {Count, Create, Delete, DeleteMany, Get, GetAll, Update} from './management-organization.service';\nimport * as UserService from '../user/user.service';\nimport * as RoleService from '../role/role.service';\nimport {AxiosResponse} from 'axios';\n\nexport default function ManagementOrganization() {\n  const {\n    entities,\n    selectedEntities,\n    setSelectedEntities,\n    paginationProps,\n    setPaginationProps,\n    getAll,\n  } = InitMasterProps<ManagementOrganizationModel>({\n    getServer: Get,\n    countServer: Count,\n    createServer: Create,\n    deleteServer: Delete,\n    deleteManyServer: DeleteMany,\n    getAllServer: GetAll,\n    updateServer: Update\n  });\n  \n  const intl = useIntl();\n  const [userEntities, setUserEntities] = useState<UserModel[]>([]);\n  const [userTotal, setUserTotal] = useState<number>(0);\n  const [convertedEntities, setConvertedEntities] = useState<any[]>([]);\n  const [userLoading, setUserLoading] = useState(false);\n  const [userParams, setUserParams] = useState<any>({role: {_id: ''}});\n  const [errorUser, setErrorUser] = useState('');\n  \n  useEffect(() => {\n    getAll();\n  }, []);\n  \n  useEffect(() => {\n    if(userParams?.role?._id === '') return;\n    setUserLoading(true);\n    UserService.GetAll({queryProps: userParams, paginationProps, })\n      .then((res : AxiosResponse<{data: UserModel[]; paging: {page: number, limit: number, total: number}}>) => {\n        setUserEntities(res.data.data);\n        setUserLoading(false);\n        setUserTotal(res.data.paging.total);\n        setErrorUser('');\n      }) .catch(err => {\n      setUserLoading(false);\n      setErrorUser(err.message);\n    });\n  }, [paginationProps, userParams]);\n  \n  const fetchUsersByRole = (entity: ManagementOrganizationModel | any) => {\n    const getQueryParams = (entity: any): object => {\n      if(entity.children) {\n        // const roleIds = entity.children.map((entity: any) => {\n        //   return entity._id;\n        // });\n        return {managementUnit: { _id: entity._id }};\n      }\n      return {role: { _id: entity._id}};\n    }\n    setPaginationProps(DefaultPagination);\n    setUserParams(getQueryParams(entity));\n  }\n  \n  useEffect(() => {\n    if (entities?.length > 0) {\n      const promises: Promise<AxiosResponse<any>> [] = entities.map((entity: any) => {\n        const queryParams = {managementUnit: {_id: entity._id}};\n        const promise: Promise<AxiosResponse<any>> = RoleService.GetAll({\n          queryProps: queryParams,\n          paginationProps: {...DefaultPagination, limit: 2000},\n        });\n        return promise;\n      });\n      Promise.all(promises).then((responses: AxiosResponse<{ data: any[]; paging: any }>[]) => {\n        const _convertedEntities: any[] = responses.map((response: AxiosResponse<{ data: any[]; paging: any }>, index) => {\n          return {...entities[index], children: response.data.data};\n        });\n        setConvertedEntities(_convertedEntities);\n      });\n    }\n  }, [entities]);\n  \n  const columns = React.useMemo(() => {\n    return [\n      {\n        dataField: '_id',\n        text: `${intl.formatMessage({id: 'ORDINAL'})}`,\n        formatter: (cell: any, row: any, rowIndex: number) => (\n          <p>{rowIndex + 1 + ((paginationProps.page ?? 0) - 1) * (paginationProps.limit ?? 0)}</p>\n        ),\n        style: {paddingTop: 20},\n      },\n      {\n        dataField: 'fullName',\n        text: `${intl.formatMessage({id: 'USER.MASTER.TABLE.DISPLAY_NAME'})}`,\n        ...SortColumn,\n        align: 'center',\n      },\n      {\n        dataField: 'email',\n        text: `${intl.formatMessage({id: 'USER.MASTER.TABLE.EMAIL'})}`,\n        ...SortColumn,\n        align: 'center',\n      },\n      \n      {\n        dataField: 'phone',\n        text: `${intl.formatMessage({id: 'USER.MASTER.TABLE.PHONE'})}`,\n        ...SortColumn,\n        align: 'center',\n      },\n    ]\n  }, [paginationProps]);\n  \n  const TreeBody = [\n    {\n      type: 'Tree',\n      data: convertedEntities,\n    },\n    {\n      title: 'MANAGEMENT_ORGANIZATION.MASTER.TABLE.STAFF_LIST',\n      type: 'Table',\n      data: userEntities,\n      prop: {\n        columns: columns,\n        total: userTotal,\n        loading: userLoading,\n        paginationParams: paginationProps,\n        setPaginationParams: setPaginationProps,\n        onSelectMany: setSelectedEntities,\n        selectedEntities: selectedEntities,\n      },\n    },\n  ];\n  \n  return (\n    <>\n          <MultiLevelSaleBody\n            title='MANAGEMENT_ORGANIZATION.MODULE_NAME'\n            body={TreeBody}\n            onFetchEntities={fetchUsersByRole}\n          />\n    </>\n  )\n}\n"],"sourceRoot":""}