{"version":3,"sources":["app/common-library/common-components/modify-entity-dialog-form.tsx","app/common-library/common-components/modify-entity-dialog.tsx","app/pages/student/student.service.tsx","app/pages/student/student.tsx"],"names":["ModifyEntityDialogForm","entity","onModify","onHide","moduleName","modifyPanel","validation","loading","intl","useIntl","inputGroups","_title","initValues","useMemo","InitValues","_header","panel1","useState","entityForEdit","setEntityForEdit","useEffect","enableReinitialize","initialValues","validationSchema","onSubmit","values","setSubmitting","__v","undefined","then","catch","err","handleSubmit","Modal","Body","className","Object","keys","map","key","Fragment","Footer","type","onClick","Spinner","animation","variant","size","style","iconStyle","formatMessage","id","ModifyEntityDialog","show","formModel","panels","aria-labelledby","dialogClassName","Header","closeButton","Title","_","isString","toUpperCase","panel","index","Error","API_URL","API_BASE_URL","BULK_API_URL","Create","data","axios","post","GetAll","queryProps","sortList","paginationProps","get","params","Count","Get","_id","Update","put","Delete","delete","DeleteMany","entities","Student","InitMasterProps","getServer","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","deleteEntity","setDeleteEntity","editEntity","setEditEntity","createEntity","selectedEntities","setSelectedEntities","detailEntity","showDelete","setShowDelete","showEdit","setShowEdit","showCreate","setShowCreate","showDetail","setShowDetail","showDeleteMany","setShowDeleteMany","setPaginationProps","filterProps","setFilterProps","total","error","add","setError","update","deleteMany","deleteFn","getAll","columns","code","dataField","text","SortColumn","email","gender","formatter","number","birthDay","input","_format","fullName","faculty","action","ActionsColumnFormatter","formatExtraData","onShowDetail","onDelete","onEdit","result","NormalColumn","minWidth","masterEntityDetailDialog","dataClassName","image","images","width","height","title","numb","jj","file","console","log","Format","name","DisplayDownloadLink","x","path","split","nameFile","join","initSearchModel","label","onSearch","FacultyService","keyField","searchModel","_subTitle","_type","options","value","disabled","required","maxNumber","isArray","group1","createForm","updateForm","renderInfo","isShow","from","to","DefaultPagination","onCreate","onDeleteMany","onSelectMany","paginationParams","setPaginationParams","isShowId"],"mappings":"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","file":"static/js/31.0b8e265f.chunk.js","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\nimport {Modal, Spinner} from 'react-bootstrap';\nimport {Form, Formik} from 'formik';\nimport {useIntl} from 'react-intl';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {ModifyPanel} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {ModifyEntityPage} from './modify-entity-page';\nimport {InitValues} from \"../helpers/common-function\";\n\nfunction ModifyEntityDialogForm<T>({\n                                     entity,\n                                     onModify,\n                                     moduleName = 'COMMON_COMPONENT.CREATE_UPDATE.MODULE_NAME',\n                                     onHide,\n                                     modifyPanel,\n                                     validation,\n                                     loading\n                                   }: {\n  moduleName?: string;\n  entity?: any;\n  onHide: () => void;\n  onModify: (values: any) => Promise<any>;\n  modifyPanel: ModifyPanel;\n  validation: any;\n  loading?: boolean\n}) {\n  const intl = useIntl();\n  const {_title, ...inputGroups} = modifyPanel;\n  const initValues = useMemo(() => InitValues({_header: '', panel1: modifyPanel}), [modifyPanel]);\n  const [entityForEdit, setEntityForEdit] = useState(initValues);\n  \n  useEffect(() => {\n     setEntityForEdit(entity ?? initValues);\n  }, [entity,initValues]);\n  \n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={entityForEdit}\n      validationSchema={validation}\n      onSubmit={(values, {setSubmitting}) => {\n        // console.log(values);\n        onModify({...entity, ...values, __v: undefined}).then(() => {\n          onHide()\n        }).catch((err) => {\n          setSubmitting(false)\n        });\n      }}>\n      {({handleSubmit}) => (\n        <>\n          <Modal.Body className=\"overlay overlay-block cursor-default\">\n            <Form className=\"form form-label-right\">\n              {Object.keys(inputGroups).map(key => (\n                <React.Fragment key={key}>\n                  <ModifyEntityPage inputGroups={inputGroups}/>\n                </React.Fragment>\n              ))}\n            </Form>\n          </Modal.Body>\n          <Modal.Footer className=\"border-top-0 pt-10\">\n            <button\n              type=\"submit\"\n              onClick={() => handleSubmit()}\n              className=\"btn btn-primary fixed-btn-width\">\n              {\n                loading === true ? <Spinner animation=\"border\" variant=\"light\" size=\"sm\"/> :\n                  <SaveOutlinedIcon style={iconStyle}/>\n              }\n              {'\\u00A0'}\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.SAVE_BTN'})}\n            </button>\n            <button\n              type=\"button\"\n              onClick={onHide}\n              className=\"btn btn-outline-primary fixed-btn-width\">\n              <CancelOutlinedIcon style={iconStyle}/>\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.CLOSE_BTN'})}\n            </button>\n          </Modal.Footer>\n        </>\n      )}\n    </Formik>\n  );\n}\n\nexport default ModifyEntityDialogForm;\n","import React, {useState} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ModifyEntityDialogForm from './modify-entity-dialog-form';\nimport {useIntl} from 'react-intl';\nimport {ModifyForm} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nfunction ModifyEntityDialog<T>({\n                                 show,\n                                 onHide,\n                                 entity,\n                                 onModify,\n                                 size = 'sm',\n                                 moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                 formModel,\n                                 validation,\n                                 loading\n                               }: {\n  show: boolean;\n  onHide: () => void;\n  entity?: T;\n  moduleName?: string;\n  onModify: (values: any) => Promise<any>;\n  formModel: ModifyForm;\n  size?: 'sm' | 'lg';\n  actions?: any;\n  validation?: any;\n  homePage?: string;\n  error?: { error: string };\n  loading?: boolean;\n}) {\n  const intl = useIntl();\n  const {_header, ...panels} = formModel;\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-modify\"\n      // style={{width}}\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {_.isString(_header) ? intl\n            .formatMessage(\n              {id: _header},\n              {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n            )\n            .toUpperCase() : _header(entity)}\n        </Modal.Title>\n      </Modal.Header>\n      {Object.values(panels).map((panel, index) => {\n        if(_.isString(panel)) throw new Error('Sử dụng sai cách ' + panel);\n        return (<ModifyEntityDialogForm\n          modifyPanel={panel}\n          validation={validation}\n          entity={entity}\n          onHide={onHide}\n          onModify={onModify}\n          key={`tttttttt${index}`}\n          loading={loading}\n        />)\n      })}\n      {/*<MasterEntityDetail data={entity} renderInfo={renderInfo}/>*/}\n     \n    </Modal>\n  );\n}\n\nexport default ModifyEntityDialog;\n","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\n\nexport const API_URL = API_BASE_URL + '/student';\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                          queryProps,\n                                                          sortList,\n                                                          paginationProps,\n                                                        }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const Count: CountProps<any> = ({\n                                                  queryProps,\n                                                  sortList,\n                                                  paginationProps,\n                                                }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\n\nexport const Get: GetProps<any> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {data:entities},\n  });\n};","import React, {Fragment, useEffect, useMemo, useState} from 'react';\nimport {Count, Create, Delete, DeleteMany, Get, GetAll,  Update} from './student.service';\nimport {LandLotModel} from '../land-lot/land-lot.model';\nimport {DefaultPagination, NormalColumn, SortColumn} from '../../common-library/common-consts/const';\nimport {ActionsColumnFormatter} from '../../common-library/common-components/actions-column-formatter';\nimport {InitMasterProps,} from '../../common-library/helpers/common-function';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {\n  MasterBodyColumns,\n  ModifyForm,\n  ModifyInputGroup,\n  RenderInfoDetail,\n  SearchModel\n} from \"../../common-library/common-types/common-type\";\nimport {MasterEntityDetailDialog} from \"../../common-library/common-components/master-entity-detail-dialog\";\nimport {MasterHeader} from \"../../common-library/common-components/master-header\";\nimport {MasterBody} from \"../../common-library/common-components/master-body\";\nimport ModifyEntityDialog from \"../../common-library/common-components/modify-entity-dialog\";\nimport {DeleteEntityDialog} from \"../../common-library/common-components/delete-entity-dialog\";\nimport DeleteManyEntitiesDialog from \"../../common-library/common-components/delete-many-entities-dialog\";\nimport {DisplayDateTime, DisplayDownloadLink} from \"../../common-library/helpers/detail-helpers\";\nimport Faculty from \"../faculty/faculty\";\nimport * as FacultyService from \"../faculty/faculty.service\";\nimport {DetailImage} from \"../../common-library/common-components/detail/detail-image\";\nimport {UploadFile} from \"../../common-library/forms/upload-file\";\n\nfunction Student() {\n  const {\n    entities,\n    intl,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    setEditEntity,\n    createEntity,\n    selectedEntities,\n    setSelectedEntities,\n    detailEntity,\n    showDelete,\n    setShowDelete,\n    showEdit,\n    setShowEdit,\n    showCreate,\n    setShowCreate,\n    showDetail,\n    setShowDetail,\n    showDeleteMany,\n    setShowDeleteMany,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    error,\n    setError,\n    add,\n    update,\n    get,\n    deleteMany,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<LandLotModel>({\n    getServer: Get,\n    countServer: Count,\n    createServer: Create,\n    deleteServer: Delete,\n    deleteManyServer: DeleteMany,\n    getAllServer: GetAll,\n    updateServer: Update,\n  });\n  \n  const moduleName = 'STUDENT.MODULE_NAME';\n  const headerTitle = 'STUDENT.MASTER.HEADER.TITLE';\n  const bodyTitle = 'STUDENT.MASTER.BODY.TITLE';\n  const createTitle = 'STUDENT.CREATE.TITLE';\n  const updateTitle = 'STUDENT.EDIT.TITLE';\n  const viewTitle = 'STUDENT.VIEW.TITLE';\n  \n  useEffect(() => {\n    getAll(filterProps);\n    \n  }, [paginationProps, filterProps]);\n  const columns = useMemo((): MasterBodyColumns => ({\n    code: {\n      dataField: 'code',\n      text: `${intl.formatMessage({id: 'STUDENT.MASTER.HEADER.CODE'})}`,\n      ...SortColumn,\n    },\n    email: {\n      dataField: 'email',\n      text: `${intl.formatMessage({id: 'STUDENT.MASTER.HEADER.EMAIL'})}`,\n      ...SortColumn,\n    },\n    gender: {\n      dataField: 'gender',\n      text: `${intl.formatMessage({id: 'STUDENT.MASTER.HEADER.GENDER'})}`,\n      formatter: (number) => number === '1' ? 'Female' : 'Male',\n      ...SortColumn,\n    },\n    birthDay: {\n      dataField: 'birthDay',\n      text: `${intl.formatMessage({id: 'STUDENT.MASTER.HEADER.BIRTHDAY'})}`,\n      formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n      ...SortColumn,\n    },\n    fullName: {\n      dataField: 'fullName',\n      text: `${intl.formatMessage({id: 'STUDENT.MASTER.HEADER.FULLNAME'})}`,\n      ...SortColumn,\n    },\n    faculty: {\n      dataField: 'faculty.faculty',\n      text: `${intl.formatMessage({id: 'STUDENT.MASTER.HEADER.FACULTY'})}`,\n      ...SortColumn,\n    },\n    action: {\n      dataField: 'action',\n      text: `${intl.formatMessage({id: 'STUDENT.MASTER.TABLE.ACTION_COLUMN'})}`,\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        intl,\n        onShowDetail: (entity: LandLotModel) => {\n          get(entity);\n          setShowDetail(true);\n        },\n        onDelete: (entity: LandLotModel) => {\n          setDeleteEntity(entity);\n          setShowDelete(true);\n        },\n        onEdit: (entity: LandLotModel) => {\n          get(entity).then(result => {\n            setEditEntity(result.data);\n            setShowEdit(true);\n          });\n        },\n      },\n      ...NormalColumn,\n      style: {minWidth: '130px'},\n    },\n  }), []);\n  const masterEntityDetailDialog: RenderInfoDetail = useMemo((): RenderInfoDetail => [\n    {\n      className: 'col-md-6 col-12',\n      dataClassName: 'col-md-12 col-12 text-lg-center',\n      data: {\n        image: {\n          formatter: (input) => <DetailImage images={input} width={200} height={200}/>\n        },\n      },\n    },\n    {\n      className: 'col-md-6 col-12',\n      dataClassName: 'col-md-8 col-12',\n      data: {\n        fullName: {title: 'STUDENT.MASTER.HEADER.FULLNAME'},\n        gender: {\n          title: 'STUDENT.MASTER.HEADER.GENDER',\n          formatter: (numb,jj) => (<>{numb === '1' ? 'Female' : 'Male'}</>),\n        },\n        birthDay: {\n          title: 'STUDENT.MASTER.HEADER.BIRTHDAY',\n          formatter: input => <DisplayDateTime input={input} _format={'dd/MM/yyyy'} />,\n        },\n        'faculty.faculty': { title: 'FACULTY'},\n        file: {\n          title: 'FILE_NAME',\n          formatter: (input) => {\n            console.log(input)\n            const Format = ({input, key, name}:{input: any, key?: string, name?: string})=>DisplayDownloadLink(input, key, name);\n            return (<>{input?.map((x: any,index:number) => {\n              const [_, ...nameArr] = x.path.split('-');\n              const nameFile = nameArr.join('');\n              return (<Format input={'/' + x.path} name={nameFile} key={`tt${index}`}/>)\n          })}</>)}\n        },\n\n      },\n    },\n  ], []);\n  \n  const initSearchModel = useMemo<SearchModel>(() => (\n      {\n        fullName: {\n          type: 'string',\n          label: 'STUDENT.MASTER.HEADER.FULLNAME',\n        },\n        code: {\n          type: 'string',\n          label: 'STUDENT.MASTER.HEADER.CODE',\n        },\n        birthDay: {\n          type: 'date-time',\n          label: 'STUDENT.MASTER.HEADER.BIRTHDAY',\n        },\n        faculty: {\n          type: 'search-select',\n          label: 'STUDENT.MASTER.HEADER.FACULTY',\n          onSearch: FacultyService.GetAll,\n          keyField: 'faculty',\n        },\n      }), []);\n  const [searchModel, setSearchModel] = useState(initSearchModel);\n\n  const [group1, setGroup1] = useState<ModifyInputGroup>({\n    _subTitle: '',\n    code: {\n      _type: 'string',\n      label: 'STUDENT.MASTER.HEADER.CODE',\n    },\n    email: {\n      _type: 'string',\n      label: 'STUDENT.MASTER.HEADER.EMAIL',\n    },\n    birthDay: {\n      _type: \"date-time\",\n      label: 'STUDENT.MASTER.HEADER.BIRTHDAY',\n    },\n    gender: {\n      _type: 'radio',\n      options: [\n        {label: 'USER.MODIFY.GENDER_OPTION.MALE', value: '0'},\n        {label: 'USER.MODIFY.GENDER_OPTION.FEMALE', value: '1'}\n      ],\n      label: 'STUDENT.MASTER.HEADER.GENDER',\n    },\n    fullName: {\n      _type: 'string',\n      label: 'STUDENT.MASTER.HEADER.FULLNAME',\n    },\n    faculty: {\n      _type: 'search-select',\n      label: 'PRODUCT_PACKAGING.MASTER.TABLE.NAME_COLUMN',\n      onSearch: FacultyService.GetAll,\n      disabled: false,\n      required: true,\n      keyField: 'faculty',\n    },\n    image: {\n      _type: 'image',\n      maxNumber: 1,\n      label: 'USER.MODIFY.IMAGE',\n      isArray: false,\n    },\n    file: {\n      _type: 'file',\n      label: 'FILE',\n      maxNumber: 3,\n      isArray: true,\n    }\n\n    // lot: {\n    //   _type: 'search-select',\n    //   label: 'LAND_LOT.MASTER.HEADER.LOT_CODE',\n    //   onSearch: GetLots,\n    //   required: true,\n    //   disabled: false,\n    //   onChange: (value, {setFieldValue, setFieldTouched}) => {\n    //     setFieldValue('code', value ?? '');\n    //     setFieldValue('subLot', '');\n    //     setFieldTouched('subLot', true);\n    //     setGroup1({...group1})\n    //   }\n    // },\n    // subLot: {\n    //   _type: 'search-select',\n    //   label: 'LAND_LOT.MASTER.HEADER.SUB_LOT_CODE',\n    //   required: true,\n    //   onSearch: GetSubLots,\n    //     return !values.lot || values.lot.length !== 1\n    //   },\n    //   onChange: (value, {setFieldValue, values}) => {\n    //     values.lot && setFieldValue('code', value ? values.lot + value: '');\n    //   },\n    // },\n  });\n\n  const createForm = useMemo((): ModifyForm => ({\n    _header: createTitle,\n    panel1: {\n      _title: '',\n      group1: group1\n    },\n  }), [group1]);\n  \n  const updateForm = useMemo((): ModifyForm => ({...createForm, _header: updateTitle}), [createForm]);\n  \n  console.log(createEntity)\n  return (\n    <Fragment>\n      <MasterEntityDetailDialog\n        title={viewTitle}\n        moduleName={moduleName}\n        show={showDetail}\n        entity={detailEntity}\n        renderInfo={masterEntityDetailDialog}\n        onHide={() => {\n          setShowDetail(false);\n        }}\n      />\n      <DeleteEntityDialog\n        moduleName={moduleName}\n        entity={deleteEntity}\n        onDelete={deleteFn}\n        isShow={showDelete}\n        onHide={() => {\n          setShowDelete(false);\n          setFilterProps({...filterProps});\n        }}\n        loading={loading}\n        error={error}\n      />\n      <DeleteManyEntitiesDialog\n        moduleName={moduleName}\n        selectedEntities={selectedEntities}\n        loading={loading}\n        error={error}\n        isShow={showDeleteMany}\n        onDelete={deleteMany}\n        onHide={() => {\n          setShowDeleteMany(false);\n          setFilterProps({...filterProps});\n        }}\n      />\n      <ModifyEntityDialog\n        formModel={createForm}\n        show={showCreate}\n        onModify={add}\n        onHide={() => {\n          setShowCreate(false);\n        }}\n        loading={loading}\n      />\n      <ModifyEntityDialog\n        formModel={updateForm}\n        show={showEdit}\n        entity={editEntity}\n        onModify={update}\n        onHide={() => {\n          setShowEdit(false);\n        }}\n        loading={loading}\n      />\n      <Switch>\n        <Redirect from=\"/account/student/edit\" to=\"/account/student\"/>\n        <Route path=\"/account/student\">`\n          <MasterHeader\n            title={headerTitle}\n            onSearch={(value) => {\n              setPaginationProps(DefaultPagination);\n              setFilterProps(value);\n            }}\n            searchModel={searchModel}\n          />\n          <MasterBody\n            title={bodyTitle}\n            onCreate={() => {\n              // setCreateEntity({} as any);\n              \n              // setEditEntity(null);\n              setShowCreate(true);\n              // history.push(`${window.location.pathname}/new`);\n            }}\n            onDeleteMany={() => setShowDeleteMany(true)}\n            selectedEntities={selectedEntities}\n            onSelectMany={setSelectedEntities}\n            entities={entities}\n            total={total}\n            columns={columns}\n            loading={loading}\n            paginationParams={paginationProps}\n            setPaginationParams={setPaginationProps}\n            isShowId={true}\n          />\n\n          {/* <MasterGoogleMap location={location} /> */}\n          \n          {/* <MasterMap /> */}\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\n\nexport default Student;\n"],"sourceRoot":""}