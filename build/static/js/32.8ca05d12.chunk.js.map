{"version":3,"sources":["app/pages/species/species.service.tsx","app/pages/production-management/production-management.tsx"],"names":["API_URL","API_BASE_URL","BULK_API_URL","Create","data","axios","post","GetAll","queryProps","sortList","paginationProps","get","params","Count","Get","entity","_id","GetById","Update","put","Delete","delete","DeleteMany","entities","listSpecies","Steps","Step","SpeciesService","ProductionManagement","useIntl"],"mappings":"sZAaaA,EAAUC,IAAe,WAEzBC,EAAeF,EAAU,QAIzBG,GAFeF,IAEqB,SAACG,GAChD,OAAOC,IAAMC,KAAKN,EAASI,KAGhBG,EAA0C,SAAC,GAIO,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAExD,OAAOL,IAAMM,IAAN,UAAaX,GAAW,CAC7BY,OAAO,uCAAKJ,GAAeE,GAArB,IAAsCD,gBAKnCI,EAAkC,SAAC,GAIO,IAHLL,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAEhD,OAAOL,IAAMM,IAAN,UAAaX,EAAb,UAA8B,CACnCY,OAAO,uCAAKJ,GAAeE,GAArB,IAAsCD,gBAInCK,EAA8B,SAAAC,GACzC,OAAOV,IAAMM,IAAN,UAAaX,EAAb,YAAwBe,EAAOC,OAG3BC,EAAU,SAACD,GACtB,OAAOX,IAAMM,IAAN,UAAaX,EAAb,YAAwBgB,KAEpBE,EAAoC,SAACH,GAChD,OAAOV,IAAMc,IAAN,UAAanB,EAAb,YAAwBe,EAAOC,KAAOD,IAGlCK,EAA2B,SAACL,GACvC,OAAOV,IAAMgB,OAAN,UAAgBrB,EAAhB,YAA2Be,EAAOC,OAG9BM,EAA4C,SAACC,GACxD,OAAOlB,IAAMgB,OAAOnB,EAAc,CAChCE,KAAM,CAACoB,YAAaD,O,kCC7DxB,mDAsBiBE,IAATC,KAaMC,IAwCCC,UAPf,WAGE,OAFaC,cAEL","file":"static/js/32.8ca05d12.chunk.js","sourcesContent":["import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\nimport {SpeciesModel} from './species.model';\n\nexport const API_URL = API_BASE_URL + '/species';\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<SpeciesModel> = (data: SpeciesModel) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<SpeciesModel> = ({\n                                                          queryProps,\n                                                          sortList,\n                                                          paginationProps,\n                                                        }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const Count: CountProps<SpeciesModel> = ({\n                                                  queryProps,\n                                                  sortList,\n                                                  paginationProps,\n                                                }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const Get: GetProps<SpeciesModel> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<SpeciesModel> = (entity: SpeciesModel) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: SpeciesModel) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<SpeciesModel> = (entities: SpeciesModel[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {listSpecies: entities},\n  });\n};\n\nexport const uploadImage = (image: any) => {\n  console.log('run updload');\n  console.log(image);\n  let formData = new FormData();\n  formData.append('image', image);\n  return axios({\n    method: 'POST',\n    url: API_FILE_URL,\n    data: formData,\n  });\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport { Card, CardBody } from '../../common-library/card';\nimport { InitMasterProps } from '../../common-library/helpers/common-function';\nimport { Steps } from 'antd';\nimport { DefaultPagination, SortColumn } from '../../common-library/common-consts/const';\nimport { MasterHeader } from '../../common-library/common-components/master-header';\nimport { SearchModel } from '../../common-library/common-types/common-type';\nimport * as SpeciesService from '../species/species.service';\nimport { MasterTable } from '../../common-library/common-components/master-table';\nimport { MasterEntityDetailPage } from '../../common-library/common-components/master-detail-page';\nimport {\n  CleaningDetail,\n  harvestingDetail,\n  PackingDetail,\n  PreliminaryTreatmentDetail,\n  PreservationDetail,\n} from './defined/const';\nimport _ from 'lodash';\nimport {DisplayCelcius, DisplayDiffTime} from \"../../common-library/helpers/detail-helpers\";\n\nconst { Step } = Steps;\n\nconst productPlanCode = 'PRODUCTION_PLAN.CODE';\nconst harvestingCode = 'PRODUCTION_PLAN.HARVESTING_CODE';\nconst preliminaryTreatmentCode = 'PRODUCTION_PLAN.PreliminaryTreatment_CODE';\nconst cleaningCode = 'PRODUCTION_PLAN.CLEANING.CODE';\nconst packingCode = 'PRODUCTION_PLAN.PACKING.CODE';\nconst preservationCode = 'PRODUCTION_PLAN.PRESERVATION.CODE';\n\nconst extendSearchField: SearchModel = {\n  species: {\n    type: 'search-select',\n    label: 'PRODUCTION_PLAN.SPECIES_NAME',\n    onSearch: SpeciesService.GetAll,\n    onChange: (value, { values }) => {\n      console.log(value, values);\n      if (value) value.barcode = values.product_plan?.seeding?.species?.barcode;\n      else return { barcode: values.product_plan?.seeding?.species?.barcode };\n    },\n    keyField: 'name',\n    name: 'seeding.species',\n  },\n  barcode: {\n    type: 'string',\n    label: 'GTIN',\n    name: 'seeding.species.barcode',\n  },\n};\n\n\nconst TAB_PROCESS = {\n  harvesting: '2,3,4,5,6,7',\n  preliminaryTreatment: '3,4,5,6,7',\n  cleaning: '4,5,6,7',\n  packing: '5,6,7',\n  preservation: '6,7',\n}\n\nconst TAB_STEP = {\n  harvesting: 0,\n  preliminaryTreatment: 1,\n  cleaning: 2,\n  packing: 3,\n  preservation: 4\n}\n\nfunction ProductionManagement() {\n  const intl = useIntl();\n\n  return (<></>\n  );\n}\n\nexport default ProductionManagement;\n"],"sourceRoot":""}