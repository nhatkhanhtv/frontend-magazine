{"version":3,"sources":["../node_modules/@material-ui/icons/SaveOutlined.js","app/common-library/common-components/master-header.tsx","app/common-library/forms/input-custom.tsx","app/common-library/common-components/modify-entity-page.tsx","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Search.js","app/common-library/common-components/master-entity-detail-dialog.tsx","app/common-library/common-components/master-body.tsx","app/common-library/common-components/actions-column-formatter.tsx","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/DeleteOutlineOutlined.js","app/common-library/common-components/delete-entity-dialog.tsx","../node_modules/@material-ui/icons/History.js","../node_modules/@material-ui/icons/QueueOutlined.js","app/common-library/common-components/delete-many-entities-dialog.tsx","app/common-library/common-components/modify-entity-dialog-form.tsx","app/common-library/common-components/modify-entity-dialog.tsx","../node_modules/react-bootstrap/esm/Spinner.js","app/pages/role/role.service.tsx","app/pages/role/role.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","MasterHeader","title","onSearch","searchModel","initValue","onClickBack","intl","useIntl","defaultClassName","className","onClick","formatMessage","id","toUpperCase","initialValues","onSubmit","values","onReset","data","handleSubmit","resetForm","handleBlur","handleChange","setFieldValue","keys","map","key","type","name","undefined","t","style","iconStyle","handleResetForm","src","ToAbsoluteUrl","InputCustom","component","props","Component","formik","useFormikContext","ModifyEntityPage","inputGroups","mode","pl","_subTitle","inputGroup","index","_","isString","Error","JSON","stringify","_className","_inputClassName","inputs","prevKey","inputClassName","RenderForm","input","trimKey","trim","_type","innt","MasterEntityDetailDialog","moduleName","show","entity","onHide","renderInfo","size","aria-labelledby","dialogClassName","Header","closeButton","Title","MasterEntityDetail","Footer","Body","header","dataKey","titleClassName","dataClassName","displayInfo","fieldName","keyField","displayData","indexOf","getFieldV3","formatter","isNumber","MasterBody","entities","total","loading","paginationParams","setPaginationParams","onSelectMany","onCreate","selectedEntities","columns","onDeleteMany","isShowId","hideHeaderButton","additionalActionComponent","AdditionalActionComponent","idColumn","useMemo","dataField","text","cell","row","rowIndex","page","limit","headerClasses","align","masterColumn","isArray","_id","ActionsColumnFormatter","cellContent","onShowDetail","onDelete","onEdit","onLock","onClone","onChangeRole","onGoHistory","e","preventDefault","TickColumnFormatter","color","DeleteEntityDialog","isShow","bodyTitle","confirmMessage","deleteBtn","deletingMessage","cancelBtn","error","_innerError","parse","CapitalizeFirstLetter","additional","message","DeleteManyEntitiesDialog","noSelectedEntityMessage","length","ModifyEntityDialogForm","onModify","modifyPanel","validation","_title","initValues","InitValues","_header","panel1","useState","entityForEdit","setEntityForEdit","useEffect","enableReinitialize","validationSchema","setSubmitting","__v","then","catch","err","Modal","Fragment","Spinner","animation","variant","ModifyEntityDialog","formModel","panels","panel","forwardRef","_ref","ref","bsPrefix","children","_ref$as","as","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","_extends","classNames","displayName","API_URL","API_BASE_URL","BULK_API_URL","Create","axios","post","GetAll","queryProps","sortList","paginationProps","get","params","Count","Get","Update","put","Delete","delete","DeleteMany","Role","InitMasterProps","getServer","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","deleteEntity","setDeleteEntity","editEntity","setEditEntity","createEntity","setSelectedEntities","detailEntity","showDelete","setShowDelete","showEdit","setShowEdit","showCreate","setShowCreate","showDetail","setShowDetail","showDeleteMany","setShowDeleteMany","setPaginationProps","filterProps","setFilterProps","add","setError","update","deleteMany","deleteFn","getAll","role","SortColumn","code","action","formatExtraData","result","NormalColumn","minWidth","masterEntityDetailDialog","initSearchModel","label","RoleService","group1","createForm","updateForm","console","log","path","DefaultPagination"],"mappings":"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","file":"static/js/12.39fe5864.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6z\"\n}), 'SaveOutlined');\n\nexports.default = _default;","import React from 'react';\nimport {useIntl} from 'react-intl';\nimport {Formik} from 'formik';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Card, CardBody, CardHeader} from '../card';\nimport SVG from 'react-inlinesvg';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {SearchModel} from '../common-types/common-type';\n// import InfiniteScroll from 'react-infinite-scroll-component';\nimport {iconStyle} from '../common-consts/const';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport './master-header.css';\nimport {\n  InputDateTime,\n  InputNumber,\n  InputSearchSelect,\n  InputString,\n  InputStringNumber,\n  InputTreeSelect\n} from \"./common-input\";\n\nexport function MasterHeader<T>({\n                                  title,\n                                  onSearch,\n                                  searchModel,\n                                  initValue = {},\n                                  value,\n                                  onClickBack\n                                }: {\n  searchModel: SearchModel;\n  title: string;\n  initValue?: any;\n  value?: any;\n  onSearch?: (data: any) => void;\n  onClickBack?: () => void;\n}) {\n  const intl = useIntl();\n  const defaultClassName = \"col-xxl-2 col-md-3 master-header-search-input-margin\";\n  const handleResetForm = (resetForm: any) => {\n    resetForm();\n  };\n  return (\n    <Card className={'master-header-card'}>\n      <CardHeader title={onClickBack ? <span\n                            onClick={onClickBack}\n                            className={'cursor-pointer text-primary font-weight-boldest'}>\n                            <ArrowBackIosIcon/>\n                            {intl.formatMessage({id: title}).toUpperCase()}\n                          </span> : intl.formatMessage({id: title}).toUpperCase()}/>\n      <CardBody>\n        <Formik\n          initialValues={initValue}\n          onSubmit={values => {\n            onSearch && onSearch({...values});\n          }}\n          onReset={data => {\n            onSearch && onSearch({});\n            // if (onReset) {\n            //   onReset(data);\n            // }\n          }}\n        >\n          {({values, handleSubmit, handleBlur, handleChange, setFieldValue, resetForm}) => (\n            <form onSubmit={handleSubmit} className=\"form form-label-right\">\n              <div className=\"form-group row master-header-search-margin\">\n                {searchModel ? (\n                  Object.keys(searchModel).map(key => {\n                    // console.log(values)\n                    switch (searchModel[key].type) {\n                      case 'string': {\n                        return (\n                          <InputString\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'string-number': {\n                        return (\n                          <InputStringNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'number': {\n                        return (\n                          <InputNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'date-time': {\n                        return (\n                          <InputDateTime\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'search-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputSearchSelect\n                            className={defaultClassName}\n                            name={key}\n                            value={values[key]}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'tree-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputTreeSelect\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                    }\n                    return <></>;\n                  })\n                ) : (\n                  <></>\n                )}\n              </div>\n  \n              {onSearch && (<div className=\"row no-gutters\">\n                <button className=\"btn btn-primary mr-8 fixed-btn-width\" type=\"submit\">\n                  <SearchIcon style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.SEARCH_BTN'})}\n                </button>\n                <button\n                  className=\"btn btn-outline-primary fixed-btn-width\"\n                  type=\"reset\"\n                  onClick={() => handleResetForm(resetForm)}>\n                  <SVG src={ToAbsoluteUrl('/media/svg/vncheck/reset-filter.svg')}\n                       style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.RESET_FILTER_BTN'})}\n                </button>\n              </div>)}\n            </form>\n          )}\n        </Formik>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useFormikContext} from \"formik\";\n\nexport function InputCustom({\n                              className, component, ...props\n                            }: {\n  className: string,\n  component: (props: any) => ReactElement;\n  \n}) {\n  const Component = component;\n  const formik = useFormikContext<any>();\n  return (<div className={className}>\n    <Component  {...formik} {...props}/>\n  </div>)\n}\n\n","import React, {Fragment} from 'react';\nimport {InputGroups} from '../common-types/common-type';\nimport {useIntl} from 'react-intl';\nimport {\n  InputBoolean,\n  InputCheckBox,\n  InputDateTime,\n  InputImage,\n    InputFile,\n  InputNumber,\n  InputRadio,\n  InputSearchSelect,\n  InputSelect,\n  InputString,\n  InputStringNumber,\n  InputTag,\n  InputTreeSelect,\n} from './common-input';\nimport _ from 'lodash';\nimport {InputCustom} from \"../forms/input-custom\";\n\nexport function ModifyEntityPage<T>({\n                                      inputGroups,\n                                      mode = 'horizontal',\n                                    }:\n                                      {\n                                        inputGroups: InputGroups;\n                                        mode?: 'horizontal' | 'vertical';\n                                        errors?: any;\n                                      }) {\n  const intl = useIntl();\n  const {_subTitle, ...pl} = inputGroups;\n  return (\n    <>\n      <div className={'row'}>\n        {pl && Object.values(pl).map((inputGroup, index) => {\n          if (_.isString(inputGroup)) throw new Error('Sử dụng sai cách ' + inputGroup + '\\n' + JSON.stringify(pl));\n          const {_subTitle, _className, _inputClassName, ...inputs} = inputGroup;\n          return (\n            <div key={`modify-entity-page${index}`} className={_className ?? 'col-12'}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={inputs} prevKey={''} inputClassName={_inputClassName} mode={mode}/>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  );\n}\n\nexport const RenderForm = ({inputs, prevKey, mode, inputClassName}: any) => {\n  const intl = useIntl();\n  const defaultClassName = inputClassName ?? 'mb-5';\n  return (<>\n    {Object.keys(inputs).map(key => {\n      const input = inputs[key];\n      const trimKey = key.trim();\n      if (_.isString(input)) throw new Error('Sử dụng sai cách ' + key + '\\n' + JSON.stringify(inputs));\n      const name = prevKey ? ((trimKey === '' || prevKey === '') ? prevKey : `${prevKey}.${trimKey}`) : trimKey;\n      switch (input._type) {\n        case 'string':\n        case 'email':\n          return (\n            <InputString\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'string-number': {\n          return (\n            <InputStringNumber\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        }\n        case 'number':\n          return (\n            <InputNumber\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'date-time':\n          return (\n            <InputDateTime\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'radio':\n          return (\n            <InputRadio\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          )\n        case 'boolean': {\n          return (\n            <InputBoolean\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'image':\n          return (\n            <InputImage\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              // value={(values && values[key]) || []}\n              key={`modify-page-form-${name}`}\n            />\n          );\n      case 'file':\n          return (\n              <InputFile\n                  className={defaultClassName}\n                  name={name}\n                  mode={mode}\n                  type={input._type}\n                  {...input}\n                  // value={(values && values[key]) || []}\n                  key={`modify-page-form-${name}`}\n              />\n          );\n        case 'search-select': {\n          return (\n            <InputSearchSelect\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'tree-select': {\n          return (\n            <InputTreeSelect\n              className={defaultClassName}\n              name={key}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`master_header${key}`}\n            />\n          );\n        }\n        case 'tag': {\n          return (\n            <InputTag\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        \n        case 'checkbox':\n          return (\n            <InputCheckBox\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        \n        case 'select':\n          return (\n            <InputSelect\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          )\n        \n        case 'custom': {\n          const {_type, ...props} = input;\n          return (<InputCustom {...props} key={`modify-page-form-${name}`}/>);\n        }\n        default: {\n          const {_type, _subTitle, _className, _inputClassName, ...innt} = input as any;\n          return _className ? (\n              <span key={`render_form_span${name}`} className={_className}>\n            {_subTitle && _subTitle !== '' && (<div\n              className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n                <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                            prevKey={name}\n                            mode={mode}/>\n            </span>) :\n            (<Fragment key={`render_form${name}`}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                          prevKey={name}\n                          mode={mode}/>\n            </Fragment>)\n        }\n      }\n    })}</>)\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {useIntl} from 'react-intl';\nimport {iconStyle} from \"../common-consts/const\";\nimport {getField} from \"../helpers/common-function\";\nimport {RenderInfoDetail} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nimport {getFieldV3} from \"./master-detail-page\";\n\nexport function MasterEntityDetailDialog({\n                                           title = 'COMMON_COMPONENT.DETAIL_DIALOG.HEADER_TITLE',\n                                           moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                           show,\n                                           entity,\n                                           onHide,\n                                           renderInfo,\n                                           size = 'sm'\n                                         }: {\n  title?: string;\n  moduleName?: string;\n  show: boolean;\n  entity: any;\n  renderInfo: RenderInfoDetail;\n  onHide: () => void;\n  size?: 'sm' | 'lg' | 'xl';\n}) {\n  const intl = useIntl();\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-detail\"\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      \n      <MasterEntityDetail entity={entity} renderInfo={renderInfo}/>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: 'COMMON_COMPONENT.DETAIL_DIALOG.CLOSE_BTN'})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function MasterEntityDetail({\n                                     entity,\n                                     renderInfo,\n                                   }: {\n  renderInfo: RenderInfoDetail;\n  entity: any;\n}) {\n  const intl = useIntl();\n  return entity ? (\n    <Modal.Body>\n      <div className={`row`}>\n        {renderInfo.map((value, index) => (\n          <div key={index} className={`${value.className ?? 'col-12'}`}>\n            {value.header && value.header !== '' && <p className=\"text-primary detail-dialog-subtitle\">\n              {intl.formatMessage({id: value.header})}\n            </p>}\n            {Object.keys(value.data).map((dataKey) => (\n              <div className={`detail-dialog-row-info row`} key={dataKey}>\n                {value.data[dataKey].title && value.data[dataKey].title !== '' &&\n                <div className={`${value.titleClassName ?? 'col-4'}`}>\n                  {intl.formatMessage({id: value.data[dataKey].title})}:\n                </div>}\n                <div className={`${value.dataClassName ?? 'col-8'}`}>\n                  {(() => {\n                    const displayInfo = value.data[dataKey];\n                    const fieldName = displayInfo.keyField ?? dataKey;\n                    const displayData = fieldName.indexOf(\"[\") > -1 ?\n                      getFieldV3(entity, fieldName) :\n                      getFieldV3(entity, fieldName)[0]\n                    return displayInfo.formatter ? displayInfo.formatter(displayData, entity)\n                      : (<>{(_.isNumber(displayData) || _.isString(displayData)) ? displayData : JSON.stringify(displayData)}</>)\n                  })()\n                  }\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Modal.Body>\n  ) : (\n    <></>\n  );\n}\n","import React, {Fragment, ReactElement, useMemo} from 'react';\nimport { Card, CardBody, CardHeader } from '../card';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useIntl } from 'react-intl';\nimport { iconStyle } from '../common-consts/const';\nimport { MasterTable } from './master-table';\nimport { MasterBodyColumns, PaginationProps } from '../common-types/common-type';\nimport _ from 'lodash';\n\nexport interface BasicUnitDataProps {\n  showModal: any;\n  hideModal: any;\n  show: any;\n  list: any[];\n  total: number;\n  loading: boolean;\n  queryParams: any;\n  setQueryParamsBase: any;\n  ids: any[];\n  setIds: any;\n  setQueryParams: any;\n}\n\nexport function MasterBody<T>({\n  entities,\n  total,\n  loading,\n  paginationParams,\n  setPaginationParams,\n  onSelectMany,\n  onCreate,\n  selectedEntities = [],\n  columns,\n  onDeleteMany,\n  isShowId,\n  title,\n  hideHeaderButton,\n    additionalActionComponent\n}: {\n  total: number;\n  loading: boolean;\n  onSelectMany?: (entities: T[]) => void;\n  onCreate?: () => void;\n  columns: MasterBodyColumns;\n  entities: T[];\n  selectedEntities?: T[];\n  paginationParams: PaginationProps;\n  setPaginationParams: (data: PaginationProps) => void;\n  additionalActionComponent?: (props: any) => ReactElement;\n  onDeleteMany?: () => void;\n  isShowId?: boolean;\n  title?: string;\n  hideHeaderButton?: boolean;\n}) {\n  const intl = useIntl();\n  const AdditionalActionComponent = additionalActionComponent;\n  const idColumn = useMemo(() => ({\n    dataField: '_id',\n    text: 'STT',\n    formatter: (cell: any, row: any, rowIndex: number) => (\n      <Fragment>\n        {rowIndex + 1 + ((paginationParams.page ?? 0) - 1) * (paginationParams.limit ?? 0)}\n      </Fragment>\n    ),\n    headerClasses: 'text-center',\n    align: 'center'\n  }), [paginationParams]);\n  const masterColumn = isShowId\n    ? _.isArray(columns)\n          ? [idColumn, ...columns]\n          : { _id: idColumn, ...columns }\n    : columns;\n\n  return (\n    <Card className={'master-body-card'}>\n      {title && <CardHeader title={intl.formatMessage({ id: title }).toUpperCase()} />}\n      <CardBody>\n        {hideHeaderButton !== true && (\n          <div className=\"row no-gutters mb-10\">\n            {onCreate && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary fixed-btn-width mr-8\"\n              onClick={onCreate}>\n              <AddIcon style={iconStyle} />\n              {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.ADD_BTN' })}\n            </button>\n            )}\n            {onDeleteMany && (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary fixed-btn-width\"\n                onClick={() => {\n                  onSelectMany && onSelectMany(selectedEntities);\n                  onDeleteMany();\n                }}>\n                <DeleteOutlineOutlinedIcon style={iconStyle} />\n                {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.DELETE_BTN' })}\n              </button>\n            )}\n            {AdditionalActionComponent && (<AdditionalActionComponent />)}\n          </div>\n        )}\n        <MasterTable\n          entities={entities}\n          columns={masterColumn}\n          total={total}\n          loading={loading}\n          paginationParams={paginationParams}\n          setPaginationParams={setPaginationParams}\n          onSelectMany={onSelectMany}\n          selectedEntities={selectedEntities}\n        />\n\n        {/* <MasterTreeStructure /> */}\n      </CardBody>\n    </Card>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport Visibility from '@material-ui/icons/Visibility';\nimport './master-table.scss';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {ActionColumnProps} from '../common-types/common-type';\nimport {IntlShape} from 'react-intl';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport QueueOutlinedIcon from '@material-ui/icons/QueueOutlined';\nimport HistoryIcon from '@material-ui/icons/History';\n\nexport function ActionsColumnFormatter<T>(\n  cellContent: any,\n  row: any,\n  rowIndex: number,\n  {onShowDetail, onDelete, onEdit,onLock, onChangeRole, onClone, onGoHistory, intl}: ActionColumnProps<T> & { intl: IntlShape },\n) {\n  return (\n    <div>\n      {onLock && (<a\n        // to={`/purchase-order/${row.code}`}\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\"\n        onClick={(e) => {\n          onLock(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={ToAbsoluteUrl('/media/svg/vncheck/lock.svg')}\n            title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.LOCK_BTN'})}\n          />\n        </span>\n      </a>)}\n      {onClone &&  (<a\n        title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.CLONE_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility mx-1\"\n        onClick={(e) => {\n          onClone(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <QueueOutlinedIcon className=\"text-primary eye\"/>\n          </span>\n        </span>\n      </a>)}\n      {onShowDetail && (<a\n        title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.SHOW_DETAIL_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n        onClick={(e) => {\n          onShowDetail(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <Visibility className=\"text-primary eye\"/>\n        </span>\n      </a>)}\n      {onEdit && (<a\n        // to={`/purchase-order/${row.code}`}\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\"\n        onClick={(e) => {\n          onEdit(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={ToAbsoluteUrl('/media/svg/icons/Communication/Write.svg')}\n            title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n          />\n        </span>\n      </a>)}\n      {onDelete &&  (<a\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.DELETE_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n        onClick={(e) => {\n          onDelete(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <DeleteIcon className=\"text-primary eye\"/>\n          </span>\n        </span>\n      </a>)}\n      {\n        onGoHistory && (\n          <a\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility mx-1\"\n          onClick={(e) => {\n            onGoHistory(row);\n            e.preventDefault();\n          }}>\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <HistoryIcon className=\"text-primary eye\" />\n          </span>\n        </a>\n        )\n      }\n    </div>\n  );\n}\n\nexport function TickColumnFormatter<T>(\n  cellContent: string | boolean,\n  row: any) {\n  return (cellContent === \"1\" || cellContent === \"true\" || cellContent === true) ? (\n    <CheckCircleIcon style={{color: '#1DBE2D'}}/>) : (<CheckCircleIcon style={{color: '#C4C4C4'}}/>)\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteOutlineOutlined');\n\nexports.default = _default;","import React, {useMemo} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {useIntl} from 'react-intl';\nimport {DeleteDialogProps} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {CapitalizeFirstLetter} from '../helpers/common-function';\nimport _ from \"lodash\";\n\nexport function DeleteEntityDialog<T>({\n                                        isShow,\n                                        entity,\n                                        onHide,\n                                        onDelete,\n                                        title = 'COMMON_COMPONENT.DELETE_DIALOG.TITLE',\n                                        bodyTitle = 'COMMON_COMPONENT.DELETE_DIALOG.BODY_TITLE',\n                                        confirmMessage = 'COMMON_COMPONENT.DELETE_DIALOG.CONFIRM',\n                                        deleteBtn = 'COMMON_COMPONENT.DELETE_DIALOG.DELETE_BTN',\n                                        deletingMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.DELETING',\n                                        cancelBtn = 'COMMON_COMPONENT.DELETE_DIALOG.CANCEL_BTN',\n                                        moduleName = 'COMMON_COMPONENT.DELETE_DIALOG.MODULE_NAME',\n                                        loading,\n                                        error = {error: ''},\n                                      }: DeleteDialogProps<T>) {\n  const intl = useIntl();\n  const _innerError = useMemo((): string | ({ message: string, additional: string }[]) => {\n    try {\n      return JSON.parse(error.error)\n    } catch (e) {\n      return error?.error\n    }\n  }, [error]);\n  return (<><Modal\n    show={isShow && (error.error === '')}\n    onHide={onHide}\n    aria-labelledby=\"example-modal-sizes-title-lg\"\n    dialogClassName=\"modal-delete\">\n    {/*{loading && <ModalProgressBar />}*/}\n    <Modal.Header className=\"border-bottom-0\" closeButton>\n      <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n        {intl\n          .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n          .toUpperCase()}\n      </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {!loading && (\n        <>\n          {CapitalizeFirstLetter(\n            intl.formatMessage(\n              {id: bodyTitle},\n              {moduleName: intl.formatMessage({id: moduleName})},\n            ),\n          )}\n          {' ' + intl.formatMessage(\n            {id: confirmMessage},\n            {moduleName: intl.formatMessage({id: moduleName})},\n          )}\n        </>\n      )}\n      {loading && <span className={'ml-1'}>{intl.formatMessage({id: deletingMessage})}</span>}\n    </Modal.Body>\n    \n    <Modal.Footer className=\"border-top-0\">\n      <button type=\"button\" className=\"btn btn-primary mr-lg-8 fixed-btn-width\"\n              onClick={e => onDelete(entity)}>\n        {/*<DeleteIcon style={iconStyle}/>*/}\n        {loading ? (<div className=\"spinner spinner-sm spinner-darker-white\">\n          <span className={'ml-6'}>{intl.formatMessage({id: deleteBtn})}</span>\n        </div>) : intl.formatMessage({id: deleteBtn})}\n      </button>\n      <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n        <CancelOutlinedIcon style={iconStyle}/>\n        {intl.formatMessage({id: cancelBtn})}\n      </button>\n    </Modal.Footer>\n  </Modal>\n    <Modal\n      show={isShow && (error.error !== '')}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-delete\">\n      <Modal.Header className=\"border-bottom-0\" closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!loading && error.error !== '' && (\n          <>\n            {_.isString(_innerError) ?\n              (<p className='text-danger'>{intl.formatMessage({id: _innerError}, {additional: ''})}</p>)\n              : _innerError.map((e, index) => (\n                (<p key={`abc${index}`} className='text-danger'>{intl.formatMessage({id: e.message}, e)}</p>)\n              ))\n            }\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: cancelBtn})}\n        </button>\n      </Modal.Footer>\n    </Modal></>)\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'History');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H8V4h12v12zm-7-1h2v-4h4V9h-4V5h-2v4H9v2h4z\"\n}), 'QueueOutlined');\n\nexports.default = _default;","import React, {useMemo} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {useIntl} from 'react-intl';\nimport {DeleteManyDialogProps} from '../common-types/common-type';\nimport {CapitalizeFirstLetter} from '../helpers/common-function';\nimport {iconStyle} from \"../common-consts/const\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport _ from \"lodash\";\n\nfunction DeleteManyEntitiesDialog<T>({\n                                       selectedEntities,\n                                       isShow,\n                                       onHide,\n                                       onDelete,\n                                       title = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.TITLE',\n                                       bodyTitle = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.BODY_TITLE',\n                                       confirmMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.CONFIRM',\n                                       noSelectedEntityMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.NO_SELECTED_ENTITY',\n                                       deletingMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.DELETING',\n                                       deleteBtn = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.DELETE_BTN',\n                                       cancelBtn = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.CANCEL_BTN',\n                                       moduleName = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.MODULE_NAME',\n                                       loading,\n                                       error = {error: ''},\n                                     }: DeleteManyDialogProps<T>) {\n  const intl = useIntl();\n  const _innerError = useMemo((): string | ({ message: string, additional: string }[]) => {\n    try {\n      return JSON.parse(error.error)\n    } catch (e) {\n      return error?.error\n    }\n  }, [error]);\n  return (<>\n    <Modal\n      show={isShow && (error.error === '')}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-delete-many\">\n      {/*begin::Loading*/}\n      {/*end::Loading*/}\n      <Modal.Header className=\"border-bottom-0\" closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {selectedEntities && selectedEntities.length > 0 ? (\n          !loading && (\n            <>\n              {CapitalizeFirstLetter(\n                intl.formatMessage(\n                  {id: bodyTitle},\n                  {moduleName: intl.formatMessage({id: moduleName})},\n                ),\n              )}\n              {' ' + intl.formatMessage(\n                {id: confirmMessage},\n                {moduleName: intl.formatMessage({id: moduleName})},\n              )}\n            </>\n          )\n        ) : (\n          <>\n            {intl.formatMessage(\n              {id: noSelectedEntityMessage},\n              {moduleName: intl.formatMessage({id: moduleName})},\n            )}\n          </>\n        )}\n        {loading && <span className={'ml-1'}>{intl.formatMessage({id: deletingMessage})}</span>}\n      </Modal.Body>\n      <Modal.Footer className=\"border-top-0\">\n        {selectedEntities && selectedEntities.length > 0 &&\n        <button type=\"button\" className=\"btn btn-primary mr-lg-8 fixed-btn-width\"\n                onClick={e => onDelete(selectedEntities)}>\n          {/*<DeleteIcon style={iconStyle}/>*/}\n          {loading ? (<div className=\"spinner spinner-sm spinner-darker-white\">\n            <span className={'ml-6'}>{intl.formatMessage({id: deleteBtn})}</span>\n          </div>) : intl.formatMessage({id: deleteBtn})}\n        </button>}\n        \n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: cancelBtn})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n    <Modal\n      show={isShow && (error.error !== '')}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-delete-many\">\n      {/*begin::Loading*/}\n      {/*end::Loading*/}\n      <Modal.Header className=\"border-bottom-0\" closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!loading && error.error !== '' && (\n          <>\n            {_.isString(_innerError) ?\n              (<p className='text-danger'>{intl.formatMessage({id: _innerError})}</p>)\n              : _innerError.map((e, index) => (\n                (<p key={`abc${index}`} className='text-danger'>{intl.formatMessage({id: e.message}, e)}</p>)\n              ))\n            }\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: cancelBtn})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n  </>);\n}\n\nexport default DeleteManyEntitiesDialog;\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {Modal, Spinner} from 'react-bootstrap';\nimport {Form, Formik} from 'formik';\nimport {useIntl} from 'react-intl';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {ModifyPanel} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {ModifyEntityPage} from './modify-entity-page';\nimport {InitValues} from \"../helpers/common-function\";\n\nfunction ModifyEntityDialogForm<T>({\n                                     entity,\n                                     onModify,\n                                     moduleName = 'COMMON_COMPONENT.CREATE_UPDATE.MODULE_NAME',\n                                     onHide,\n                                     modifyPanel,\n                                     validation,\n                                     loading\n                                   }: {\n  moduleName?: string;\n  entity?: any;\n  onHide: () => void;\n  onModify: (values: any) => Promise<any>;\n  modifyPanel: ModifyPanel;\n  validation: any;\n  loading?: boolean\n}) {\n  const intl = useIntl();\n  const {_title, ...inputGroups} = modifyPanel;\n  const initValues = useMemo(() => InitValues({_header: '', panel1: modifyPanel}), [modifyPanel]);\n  const [entityForEdit, setEntityForEdit] = useState(initValues);\n  \n  useEffect(() => {\n     setEntityForEdit(entity ?? initValues);\n  }, [entity,initValues]);\n  \n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={entityForEdit}\n      validationSchema={validation}\n      onSubmit={(values, {setSubmitting}) => {\n        // console.log(values);\n        onModify({...entity, ...values, __v: undefined}).then(() => {\n          onHide()\n        }).catch((err) => {\n          setSubmitting(false)\n        });\n      }}>\n      {({handleSubmit}) => (\n        <>\n          <Modal.Body className=\"overlay overlay-block cursor-default\">\n            <Form className=\"form form-label-right\">\n              {Object.keys(inputGroups).map(key => (\n                <React.Fragment key={key}>\n                  <ModifyEntityPage inputGroups={inputGroups}/>\n                </React.Fragment>\n              ))}\n            </Form>\n          </Modal.Body>\n          <Modal.Footer className=\"border-top-0 pt-10\">\n            <button\n              type=\"submit\"\n              onClick={() => handleSubmit()}\n              className=\"btn btn-primary fixed-btn-width\">\n              {\n                loading === true ? <Spinner animation=\"border\" variant=\"light\" size=\"sm\"/> :\n                  <SaveOutlinedIcon style={iconStyle}/>\n              }\n              {'\\u00A0'}\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.SAVE_BTN'})}\n            </button>\n            <button\n              type=\"button\"\n              onClick={onHide}\n              className=\"btn btn-outline-primary fixed-btn-width\">\n              <CancelOutlinedIcon style={iconStyle}/>\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.CLOSE_BTN'})}\n            </button>\n          </Modal.Footer>\n        </>\n      )}\n    </Formik>\n  );\n}\n\nexport default ModifyEntityDialogForm;\n","import React, {useState} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ModifyEntityDialogForm from './modify-entity-dialog-form';\nimport {useIntl} from 'react-intl';\nimport {ModifyForm} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nfunction ModifyEntityDialog<T>({\n                                 show,\n                                 onHide,\n                                 entity,\n                                 onModify,\n                                 size = 'sm',\n                                 moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                 formModel,\n                                 validation,\n                                 loading\n                               }: {\n  show: boolean;\n  onHide: () => void;\n  entity?: T;\n  moduleName?: string;\n  onModify: (values: any) => Promise<any>;\n  formModel: ModifyForm;\n  size?: 'sm' | 'lg';\n  actions?: any;\n  validation?: any;\n  homePage?: string;\n  error?: { error: string };\n  loading?: boolean;\n}) {\n  const intl = useIntl();\n  const {_header, ...panels} = formModel;\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-modify\"\n      // style={{width}}\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {_.isString(_header) ? intl\n            .formatMessage(\n              {id: _header},\n              {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n            )\n            .toUpperCase() : _header(entity)}\n        </Modal.Title>\n      </Modal.Header>\n      {Object.values(panels).map((panel, index) => {\n        if(_.isString(panel)) throw new Error('Sử dụng sai cách ' + panel);\n        return (<ModifyEntityDialogForm\n          modifyPanel={panel}\n          validation={validation}\n          entity={entity}\n          onHide={onHide}\n          onModify={onModify}\n          key={`tttttttt${index}`}\n          loading={loading}\n        />)\n      })}\n      {/*<MasterEntityDetail data={entity} renderInfo={renderInfo}/>*/}\n     \n    </Modal>\n  );\n}\n\nexport default ModifyEntityDialog;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\n\nexport const API_URL = API_BASE_URL + '/role';\n\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                 queryProps,\n                                                 sortList,\n                                                 paginationProps,\n                                               }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const Count: CountProps<any> = ({\n                                         queryProps,\n                                         sortList,\n                                         paginationProps,\n                                       }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\n\nexport const Get: GetProps<any> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {data:entities},\n  });\n};","import React, {Fragment, useEffect, useMemo, useState} from 'react';\nimport {Count, Create, Delete, DeleteMany, Get, GetAll,  Update} from './role.service';\nimport {LandLotModel} from '../land-lot/land-lot.model';\nimport {DefaultPagination, NormalColumn, SortColumn} from '../../common-library/common-consts/const';\nimport {ActionsColumnFormatter} from '../../common-library/common-components/actions-column-formatter';\nimport {InitMasterProps,} from '../../common-library/helpers/common-function';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {\n  MasterBodyColumns,\n  ModifyForm,\n  ModifyInputGroup,\n  RenderInfoDetail,\n  SearchModel\n} from \"../../common-library/common-types/common-type\";\nimport {MasterEntityDetailDialog} from \"../../common-library/common-components/master-entity-detail-dialog\";\nimport {MasterHeader} from \"../../common-library/common-components/master-header\";\nimport {MasterBody} from \"../../common-library/common-components/master-body\";\nimport ModifyEntityDialog from \"../../common-library/common-components/modify-entity-dialog\";\nimport {DeleteEntityDialog} from \"../../common-library/common-components/delete-entity-dialog\";\nimport DeleteManyEntitiesDialog from \"../../common-library/common-components/delete-many-entities-dialog\";\nimport isNumeric from \"antd/es/_util/isNumeric\";\nimport {DisplayDateTime} from \"../../common-library/helpers/detail-helpers\";\nimport * as RoleService from \"../role/role.service\";\n\nfunction Role() {\n  const {\n    entities,\n    intl,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    setEditEntity,\n    createEntity,\n    selectedEntities,\n    setSelectedEntities,\n    detailEntity,\n    showDelete,\n    setShowDelete,\n    showEdit,\n    setShowEdit,\n    showCreate,\n    setShowCreate,\n    showDetail,\n    setShowDetail,\n    showDeleteMany,\n    setShowDeleteMany,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    error,\n    setError,\n    add,\n    update,\n    get,\n    deleteMany,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<LandLotModel>({\n    getServer: Get,\n    countServer: Count,\n    createServer: Create,\n    deleteServer: Delete,\n    deleteManyServer: DeleteMany,\n    getAllServer: GetAll,\n    updateServer: Update,\n  });\n\n  const moduleName = 'ROLE.MODULE_NAME';\n  const headerTitle = 'ROLE.MASTER.HEADER.TITLE';\n  const bodyTitle = 'ROLE.MASTER.BODY.TITLE';\n  const createTitle = 'ROLE.CREATE.TITLE';\n  const updateTitle = 'ROLE.EDIT.TITLE';\n  const viewTitle = 'ROLE.VIEW.TITLE';\n\n  useEffect(() => {\n    getAll(filterProps);\n\n  }, [paginationProps, filterProps]);\n  const columns = useMemo((): MasterBodyColumns => ({\n    role: {\n      dataField: 'role',\n      text: `${intl.formatMessage({id: 'ROLE.MASTER.HEADER.ROLE'})}`,\n      ...SortColumn,\n    },\n    code: {\n      dataField: 'code',\n      text: `${intl.formatMessage({id: 'ROLE.MASTER.HEADER.CODE'})}`,\n      ...SortColumn,\n    },\n    action: {\n      dataField: 'action',\n      text: `${intl.formatMessage({id: 'ROLE.MASTER.TABLE.ACTION_COLUMN'})}`,\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        intl,\n        onShowDetail: (entity: any) => {\n          get(entity);\n          setShowDetail(true);\n        },\n        onDelete: (entity: any) => {\n          setDeleteEntity(entity);\n          setShowDelete(true);\n        },\n        onEdit: (entity: any) => {\n          get(entity).then(result => {\n            setEditEntity(result.data);\n            setShowEdit(true);\n          });\n        },\n      },\n      ...NormalColumn,\n      style: {minWidth: '130px'},\n    },\n  }), []);\n\n  const masterEntityDetailDialog: RenderInfoDetail = useMemo((): RenderInfoDetail => [\n    {\n      data: {\n        role: {title: 'ROLE.MASTER.HEADER.ROLE'},\n        code: {title: 'ROLE.MASTER.HEADER.CODE'},\n      },\n      titleClassName: 'col-3'\n    },\n  ], []);\n\n  const initSearchModel = useMemo<SearchModel>(() => (\n      {\n        role: {\n          type: 'search-select',\n          label: 'Role',\n          onSearch: RoleService.GetAll,\n          keyField: 'role',\n        },\n      }), []);\n  const [searchModel, setSearchModel] = useState(initSearchModel);\n  const [group1, setGroup1] = useState<ModifyInputGroup>({\n    _subTitle: '',\n    role: {\n      _type: 'string',\n      label: 'ROLE.MASTER.HEADER.ROLE',\n    },\n    code: {\n      _type: 'string',\n      label: 'ROLE.MASTER.HEADER.CODE',\n    },\n    // lot: {\n    //   _type: 'search-select',\n    //   label: 'LAND_LOT.MASTER.HEADER.LOT_CODE',\n    //   onSearch: GetLots,\n    //   required: true,\n    //   disabled: false,\n    //   onChange: (value, {setFieldValue, setFieldTouched}) => {\n    //     setFieldValue('code', value ?? '');\n    //     setFieldValue('subLot', '');\n    //     setFieldTouched('subLot', true);\n    //     setGroup1({...group1})\n    //   }\n    // },\n    // subLot: {\n    //   _type: 'search-select',\n    //   label: 'LAND_LOT.MASTER.HEADER.SUB_LOT_CODE',\n    //   required: true,\n    //   onSearch: GetSubLots,\n    //   disabled: (values) => {\n    //     return !values.lot || values.lot.length !== 1\n    //   },\n    //   onChange: (value, {setFieldValue, values}) => {\n    //     values.lot && setFieldValue('code', value ? values.lot + value: '');\n    //   },\n    // },\n  });\n\n  const createForm = useMemo((): ModifyForm => ({\n    _header: createTitle,\n    panel1: {\n      _title: '',\n      group1: group1\n    },\n  }), [group1]);\n\n  const updateForm = useMemo((): ModifyForm => ({...createForm, _header: updateTitle}), [createForm]);\n\n  console.log(createEntity)\n  return (\n      <Fragment>\n        <MasterEntityDetailDialog\n            title={viewTitle}\n            moduleName={moduleName}\n            show={showDetail}\n            entity={detailEntity}\n            renderInfo={masterEntityDetailDialog}\n            onHide={() => {\n              setShowDetail(false);\n            }}\n        />\n        <DeleteEntityDialog\n            moduleName={moduleName}\n            entity={deleteEntity}\n            onDelete={deleteFn}\n            isShow={showDelete}\n            onHide={() => {\n              setShowDelete(false);\n              setFilterProps({...filterProps});\n            }}\n            loading={loading}\n            error={error}\n        />\n        <DeleteManyEntitiesDialog\n            moduleName={moduleName}\n            selectedEntities={selectedEntities}\n            loading={loading}\n            error={error}\n            isShow={showDeleteMany}\n            onDelete={deleteMany}\n            onHide={() => {\n              setShowDeleteMany(false);\n              setFilterProps({...filterProps});\n            }}\n        />\n        <ModifyEntityDialog\n            formModel={createForm}\n            show={showCreate}\n            onModify={add}\n            onHide={() => {\n              setShowCreate(false);\n            }}\n            loading={loading}\n        />\n        <ModifyEntityDialog\n            formModel={updateForm}\n            show={showEdit}\n            entity={editEntity}\n            onModify={update}\n            onHide={() => {\n              setShowEdit(false);\n            }}\n            loading={loading}\n        />\n        <Switch>\n          <Route path=\"/account/role\">`\n            <MasterHeader\n                title={headerTitle}\n                onSearch={(value) => {\n                  setPaginationProps(DefaultPagination);\n                  console.log(value)\n                  if (value.role !== undefined) setFilterProps({...value, role: value.role.role})\n                  else setFilterProps(value)\n                }}\n                searchModel={searchModel}\n            />\n            <MasterBody\n                title={bodyTitle}\n                onCreate={() => {\n                  // setCreateEntity({} as any);\n\n                  // setEditEntity(null);\n                  setShowCreate(true);\n                  // history.push(`${window.location.pathname}/new`);\n                }}\n                onDeleteMany={() => setShowDeleteMany(true)}\n                selectedEntities={selectedEntities}\n                onSelectMany={setSelectedEntities}\n                entities={entities}\n                total={total}\n                columns={columns}\n                loading={loading}\n                paginationParams={paginationProps}\n                setPaginationParams={setPaginationProps}\n                isShowId={true}\n            />\n\n            {/* <MasterGoogleMap location={location} /> */}\n\n            {/* <MasterMap /> */}\n          </Route>\n        </Switch>\n      </Fragment>\n  );\n}\n\n\nexport default Role;\n"],"sourceRoot":""}