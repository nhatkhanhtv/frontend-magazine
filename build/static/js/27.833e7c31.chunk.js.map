{"version":3,"sources":["app/common-library/common-components/modify-entity-dialog-form.tsx","app/common-library/common-components/modify-entity-dialog.tsx","app/pages/role/role.service.tsx","app/pages/user/user.service.tsx","app/pages/faculty/faculty.tsx"],"names":["ModifyEntityDialogForm","entity","onModify","onHide","moduleName","modifyPanel","validation","loading","intl","useIntl","inputGroups","_title","initValues","useMemo","InitValues","_header","panel1","useState","entityForEdit","setEntityForEdit","useEffect","enableReinitialize","initialValues","validationSchema","onSubmit","values","setSubmitting","__v","undefined","then","catch","err","handleSubmit","Modal","Body","className","Object","keys","map","key","Fragment","Footer","type","onClick","Spinner","animation","variant","size","style","iconStyle","formatMessage","id","ModifyEntityDialog","show","formModel","panels","aria-labelledby","dialogClassName","Header","closeButton","Title","_","isString","toUpperCase","panel","index","Error","API_URL","API_BASE_URL","BULK_API_URL","Create","data","axios","post","GetAll","queryProps","sortList","paginationProps","get","params","Count","Get","_id","Update","put","Delete","delete","DeleteMany","entities","GetById","Faculty","InitMasterProps","getServer","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","deleteEntity","setDeleteEntity","editEntity","setEditEntity","selectedEntities","createEntity","setSelectedEntities","detailEntity","showDelete","setShowDelete","showEdit","setShowEdit","showCreate","setShowCreate","showDetail","setShowDetail","showDeleteMany","setShowDeleteMany","setPaginationProps","filterProps","setFilterProps","total","error","add","setError","update","deleteMany","deleteFn","getAll","columns","faculty","dataField","text","SortColumn","user","code","action","formatter","ActionsColumnFormatter","formatExtraData","onShowDetail","onDelete","onEdit","result","NormalColumn","minWidth","masterEntityDetailDialog","title","titleClassName","initSearchModel","label","onSearch","FacultyService","keyField","searchModel","_subTitle","_type","a","role","RoleService","coordinatorRole","UserService","disabled","group1","createForm","updateForm","renderInfo","isShow","path","HomePageURL","value","DefaultPagination","onCreate","onDeleteMany","onSelectMany","paginationParams","setPaginationParams","isShowId"],"mappings":"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","file":"static/js/27.833e7c31.chunk.js","sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\nimport {Modal, Spinner} from 'react-bootstrap';\nimport {Form, Formik} from 'formik';\nimport {useIntl} from 'react-intl';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {ModifyPanel} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {ModifyEntityPage} from './modify-entity-page';\nimport {InitValues} from \"../helpers/common-function\";\n\nfunction ModifyEntityDialogForm<T>({\n                                     entity,\n                                     onModify,\n                                     moduleName = 'COMMON_COMPONENT.CREATE_UPDATE.MODULE_NAME',\n                                     onHide,\n                                     modifyPanel,\n                                     validation,\n                                     loading\n                                   }: {\n  moduleName?: string;\n  entity?: any;\n  onHide: () => void;\n  onModify: (values: any) => Promise<any>;\n  modifyPanel: ModifyPanel;\n  validation: any;\n  loading?: boolean\n}) {\n  const intl = useIntl();\n  const {_title, ...inputGroups} = modifyPanel;\n  const initValues = useMemo(() => InitValues({_header: '', panel1: modifyPanel}), [modifyPanel]);\n  const [entityForEdit, setEntityForEdit] = useState(initValues);\n  \n  useEffect(() => {\n     setEntityForEdit(entity ?? initValues);\n  }, [entity,initValues]);\n  \n  return (\n    <Formik\n      enableReinitialize={true}\n      initialValues={entityForEdit}\n      validationSchema={validation}\n      onSubmit={(values, {setSubmitting}) => {\n        // console.log(values);\n        onModify({...entity, ...values, __v: undefined}).then(() => {\n          onHide()\n        }).catch((err) => {\n          setSubmitting(false)\n        });\n      }}>\n      {({handleSubmit}) => (\n        <>\n          <Modal.Body className=\"overlay overlay-block cursor-default\">\n            <Form className=\"form form-label-right\">\n              {Object.keys(inputGroups).map(key => (\n                <React.Fragment key={key}>\n                  <ModifyEntityPage inputGroups={inputGroups}/>\n                </React.Fragment>\n              ))}\n            </Form>\n          </Modal.Body>\n          <Modal.Footer className=\"border-top-0 pt-10\">\n            <button\n              type=\"submit\"\n              onClick={() => handleSubmit()}\n              className=\"btn btn-primary fixed-btn-width\">\n              {\n                loading === true ? <Spinner animation=\"border\" variant=\"light\" size=\"sm\"/> :\n                  <SaveOutlinedIcon style={iconStyle}/>\n              }\n              {'\\u00A0'}\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.SAVE_BTN'})}\n            </button>\n            <button\n              type=\"button\"\n              onClick={onHide}\n              className=\"btn btn-outline-primary fixed-btn-width\">\n              <CancelOutlinedIcon style={iconStyle}/>\n              {intl.formatMessage({id: 'COMMON_COMPONENT.MODIFY_DIALOG.CLOSE_BTN'})}\n            </button>\n          </Modal.Footer>\n        </>\n      )}\n    </Formik>\n  );\n}\n\nexport default ModifyEntityDialogForm;\n","import React, {useState} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ModifyEntityDialogForm from './modify-entity-dialog-form';\nimport {useIntl} from 'react-intl';\nimport {ModifyForm} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nfunction ModifyEntityDialog<T>({\n                                 show,\n                                 onHide,\n                                 entity,\n                                 onModify,\n                                 size = 'sm',\n                                 moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                 formModel,\n                                 validation,\n                                 loading\n                               }: {\n  show: boolean;\n  onHide: () => void;\n  entity?: T;\n  moduleName?: string;\n  onModify: (values: any) => Promise<any>;\n  formModel: ModifyForm;\n  size?: 'sm' | 'lg';\n  actions?: any;\n  validation?: any;\n  homePage?: string;\n  error?: { error: string };\n  loading?: boolean;\n}) {\n  const intl = useIntl();\n  const {_header, ...panels} = formModel;\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-modify\"\n      // style={{width}}\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {_.isString(_header) ? intl\n            .formatMessage(\n              {id: _header},\n              {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n            )\n            .toUpperCase() : _header(entity)}\n        </Modal.Title>\n      </Modal.Header>\n      {Object.values(panels).map((panel, index) => {\n        if(_.isString(panel)) throw new Error('Sử dụng sai cách ' + panel);\n        return (<ModifyEntityDialogForm\n          modifyPanel={panel}\n          validation={validation}\n          entity={entity}\n          onHide={onHide}\n          onModify={onModify}\n          key={`tttttttt${index}`}\n          loading={loading}\n        />)\n      })}\n      {/*<MasterEntityDetail data={entity} renderInfo={renderInfo}/>*/}\n     \n    </Modal>\n  );\n}\n\nexport default ModifyEntityDialog;\n","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\n\nexport const API_URL = API_BASE_URL + '/role';\n\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                 queryProps,\n                                                 sortList,\n                                                 paginationProps,\n                                               }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const Count: CountProps<any> = ({\n                                         queryProps,\n                                         sortList,\n                                         paginationProps,\n                                       }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\n\nexport const Get: GetProps<any> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {data:entities},\n  });\n};","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\nimport {UserModel} from \"./user.model\";\nimport {RoleArrayToObject, RoleObjectToArray} from \"../../common-library/helpers/common-function\";\nimport _ from \"lodash\";\n\n\nexport const API_URL = API_BASE_URL + '/user';\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\n// export const Create: CreateProps<any> = (data: any) => {\n//   const sendData = _.cloneDeep(data);\n//   sendData.scopes = RoleObjectToArray(sendData.scopes);\n//   console.log(sendData)\n//   return axios.post(API_URL, sendData);\n// };\n\nexport const Create: CreateProps<any> = (data: any) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<any> = ({\n                                                 queryProps,\n                                                 sortList,\n                                                 paginationProps,\n                                               }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const Count: CountProps<UserModel> = (queryProps) => {\n  return axios.get(`${API_URL}/get/count`, {\n    params: {...queryProps},\n  });\n};\n\n// export const GetById = (id: string) => {\n//   return axios.get(`${API_URL}/${id}`).then(res => {\n//     if (_.isArray(res.data.scopes)) {\n//       let scopeArray = res.data.scopes;\n//       scopeArray = _.isEqual(scopeArray, res.data.addedScope.enable) ? [...scopeArray] : [...scopeArray, ...res.data.addedScope.enable];\n//       scopeArray = scopeArray.filter((s: string) => {\n//         return !res.data.addedScope.disable.some((d: string) => (s === d));\n//       });\n//       res.data.scopes = RoleArrayToObject(scopeArray);\n//     }\n//     console.log(res)\n//     return res;\n//   });\n// };\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\n\nexport const Get: GetProps<UserModel> = (entity) => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\n// export const Update: UpdateProps<any> = (entity) => {\n//   const sendData = _.cloneDeep(entity);\n//   sendData.scopes = RoleObjectToArray(sendData.scopes);\n//   return axios.put(`${API_URL}/${entity._id}`, sendData);\n// };\n\nexport const Update: UpdateProps<any> = (entity: any) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: any) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<any> = (entities: any[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {data:entities},\n  });\n};\n\n// export const Delete: DeleteProps<UserModel> = (entity) => {\n//   //Lười sửa nên viết như này cho nhanh\n//   return axios.put(`${API_URL}/${entity._id}`, {...entity, status: '0'});\n// };\n//\n// export const DeleteMany: DeleteManyProps<UserModel> = (entities) => {\n//   return axios.delete(API_URL, {\n//     data: {arrayEntities: entities}\n//   });\n// };\n\n","import React, {Fragment, useEffect, useMemo, useState} from 'react';\nimport {Count, Create, Delete, DeleteMany, Get, GetAll,  Update} from './faculty.service';\nimport {LandLotModel} from '../land-lot/land-lot.model';\nimport {DefaultPagination, HomePageURL, NormalColumn, SortColumn} from '../../common-library/common-consts/const';\nimport {ActionsColumnFormatter} from '../../common-library/common-components/actions-column-formatter';\nimport {InitMasterProps,} from '../../common-library/helpers/common-function';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {\n  MasterBodyColumns,\n  ModifyForm,\n  ModifyInputGroup,\n  RenderInfoDetail,\n  SearchModel\n} from \"../../common-library/common-types/common-type\";\nimport {MasterEntityDetailDialog} from \"../../common-library/common-components/master-entity-detail-dialog\";\nimport {MasterHeader} from \"../../common-library/common-components/master-header\";\nimport {MasterBody} from \"../../common-library/common-components/master-body\";\nimport ModifyEntityDialog from \"../../common-library/common-components/modify-entity-dialog\";\nimport {DeleteEntityDialog} from \"../../common-library/common-components/delete-entity-dialog\";\nimport DeleteManyEntitiesDialog from \"../../common-library/common-components/delete-many-entities-dialog\";\nimport * as UserService from \"../user/user.service\"\nimport isNumeric from \"antd/es/_util/isNumeric\";\nimport {DisplayDateTime} from \"../../common-library/helpers/detail-helpers\";\nimport * as FacultyService from \"../faculty/faculty.service\";\nimport * as RoleService from \"../role/role.service\";\n\nfunction Faculty() {\n  const {\n    entities,\n    intl,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    setEditEntity,\n    createEntity,\n    selectedEntities,\n    setSelectedEntities,\n    detailEntity,\n    showDelete,\n    setShowDelete,\n    showEdit,\n    setShowEdit,\n    showCreate,\n    setShowCreate,\n    showDetail,\n    setShowDetail,\n    showDeleteMany,\n    setShowDeleteMany,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    error,\n    setError,\n    add,\n    update,\n    get,\n    deleteMany,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<LandLotModel>({\n    getServer: Get,\n    countServer: Count,\n    createServer: Create,\n    deleteServer: Delete,\n    deleteManyServer: DeleteMany,\n    getAllServer: GetAll,\n    updateServer: Update,\n  });\n  \n  const moduleName = 'FACULTY.MODULE_NAME';\n  const headerTitle = 'FACULTY.MASTER.HEADER.TITLE';\n  const bodyTitle = 'FACULTY.MASTER.BODY.TITLE';\n  const createTitle = 'FACULTY.CREATE.TITLE';\n  const updateTitle = 'FACULTY.EDIT.TITLE';\n  const viewTitle = 'FACULTY.VIEW.TITLE';\n  \n  useEffect(() => {\n    getAll(filterProps);\n    \n  }, [paginationProps, filterProps]);\n  const columns = useMemo((): MasterBodyColumns => ({\n    faculty: {\n      dataField: 'faculty',\n      text: `${intl.formatMessage({id: 'FACULTY.MASTER.HEADER.FACULTY'})}`,\n      ...SortColumn,\n    },\n    user: {\n      dataField: 'user.fullName',\n      text: `${intl.formatMessage({id: 'FACULTY.MASTER.HEADER.COORDINATORCODE'})}`,\n      ...SortColumn,\n    },\n    code: {\n      dataField: 'code',\n      text: `${intl.formatMessage({id: 'FACULTY.MASTER.HEADER.CODE'})}`,\n      ...SortColumn,\n    },\n    action: {\n      dataField: 'action',\n      text: `${intl.formatMessage({id: 'FACULTY.MASTER.TABLE.ACTION_COLUMN'})}`,\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        intl,\n        onShowDetail: (entity: any) => {\n          get(entity);\n          setShowDetail(true);\n        },\n        onDelete: (entity: any) => {\n          setDeleteEntity(entity);\n          setShowDelete(true);\n        },\n        onEdit: (entity: any) => {\n          get(entity).then(result => {\n            setEditEntity(result.data);\n            setShowEdit(true);\n          });\n        },\n      },\n      ...NormalColumn,\n      style: {minWidth: '130px'},\n    },\n  }), []);\n\n  const masterEntityDetailDialog: RenderInfoDetail = useMemo((): RenderInfoDetail => [\n    {\n      data: {\n        faculty: {title: 'FACULTY.MASTER.HEADER.FACULTY_NAME'},\n        'user.fullName': {title: 'FACULTY.MASTER.HEADER.COORDINATORCODE'},\n        code: {title: 'FACULTY.MASTER.HEADER.CODE'},\n      },\n      titleClassName: 'col-3'\n    },\n  ], []);\n  \n  const initSearchModel = useMemo<SearchModel>(() => (\n    {\n      faculty: {\n        type: 'search-select',\n        label: 'Faculty',\n        onSearch: FacultyService.GetAll,\n        keyField: 'faculty',\n      },\n    }), []);\n  const [searchModel, setSearchModel] = useState(initSearchModel);\n  const [group1, setGroup1] = useState<ModifyInputGroup>({\n    _subTitle: '',\n    faculty: {\n      _type: 'string',\n      label: 'FACULTY.MASTER.HEADER.FACULTY',\n    },\n    user: {\n      _type: 'search-select',\n      label: 'FACULTY.MASTER.HEADER.COORDINATORCODE',\n      onSearch: async ({queryProps, paginationProps}: any): Promise<any> => {\n        const {role} = queryProps\n        const coordinatorRole = await RoleService.GetAll({\n          queryProps: {...role, role: 'coordinator'}\n        })\n        return UserService.GetAll({\n          queryProps: {...queryProps, role: coordinatorRole.data.data[0]},\n          paginationProps,\n        })\n      },\n      keyField: 'fullName',\n    },\n    code: {\n      _type: 'string',\n      label: 'FACULTY.MASTER.HEADER.CODE',\n      disabled: true,\n    },\n    // lot: {\n    //   _type: 'search-select',\n    //   label: 'LAND_LOT.MASTER.HEADER.LOT_CODE',\n    //   onSearch: GetLots,\n    //   required: true,\n    //   disabled: false,\n    //   onChange: (value, {setFieldValue, setFieldTouched}) => {\n    //     setFieldValue('code', value ?? '');\n    //     setFieldValue('subLot', '');\n    //     setFieldTouched('subLot', true);\n    //     setGroup1({...group1})\n    //   }\n    // },\n    // subLot: {\n    //   _type: 'search-select',\n    //   label: 'LAND_LOT.MASTER.HEADER.SUB_LOT_CODE',\n    //   required: true,\n    //   onSearch: GetSubLots,\n    //   disabled: (values) => {\n    //     return !values.lot || values.lot.length !== 1\n    //   },\n    //   onChange: (value, {setFieldValue, values}) => {\n    //     values.lot && setFieldValue('code', value ? values.lot + value: '');\n    //   },\n    // },\n  });\n  \n  const createForm = useMemo((): ModifyForm => ({\n    _header: createTitle,\n    panel1: {\n      _title: '',\n      group1: group1\n    },\n  }), [group1]);\n  \n  const updateForm = useMemo((): ModifyForm => ({...createForm, _header: updateTitle}), [createForm]);\n  \n  return (\n    <Fragment>\n      <MasterEntityDetailDialog\n        title={viewTitle}\n        moduleName={moduleName}\n        show={showDetail}\n        entity={detailEntity}\n        renderInfo={masterEntityDetailDialog}\n        onHide={() => {\n          setShowDetail(false);\n        }}\n      />\n      <DeleteEntityDialog\n        moduleName={moduleName}\n        entity={deleteEntity}\n        onDelete={deleteFn}\n        isShow={showDelete}\n        onHide={() => {\n          setShowDelete(false);\n          setFilterProps({...filterProps});\n        }}\n        loading={loading}\n        error={error}\n      />\n      <DeleteManyEntitiesDialog\n        moduleName={moduleName}\n        selectedEntities={selectedEntities}\n        loading={loading}\n        error={error}\n        isShow={showDeleteMany}\n        onDelete={deleteMany}\n        onHide={() => {\n          setShowDeleteMany(false);\n          setFilterProps({...filterProps});\n        }}\n      />\n      <ModifyEntityDialog\n        formModel={createForm}\n        show={showCreate}\n        onModify={add}\n        onHide={() => {\n          setShowCreate(false);\n        }}\n        loading={loading}\n      />\n      <ModifyEntityDialog\n        formModel={updateForm}\n        show={showEdit}\n        entity={editEntity}\n        onModify={update}\n        onHide={() => {\n          setShowEdit(false);\n        }}\n        loading={loading}\n      />\n      <Switch>\n        <Route path={`${HomePageURL.faculty}`}>\n          <MasterHeader\n            title={headerTitle}\n            onSearch={(value) => {\n              setPaginationProps(DefaultPagination);\n              if (value.faculty !== undefined) setFilterProps({...value, faculty: value.faculty.faculty})\n              else setFilterProps(value)\n            }}\n            searchModel={searchModel}\n          />\n          <MasterBody\n            title={bodyTitle}\n            onCreate={() => {\n              // setCreateEntity({} as any);\n              \n              // setEditEntity(null);\n              setShowCreate(true);\n              // history.push(`${window.location.pathname}/new`);\n            }}\n            onDeleteMany={() => setShowDeleteMany(true)}\n            selectedEntities={selectedEntities}\n            onSelectMany={setSelectedEntities}\n            entities={entities}\n            total={total}\n            columns={columns}\n            loading={loading}\n            paginationParams={paginationProps}\n            setPaginationParams={setPaginationProps}\n            isShowId={true}\n          />\n          \n          {/* <MasterGoogleMap location={location} /> */}\n          \n          {/* <MasterMap /> */}\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\n\nexport default Faculty;\n"],"sourceRoot":""}