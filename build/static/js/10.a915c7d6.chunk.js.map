{"version":3,"sources":["../node_modules/@material-ui/icons/SaveOutlined.js","app/common-library/common-components/master-header.tsx","app/common-library/forms/input-custom.tsx","app/common-library/common-components/modify-entity-page.tsx","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/Search.js","app/common-library/common-components/master-entity-detail-dialog.tsx","app/common-library/common-components/master-body.tsx","app/common-library/common-components/actions-column-formatter.tsx","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/DeleteOutlineOutlined.js","app/common-library/common-components/delete-entity-dialog.tsx","../node_modules/@material-ui/icons/History.js","../node_modules/@material-ui/icons/QueueOutlined.js","app/common-library/common-components/delete-many-entities-dialog.tsx","../node_modules/@material-ui/icons/AccountCircleOutlined.js","app/pages/post/post-comments.tsx","app/common-library/common-components/entity-crud-page.tsx","../node_modules/react-bootstrap/esm/Spinner.js","app/pages/species/species.service.tsx","app/pages/species/species.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","MasterHeader","title","onSearch","searchModel","initValue","onClickBack","intl","useIntl","defaultClassName","className","onClick","formatMessage","id","toUpperCase","initialValues","onSubmit","values","onReset","data","handleSubmit","resetForm","handleBlur","handleChange","setFieldValue","keys","map","key","type","name","undefined","t","style","iconStyle","handleResetForm","src","ToAbsoluteUrl","InputCustom","component","props","Component","formik","useFormikContext","ModifyEntityPage","inputGroups","mode","pl","_subTitle","inputGroup","index","_","isString","Error","JSON","stringify","_className","_inputClassName","inputs","prevKey","inputClassName","RenderForm","input","trimKey","trim","_type","innt","MasterEntityDetailDialog","moduleName","show","entity","onHide","renderInfo","size","aria-labelledby","dialogClassName","Header","closeButton","Title","MasterEntityDetail","Footer","Body","header","dataKey","titleClassName","dataClassName","displayInfo","fieldName","keyField","displayData","indexOf","getFieldV3","formatter","isNumber","MasterBody","entities","total","loading","paginationParams","setPaginationParams","onSelectMany","onCreate","selectedEntities","columns","onDeleteMany","isShowId","hideHeaderButton","additionalActionComponent","AdditionalActionComponent","idColumn","useMemo","dataField","text","cell","row","rowIndex","page","limit","headerClasses","align","masterColumn","isArray","_id","ActionsColumnFormatter","cellContent","onShowDetail","onDelete","onEdit","onLock","onClone","onChangeRole","onGoHistory","e","preventDefault","TickColumnFormatter","color","DeleteEntityDialog","isShow","bodyTitle","confirmMessage","deleteBtn","deletingMessage","cancelBtn","error","_innerError","parse","CapitalizeFirstLetter","additional","message","DeleteManyEntitiesDialog","noSelectedEntityMessage","length","PostComments","onComments","valueRef","useRef","useState","comments","commentsArr","setCommentArr","useEffect","fontSize","createdBy","fullName","content","TextareaAutosize","rowsMin","aria-label","ref","placeholder","current","comment","then","res","catch","err","handleComment","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","EntityCrudPage","onModify","code","get","formModel","actions","validation","setEditEntity","homePageUrl","allFormButton","showComment","history","useHistory","initValues","InitValues","entityForEdit","setEntityForEdit","_header","modifyPanels","console","log","enableReinitialize","validationSchema","setSubmitting","validateForm","push","GetHomePage","window","location","pathname","val","_title","panel","goBack","keyss","role","icon","label","to","linkto","Spinner","animation","variant","confirmationStatus","isMaster","forwardRef","_ref","bsPrefix","children","_ref$as","as","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","_extends","classNames","displayName","API_URL","API_BASE_URL","BULK_API_URL","Create","axios","post","GetAll","queryProps","sortList","paginationProps","params","Count","Get","GetById","Update","put","Delete","delete","DeleteMany","listSpecies","standardizeamedName","sName","toLowerCase","replace","l","Species","InitMasterProps","getServer","ProductTypeService","countServer","createServer","deleteServer","deleteManyServer","getAllServer","updateServer","deleteEntity","setDeleteEntity","editEntity","setCreateEntity","setSelectedEntities","detailEntity","setDetailEntity","showDelete","setShowDelete","showDetail","setShowDetail","showDeleteMany","setShowDeleteMany","setPaginationProps","filterProps","setFilterProps","add","update","deleteMany","deleteFn","getAll","trigger","setTrigger","SortColumn","classes","barcode","action","formatExtraData","NormalColumn","minWidth","schema","Yup","shape","test","filter","item","findIndex","el","max","min","matches","growingDays","typeError","plantingDays","expiryDays","masterEntityDetailDialog","image","width","height","images","group1","required","disabled","maxNumber","group2","createForm","panel1","updateForm","save","cancel","path","match","DefaultPagination"],"mappings":"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","file":"static/js/10.a915c7d6.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6z\"\n}), 'SaveOutlined');\n\nexports.default = _default;","import React from 'react';\nimport {useIntl} from 'react-intl';\nimport {Formik} from 'formik';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Card, CardBody, CardHeader} from '../card';\nimport SVG from 'react-inlinesvg';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {SearchModel} from '../common-types/common-type';\n// import InfiniteScroll from 'react-infinite-scroll-component';\nimport {iconStyle} from '../common-consts/const';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport './master-header.css';\nimport {\n  InputDateTime,\n  InputNumber,\n  InputSearchSelect,\n  InputString,\n  InputStringNumber,\n  InputTreeSelect\n} from \"./common-input\";\n\nexport function MasterHeader<T>({\n                                  title,\n                                  onSearch,\n                                  searchModel,\n                                  initValue = {},\n                                  value,\n                                  onClickBack\n                                }: {\n  searchModel: SearchModel;\n  title: string;\n  initValue?: any;\n  value?: any;\n  onSearch?: (data: any) => void;\n  onClickBack?: () => void;\n}) {\n  const intl = useIntl();\n  const defaultClassName = \"col-xxl-2 col-md-3 master-header-search-input-margin\";\n  const handleResetForm = (resetForm: any) => {\n    resetForm();\n  };\n  return (\n    <Card className={'master-header-card'}>\n      <CardHeader title={onClickBack ? <span\n                            onClick={onClickBack}\n                            className={'cursor-pointer text-primary font-weight-boldest'}>\n                            <ArrowBackIosIcon/>\n                            {intl.formatMessage({id: title}).toUpperCase()}\n                          </span> : intl.formatMessage({id: title}).toUpperCase()}/>\n      <CardBody>\n        <Formik\n          initialValues={initValue}\n          onSubmit={values => {\n            onSearch && onSearch({...values});\n          }}\n          onReset={data => {\n            onSearch && onSearch({});\n            // if (onReset) {\n            //   onReset(data);\n            // }\n          }}\n        >\n          {({values, handleSubmit, handleBlur, handleChange, setFieldValue, resetForm}) => (\n            <form onSubmit={handleSubmit} className=\"form form-label-right\">\n              <div className=\"form-group row master-header-search-margin\">\n                {searchModel ? (\n                  Object.keys(searchModel).map(key => {\n                    // console.log(values)\n                    switch (searchModel[key].type) {\n                      case 'string': {\n                        return (\n                          <InputString\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'string-number': {\n                        return (\n                          <InputStringNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'number': {\n                        return (\n                          <InputNumber\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}/>\n                        );\n                      }\n                      case 'date-time': {\n                        return (\n                          <InputDateTime\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'search-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputSearchSelect\n                            className={defaultClassName}\n                            name={key}\n                            value={values[key]}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                      case 'tree-select': {\n                        if (searchModel[key].onSearch === undefined || searchModel[key].onSearch === null) return;\n                        const t: any = (t: any) => null;\n                        return (\n                          <InputTreeSelect\n                            className={defaultClassName}\n                            name={key}\n                            {...searchModel[key]}\n                            onSearch={searchModel[key].onSearch ?? t}\n                            key={`master_header${key}`}\n                          />\n                        );\n                      }\n                    }\n                    return <></>;\n                  })\n                ) : (\n                  <></>\n                )}\n              </div>\n  \n              {onSearch && (<div className=\"row no-gutters\">\n                <button className=\"btn btn-primary mr-8 fixed-btn-width\" type=\"submit\">\n                  <SearchIcon style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.SEARCH_BTN'})}\n                </button>\n                <button\n                  className=\"btn btn-outline-primary fixed-btn-width\"\n                  type=\"reset\"\n                  onClick={() => handleResetForm(resetForm)}>\n                  <SVG src={ToAbsoluteUrl('/media/svg/vncheck/reset-filter.svg')}\n                       style={iconStyle}/>\n                  {intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_HEADER.RESET_FILTER_BTN'})}\n                </button>\n              </div>)}\n            </form>\n          )}\n        </Formik>\n      </CardBody>\n    </Card>\n  );\n}\n","import React, {ReactElement} from 'react';\nimport {useFormikContext} from \"formik\";\n\nexport function InputCustom({\n                              className, component, ...props\n                            }: {\n  className: string,\n  component: (props: any) => ReactElement;\n  \n}) {\n  const Component = component;\n  const formik = useFormikContext<any>();\n  return (<div className={className}>\n    <Component  {...formik} {...props}/>\n  </div>)\n}\n\n","import React, {Fragment} from 'react';\nimport {InputGroups} from '../common-types/common-type';\nimport {useIntl} from 'react-intl';\nimport {\n  InputBoolean,\n  InputCheckBox,\n  InputDateTime,\n  InputImage,\n    InputFile,\n  InputNumber,\n  InputRadio,\n  InputSearchSelect,\n  InputSelect,\n  InputString,\n  InputStringNumber,\n  InputTag,\n  InputTreeSelect,\n} from './common-input';\nimport _ from 'lodash';\nimport {InputCustom} from \"../forms/input-custom\";\n\nexport function ModifyEntityPage<T>({\n                                      inputGroups,\n                                      mode = 'horizontal',\n                                    }:\n                                      {\n                                        inputGroups: InputGroups;\n                                        mode?: 'horizontal' | 'vertical';\n                                        errors?: any;\n                                      }) {\n  const intl = useIntl();\n  const {_subTitle, ...pl} = inputGroups;\n  return (\n    <>\n      <div className={'row'}>\n        {pl && Object.values(pl).map((inputGroup, index) => {\n          if (_.isString(inputGroup)) throw new Error('Sử dụng sai cách ' + inputGroup + '\\n' + JSON.stringify(pl));\n          const {_subTitle, _className, _inputClassName, ...inputs} = inputGroup;\n          return (\n            <div key={`modify-entity-page${index}`} className={_className ?? 'col-12'}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={inputs} prevKey={''} inputClassName={_inputClassName} mode={mode}/>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  );\n}\n\nexport const RenderForm = ({inputs, prevKey, mode, inputClassName}: any) => {\n  const intl = useIntl();\n  const defaultClassName = inputClassName ?? 'mb-5';\n  return (<>\n    {Object.keys(inputs).map(key => {\n      const input = inputs[key];\n      const trimKey = key.trim();\n      if (_.isString(input)) throw new Error('Sử dụng sai cách ' + key + '\\n' + JSON.stringify(inputs));\n      const name = prevKey ? ((trimKey === '' || prevKey === '') ? prevKey : `${prevKey}.${trimKey}`) : trimKey;\n      switch (input._type) {\n        case 'string':\n        case 'email':\n          return (\n            <InputString\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'string-number': {\n          return (\n            <InputStringNumber\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              mode={mode}\n              key={`modify-page-form-${name}`}/>\n          );\n        }\n        case 'number':\n          return (\n            <InputNumber\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'date-time':\n          return (\n            <InputDateTime\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          );\n        case 'radio':\n          return (\n            <InputRadio\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}/>\n          )\n        case 'boolean': {\n          return (\n            <InputBoolean\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'image':\n          return (\n            <InputImage\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              // value={(values && values[key]) || []}\n              key={`modify-page-form-${name}`}\n            />\n          );\n      case 'file':\n          return (\n              <InputFile\n                  className={defaultClassName}\n                  name={name}\n                  mode={mode}\n                  type={input._type}\n                  {...input}\n                  // value={(values && values[key]) || []}\n                  key={`modify-page-form-${name}`}\n              />\n          );\n        case 'search-select': {\n          return (\n            <InputSearchSelect\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        case 'tree-select': {\n          return (\n            <InputTreeSelect\n              className={defaultClassName}\n              name={key}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`master_header${key}`}\n            />\n          );\n        }\n        case 'tag': {\n          return (\n            <InputTag\n              className={defaultClassName}\n              name={name}\n              mode={mode}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        }\n        \n        case 'checkbox':\n          return (\n            <InputCheckBox\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          );\n        \n        case 'select':\n          return (\n            <InputSelect\n              className={defaultClassName}\n              name={name}\n              type={input._type}\n              {...input}\n              key={`modify-page-form-${name}`}\n            />\n          )\n        \n        case 'custom': {\n          const {_type, ...props} = input;\n          return (<InputCustom {...props} key={`modify-page-form-${name}`}/>);\n        }\n        default: {\n          const {_type, _subTitle, _className, _inputClassName, ...innt} = input as any;\n          return _className ? (\n              <span key={`render_form_span${name}`} className={_className}>\n            {_subTitle && _subTitle !== '' && (<div\n              className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n                <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                            prevKey={name}\n                            mode={mode}/>\n            </span>) :\n            (<Fragment key={`render_form${name}`}>\n              {_subTitle && _subTitle !== '' && (<div\n                className=\"modify-subtitle text-primary\">{intl.formatMessage({id: _subTitle}).toUpperCase()}</div>)}\n              <RenderForm inputs={innt} inputClassName={_inputClassName ?? inputClassName}\n                          prevKey={name}\n                          mode={mode}/>\n            </Fragment>)\n        }\n      }\n    })}</>)\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","import React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {useIntl} from 'react-intl';\nimport {iconStyle} from \"../common-consts/const\";\nimport {getField} from \"../helpers/common-function\";\nimport {RenderInfoDetail} from \"../common-types/common-type\";\nimport _ from \"lodash\";\nimport {getFieldV3} from \"./master-detail-page\";\n\nexport function MasterEntityDetailDialog({\n                                           title = 'COMMON_COMPONENT.DETAIL_DIALOG.HEADER_TITLE',\n                                           moduleName = 'COMMON_COMPONENT.DETAIL_DIALOG.MODULE_NAME',\n                                           show,\n                                           entity,\n                                           onHide,\n                                           renderInfo,\n                                           size = 'sm'\n                                         }: {\n  title?: string;\n  moduleName?: string;\n  show: boolean;\n  entity: any;\n  renderInfo: RenderInfoDetail;\n  onHide: () => void;\n  size?: 'sm' | 'lg' | 'xl';\n}) {\n  const intl = useIntl();\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-detail\"\n    >\n      <Modal.Header closeButton className=\"border-bottom-0\">\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      \n      <MasterEntityDetail entity={entity} renderInfo={renderInfo}/>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: 'COMMON_COMPONENT.DETAIL_DIALOG.CLOSE_BTN'})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function MasterEntityDetail({\n                                     entity,\n                                     renderInfo,\n                                   }: {\n  renderInfo: RenderInfoDetail;\n  entity: any;\n}) {\n  const intl = useIntl();\n  return entity ? (\n    <Modal.Body>\n      <div className={`row`}>\n        {renderInfo.map((value, index) => (\n          <div key={index} className={`${value.className ?? 'col-12'}`}>\n            {value.header && value.header !== '' && <p className=\"text-primary detail-dialog-subtitle\">\n              {intl.formatMessage({id: value.header})}\n            </p>}\n            {Object.keys(value.data).map((dataKey) => (\n              <div className={`detail-dialog-row-info row`} key={dataKey}>\n                {value.data[dataKey].title && value.data[dataKey].title !== '' &&\n                <div className={`${value.titleClassName ?? 'col-4'}`}>\n                  {intl.formatMessage({id: value.data[dataKey].title})}:\n                </div>}\n                <div className={`${value.dataClassName ?? 'col-8'}`}>\n                  {(() => {\n                    const displayInfo = value.data[dataKey];\n                    const fieldName = displayInfo.keyField ?? dataKey;\n                    const displayData = fieldName.indexOf(\"[\") > -1 ?\n                      getFieldV3(entity, fieldName) :\n                      getFieldV3(entity, fieldName)[0]\n                    return displayInfo.formatter ? displayInfo.formatter(displayData, entity)\n                      : (<>{(_.isNumber(displayData) || _.isString(displayData)) ? displayData : JSON.stringify(displayData)}</>)\n                  })()\n                  }\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Modal.Body>\n  ) : (\n    <></>\n  );\n}\n","import React, {Fragment, ReactElement, useMemo} from 'react';\nimport { Card, CardBody, CardHeader } from '../card';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useIntl } from 'react-intl';\nimport { iconStyle } from '../common-consts/const';\nimport { MasterTable } from './master-table';\nimport { MasterBodyColumns, PaginationProps } from '../common-types/common-type';\nimport _ from 'lodash';\n\nexport interface BasicUnitDataProps {\n  showModal: any;\n  hideModal: any;\n  show: any;\n  list: any[];\n  total: number;\n  loading: boolean;\n  queryParams: any;\n  setQueryParamsBase: any;\n  ids: any[];\n  setIds: any;\n  setQueryParams: any;\n}\n\nexport function MasterBody<T>({\n  entities,\n  total,\n  loading,\n  paginationParams,\n  setPaginationParams,\n  onSelectMany,\n  onCreate,\n  selectedEntities = [],\n  columns,\n  onDeleteMany,\n  isShowId,\n  title,\n  hideHeaderButton,\n    additionalActionComponent\n}: {\n  total: number;\n  loading: boolean;\n  onSelectMany?: (entities: T[]) => void;\n  onCreate?: () => void;\n  columns: MasterBodyColumns;\n  entities: T[];\n  selectedEntities?: T[];\n  paginationParams: PaginationProps;\n  setPaginationParams: (data: PaginationProps) => void;\n  additionalActionComponent?: (props: any) => ReactElement;\n  onDeleteMany?: () => void;\n  isShowId?: boolean;\n  title?: string;\n  hideHeaderButton?: boolean;\n}) {\n  const intl = useIntl();\n  const AdditionalActionComponent = additionalActionComponent;\n  const idColumn = useMemo(() => ({\n    dataField: '_id',\n    text: 'STT',\n    formatter: (cell: any, row: any, rowIndex: number) => (\n      <Fragment>\n        {rowIndex + 1 + ((paginationParams.page ?? 0) - 1) * (paginationParams.limit ?? 0)}\n      </Fragment>\n    ),\n    headerClasses: 'text-center',\n    align: 'center'\n  }), [paginationParams]);\n  const masterColumn = isShowId\n    ? _.isArray(columns)\n          ? [idColumn, ...columns]\n          : { _id: idColumn, ...columns }\n    : columns;\n\n  return (\n    <Card className={'master-body-card'}>\n      {title && <CardHeader title={intl.formatMessage({ id: title }).toUpperCase()} />}\n      <CardBody>\n        {hideHeaderButton !== true && (\n          <div className=\"row no-gutters mb-10\">\n            {onCreate && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary fixed-btn-width mr-8\"\n              onClick={onCreate}>\n              <AddIcon style={iconStyle} />\n              {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.ADD_BTN' })}\n            </button>\n            )}\n            {onDeleteMany && (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary fixed-btn-width\"\n                onClick={() => {\n                  onSelectMany && onSelectMany(selectedEntities);\n                  onDeleteMany();\n                }}>\n                <DeleteOutlineOutlinedIcon style={iconStyle} />\n                {intl.formatMessage({ id: 'COMMON_COMPONENT.MASTER_BODY.HEADER.DELETE_BTN' })}\n              </button>\n            )}\n            {AdditionalActionComponent && (<AdditionalActionComponent />)}\n          </div>\n        )}\n        <MasterTable\n          entities={entities}\n          columns={masterColumn}\n          total={total}\n          loading={loading}\n          paginationParams={paginationParams}\n          setPaginationParams={setPaginationParams}\n          onSelectMany={onSelectMany}\n          selectedEntities={selectedEntities}\n        />\n\n        {/* <MasterTreeStructure /> */}\n      </CardBody>\n    </Card>\n  );\n}\n","// please be familiar with react-bootstrap-table-next column formaters\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html?selectedKind=Work%20on%20Columns&selectedStory=Column%20Formatter&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook%2Factions%2Factions-panel\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport SVG from 'react-inlinesvg';\nimport Visibility from '@material-ui/icons/Visibility';\nimport './master-table.scss';\nimport {ToAbsoluteUrl} from '../helpers/assets-helpers';\nimport {ActionColumnProps} from '../common-types/common-type';\nimport {IntlShape} from 'react-intl';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport QueueOutlinedIcon from '@material-ui/icons/QueueOutlined';\nimport HistoryIcon from '@material-ui/icons/History';\n\nexport function ActionsColumnFormatter<T>(\n  cellContent: any,\n  row: any,\n  rowIndex: number,\n  {onShowDetail, onDelete, onEdit,onLock, onChangeRole, onClone, onGoHistory, intl}: ActionColumnProps<T> & { intl: IntlShape },\n) {\n  return (\n    <div>\n      {onLock && (<a\n        // to={`/purchase-order/${row.code}`}\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\"\n        onClick={(e) => {\n          onLock(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={ToAbsoluteUrl('/media/svg/vncheck/lock.svg')}\n            title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.LOCK_BTN'})}\n          />\n        </span>\n      </a>)}\n      {onClone &&  (<a\n        title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.CLONE_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility mx-1\"\n        onClick={(e) => {\n          onClone(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <QueueOutlinedIcon className=\"text-primary eye\"/>\n          </span>\n        </span>\n      </a>)}\n      {onShowDetail && (<a\n        title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.SHOW_DETAIL_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n        onClick={(e) => {\n          onShowDetail(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <Visibility className=\"text-primary eye\"/>\n        </span>\n      </a>)}\n      {onEdit && (<a\n        // to={`/purchase-order/${row.code}`}\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm mx-1\"\n        onClick={(e) => {\n          onEdit(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <SVG\n            src={ToAbsoluteUrl('/media/svg/icons/Communication/Write.svg')}\n            title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.EDIT_BTN'})}\n          />\n        </span>\n      </a>)}\n      {onDelete &&  (<a\n        // title={intl.formatMessage({id: 'COMMON_COMPONENT.MASTER_BODY.TABLE.DELETE_BTN'})}\n        className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility\"\n        onClick={(e) => {\n          onDelete(row);\n          e.preventDefault();\n        }}>\n        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <DeleteIcon className=\"text-primary eye\"/>\n          </span>\n        </span>\n      </a>)}\n      {\n        onGoHistory && (\n          <a\n          className=\"btn btn-icon btn-light btn-hover-primary btn-sm visibility mx-1\"\n          onClick={(e) => {\n            onGoHistory(row);\n            e.preventDefault();\n          }}>\n          <span className=\"svg-icon svg-icon-md svg-icon-primary\">\n            <HistoryIcon className=\"text-primary eye\" />\n          </span>\n        </a>\n        )\n      }\n    </div>\n  );\n}\n\nexport function TickColumnFormatter<T>(\n  cellContent: string | boolean,\n  row: any) {\n  return (cellContent === \"1\" || cellContent === \"true\" || cellContent === true) ? (\n    <CheckCircleIcon style={{color: '#1DBE2D'}}/>) : (<CheckCircleIcon style={{color: '#C4C4C4'}}/>)\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteOutlineOutlined');\n\nexports.default = _default;","import React, {useMemo} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport {useIntl} from 'react-intl';\nimport {DeleteDialogProps} from '../common-types/common-type';\nimport {iconStyle} from '../common-consts/const';\nimport {CapitalizeFirstLetter} from '../helpers/common-function';\nimport _ from \"lodash\";\n\nexport function DeleteEntityDialog<T>({\n                                        isShow,\n                                        entity,\n                                        onHide,\n                                        onDelete,\n                                        title = 'COMMON_COMPONENT.DELETE_DIALOG.TITLE',\n                                        bodyTitle = 'COMMON_COMPONENT.DELETE_DIALOG.BODY_TITLE',\n                                        confirmMessage = 'COMMON_COMPONENT.DELETE_DIALOG.CONFIRM',\n                                        deleteBtn = 'COMMON_COMPONENT.DELETE_DIALOG.DELETE_BTN',\n                                        deletingMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.DELETING',\n                                        cancelBtn = 'COMMON_COMPONENT.DELETE_DIALOG.CANCEL_BTN',\n                                        moduleName = 'COMMON_COMPONENT.DELETE_DIALOG.MODULE_NAME',\n                                        loading,\n                                        error = {error: ''},\n                                      }: DeleteDialogProps<T>) {\n  const intl = useIntl();\n  const _innerError = useMemo((): string | ({ message: string, additional: string }[]) => {\n    try {\n      return JSON.parse(error.error)\n    } catch (e) {\n      return error?.error\n    }\n  }, [error]);\n  return (<><Modal\n    show={isShow && (error.error === '')}\n    onHide={onHide}\n    aria-labelledby=\"example-modal-sizes-title-lg\"\n    dialogClassName=\"modal-delete\">\n    {/*{loading && <ModalProgressBar />}*/}\n    <Modal.Header className=\"border-bottom-0\" closeButton>\n      <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n        {intl\n          .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n          .toUpperCase()}\n      </Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {!loading && (\n        <>\n          {CapitalizeFirstLetter(\n            intl.formatMessage(\n              {id: bodyTitle},\n              {moduleName: intl.formatMessage({id: moduleName})},\n            ),\n          )}\n          {' ' + intl.formatMessage(\n            {id: confirmMessage},\n            {moduleName: intl.formatMessage({id: moduleName})},\n          )}\n        </>\n      )}\n      {loading && <span className={'ml-1'}>{intl.formatMessage({id: deletingMessage})}</span>}\n    </Modal.Body>\n    \n    <Modal.Footer className=\"border-top-0\">\n      <button type=\"button\" className=\"btn btn-primary mr-lg-8 fixed-btn-width\"\n              onClick={e => onDelete(entity)}>\n        {/*<DeleteIcon style={iconStyle}/>*/}\n        {loading ? (<div className=\"spinner spinner-sm spinner-darker-white\">\n          <span className={'ml-6'}>{intl.formatMessage({id: deleteBtn})}</span>\n        </div>) : intl.formatMessage({id: deleteBtn})}\n      </button>\n      <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n        <CancelOutlinedIcon style={iconStyle}/>\n        {intl.formatMessage({id: cancelBtn})}\n      </button>\n    </Modal.Footer>\n  </Modal>\n    <Modal\n      show={isShow && (error.error !== '')}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-delete\">\n      <Modal.Header className=\"border-bottom-0\" closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!loading && error.error !== '' && (\n          <>\n            {_.isString(_innerError) ?\n              (<p className='text-danger'>{intl.formatMessage({id: _innerError}, {additional: ''})}</p>)\n              : _innerError.map((e, index) => (\n                (<p key={`abc${index}`} className='text-danger'>{intl.formatMessage({id: e.message}, e)}</p>)\n              ))\n            }\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: cancelBtn})}\n        </button>\n      </Modal.Footer>\n    </Modal></>)\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'History');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H8V4h12v12zm-7-1h2v-4h4V9h-4V5h-2v4H9v2h4z\"\n}), 'QueueOutlined');\n\nexports.default = _default;","import React, {useMemo} from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {useIntl} from 'react-intl';\nimport {DeleteManyDialogProps} from '../common-types/common-type';\nimport {CapitalizeFirstLetter} from '../helpers/common-function';\nimport {iconStyle} from \"../common-consts/const\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport _ from \"lodash\";\n\nfunction DeleteManyEntitiesDialog<T>({\n                                       selectedEntities,\n                                       isShow,\n                                       onHide,\n                                       onDelete,\n                                       title = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.TITLE',\n                                       bodyTitle = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.BODY_TITLE',\n                                       confirmMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.CONFIRM',\n                                       noSelectedEntityMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.NO_SELECTED_ENTITY',\n                                       deletingMessage = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.DELETING',\n                                       deleteBtn = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.DELETE_BTN',\n                                       cancelBtn = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.CANCEL_BTN',\n                                       moduleName = 'COMMON_COMPONENT.DELETE_MANY_DIALOG.MODULE_NAME',\n                                       loading,\n                                       error = {error: ''},\n                                     }: DeleteManyDialogProps<T>) {\n  const intl = useIntl();\n  const _innerError = useMemo((): string | ({ message: string, additional: string }[]) => {\n    try {\n      return JSON.parse(error.error)\n    } catch (e) {\n      return error?.error\n    }\n  }, [error]);\n  return (<>\n    <Modal\n      show={isShow && (error.error === '')}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-delete-many\">\n      {/*begin::Loading*/}\n      {/*end::Loading*/}\n      <Modal.Header className=\"border-bottom-0\" closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {selectedEntities && selectedEntities.length > 0 ? (\n          !loading && (\n            <>\n              {CapitalizeFirstLetter(\n                intl.formatMessage(\n                  {id: bodyTitle},\n                  {moduleName: intl.formatMessage({id: moduleName})},\n                ),\n              )}\n              {' ' + intl.formatMessage(\n                {id: confirmMessage},\n                {moduleName: intl.formatMessage({id: moduleName})},\n              )}\n            </>\n          )\n        ) : (\n          <>\n            {intl.formatMessage(\n              {id: noSelectedEntityMessage},\n              {moduleName: intl.formatMessage({id: moduleName})},\n            )}\n          </>\n        )}\n        {loading && <span className={'ml-1'}>{intl.formatMessage({id: deletingMessage})}</span>}\n      </Modal.Body>\n      <Modal.Footer className=\"border-top-0\">\n        {selectedEntities && selectedEntities.length > 0 &&\n        <button type=\"button\" className=\"btn btn-primary mr-lg-8 fixed-btn-width\"\n                onClick={e => onDelete(selectedEntities)}>\n          {/*<DeleteIcon style={iconStyle}/>*/}\n          {loading ? (<div className=\"spinner spinner-sm spinner-darker-white\">\n            <span className={'ml-6'}>{intl.formatMessage({id: deleteBtn})}</span>\n          </div>) : intl.formatMessage({id: deleteBtn})}\n        </button>}\n        \n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: cancelBtn})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n    <Modal\n      show={isShow && (error.error !== '')}\n      onHide={onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n      dialogClassName=\"modal-delete-many\">\n      {/*begin::Loading*/}\n      {/*end::Loading*/}\n      <Modal.Header className=\"border-bottom-0\" closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\" className=\"text-primary\">\n          {intl\n            .formatMessage({id: title}, {moduleName: intl.formatMessage({id: moduleName})})\n            .toUpperCase()}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!loading && error.error !== '' && (\n          <>\n            {_.isString(_innerError) ?\n              (<p className='text-danger'>{intl.formatMessage({id: _innerError})}</p>)\n              : _innerError.map((e, index) => (\n                (<p key={`abc${index}`} className='text-danger'>{intl.formatMessage({id: e.message}, e)}</p>)\n              ))\n            }\n          </>\n        )}\n      </Modal.Body>\n      <Modal.Footer className=\"border-top-0\">\n        <button type=\"button\" onClick={onHide} className=\"btn btn-outline-primary fixed-btn-width\">\n          <CancelOutlinedIcon style={iconStyle}/>\n          {intl.formatMessage({id: cancelBtn})}\n        </button>\n      </Modal.Footer>\n    </Modal>\n  </>);\n}\n\nexport default DeleteManyEntitiesDialog;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.07 18.28c.43-.9 3.05-1.78 4.93-1.78s4.51.88 4.93 1.78C15.57 19.36 13.86 20 12 20s-3.57-.64-4.93-1.72zm11.29-1.45c-1.43-1.74-4.9-2.33-6.36-2.33s-4.93.59-6.36 2.33C4.62 15.49 4 13.82 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8c0 1.82-.62 3.49-1.64 4.83zM12 6c-1.94 0-3.5 1.56-3.5 3.5S10.06 13 12 13s3.5-1.56 3.5-3.5S13.94 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z\"\n}), 'AccountCircleOutlined');\n\nexports.default = _default;","import React from 'react';\nimport { Card, CardBody } from '../../common-library/card';\nimport { TextareaAutosize } from '@material-ui/core';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { AxiosResponse } from 'axios';\nimport _ from 'lodash';\n\nconst notifyError = (error: string) => {\n  toast.error(error, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nconst PostComments = ({\n                                  entity,\n                                  onComments,\n                                }: {\n  entity?: any;\n  onComments?: (entity: any, data: { content: string }) => Promise<AxiosResponse<any>>;\n}) => {\n  const valueRef = React.useRef<any>({ value: '' });\n  const [commentsArr, setCommentArr] = React.useState(entity?.comments || []);\n\n  React.useEffect(() => {\n    if (entity) {\n      setCommentArr(entity.comments)\n    }\n  }, [entity])\n\n  const handleComment = (entity: any, comment: any) => {\n    if (onComments && entity) {\n      onComments(entity, comment)\n          .then(res => {\n            setCommentArr(res.data);\n            // setComment({ content: '' });\n            valueRef.current.value = '';\n          })\n          .catch(err => {\n            throw err;\n          });\n    }\n  };\n\n  return (\n      <Card>\n        <CardBody>\n          <div className=\"pl-xl-15 pl-md-10 pl-5 mb-5\">\n            <span className=\"modify-subtitle text-primary mt-8\">COMMENTS</span>\n            <div className=\"mt-8 border border-light rounded pt-5 pb-5\">\n              {//entityForEdit.comments\n                // [\n                //   {\n                //     fullName: 'Đầu khấc',\n                //     content:\n                //       'Kế hoạch như tốt mai cho nghỉ việc..........vsdgkdfhkdfoihnsoirnhiosgboisdnbiodrgiosehuigheubguiwebguwebiugwebfiuwebfiuwebguiebgierdnhiordnhoifdnhidofjhpọhpotfjpofk',\n                //   },\n                //   {\n                //     fullName: 'Đầu khấc',\n                //     content:\n                //       'Kế hoạch như tốt mai cho nghỉ việc..........vsdgkdfhkdfoihnsoirnhiosgboisdnbiodrgiosehuigheubguiwebguwebiugwebfiuwebfiuwebguiebgierdnhiordnhoifdnhidofjhpọhpotfjpofk',\n                //   },\n                // ]\n                commentsArr?.map(\n                    (\n                        value: { createdBy: { _id: string; fullName: string }; content: string },\n                        key: number,\n                    ) => (\n                        <div key={key} className=\"row mb-3\">\n                          <div className=\"col-1 text-center\">\n                            <AccountCircleOutlinedIcon style={{ fontSize: 30 }} />\n                          </div>\n                          <div className=\"col-10 bg-light rounded p-3\">\n                            <p className=\"font-bold\">\n                              {_.isString(value.createdBy)\n                                  ? value.createdBy\n                                  : value.createdBy.fullName\n                                      ? value.createdBy.fullName\n                                      : 'Anonymous'}\n                            </p>\n                            <p>{value.content}</p>\n                          </div>\n                        </div>\n                    ),\n                )}\n              <div className=\"row\">\n                <div className=\"col-1\"></div>\n                <div className=\"col-10\">\n                  <div className=\"row\">\n                    <div className=\"col-11\">\n                      <TextareaAutosize\n                          className=\"form-control\"\n                          rowsMin={1}\n                          aria-label=\"empty textarea\"\n                          ref={valueRef}\n                          placeholder=\"Write comment...\"\n                      />\n                    </div>\n                    <div className=\"col-1\">\n                      <button\n                          className=\"btn btn-primary pl-11 pr-11\"\n                          onClick={() => {\n                            if (valueRef.current.value !== '') {\n                              handleComment(entity, { content: valueRef.current.value });\n                            } else {\n                              notifyError('Comment is empty!');\n                            }\n                          }}>\n                        Sent\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n  );\n};\n\nexport default PostComments;\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport {Form, Formik} from 'formik';\nimport {Link, useHistory} from 'react-router-dom';\nimport {Card, CardBody, CardHeader} from '../card';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {ModifyForm} from '../common-types/common-type';\nimport _ from 'lodash';\nimport {ModifyEntityPage} from './modify-entity-page';\nimport {GetHomePage, InitValues} from \"../helpers/common-function\";\nimport {Spinner} from \"react-bootstrap\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport PostComments from \"../../pages/post/post-comments\";\nimport {AxiosResponse} from \"axios\";\n\nfunction EntityCrudPage({\n                          entity,\n                          onModify,\n                          moduleName = 'COMMON_COMPONENT.CREATE_UPDATE.MODULE_NAME',\n                          code,\n                          get,\n                          formModel,\n                          actions,\n                          validation,\n                          loading,\n                          mode,\n                          setEditEntity,\n                          homePageUrl,\n                            allFormButton,\n                            onComments,\n                            showComment = true\n                        }: {\n  // modifyModel: ModifyModel;\n  moduleName?: string;\n  entity?: any;\n  onModify: (values: any) => Promise<any>;\n  code?: string;\n  get?: (code: string) => any;\n  formModel: ModifyForm;\n  mode?: 'horizontal' | 'vertical';\n  actions?: any;\n  validation?: any;\n  autoFill?: any;\n  loading?: boolean;\n  setEditEntity?: (entity: any) => void;\n  homePageUrl?: string\n    allFormButton?: any;\n    onComments?: (entity: any, data: { content: string }) => Promise<AxiosResponse<any>>;\n    showComment?: boolean;\n}) {\n  const intl = useIntl();\n  const history = useHistory();\n  const initValues = useMemo(() => InitValues(formModel), [formModel]);\n\n  const [entityForEdit, setEntityForEdit] = useState(entity);\n  useEffect(()=>{\n    entity && setEntityForEdit(entity);\n  }, [entity])\n\n  useEffect(() => {\n    if (!code && !entity) setEntityForEdit(initValues);\n  }, [initValues, code]);\n  const {_header, ...modifyPanels} = formModel;\n  \n  useEffect(() => {\n    if (code) {\n      get &&\n      get(code).then((res: { data: any }) => {\n        setEntityForEdit({...res.data});\n        if (setEditEntity) { setEditEntity(res.data) }\n      });\n    }\n  }, [code]);\n\n  console.log(entityForEdit)\n  \n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={entityForEdit}\n        validationSchema={validation}\n        onSubmit={(values, {setSubmitting, validateForm}) => {\n          console.log(values)\n          onModify(values).then(() => {\n            history.push(homePageUrl ?? GetHomePage(window.location.pathname))\n          }).catch((err) => {\n            // setSubmitting(false);\n          });\n        }}>\n        {({handleSubmit, setFieldValue}) => (\n          <>\n            <Form className=\"form form-label-right\">\n              {Object.keys(modifyPanels).map((key, index, keys) => {\n                const val = modifyPanels[key];\n                if (_.isString(val))\n                  throw new Error('Sử dụng sai cách ' + key + '\\n' + JSON.stringify(modifyPanels));\n                const {_title, ...panel} = val;\n                return (\n                  <Card key={`entity-crud-card` + key} className={'modify-page'}>\n                    <CardHeader\n                      className={'border-bottom-0'}\n                      title={\n                        index == 0 ? (\n                          <a\n                            onClick={() => history.goBack()}\n                            className={'cursor-pointer text-primary font-weight-boldest'}>\n                            <ArrowBackIosIcon/>\n                            {_.isString(_header) ? intl\n                              .formatMessage(\n                                {id: _header},\n                                {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n                              )\n                              .toUpperCase() : _header(entityForEdit)}\n                          </a>\n                        ) : (\n                          <>\n                            {intl\n                              .formatMessage(\n                                {id: _title},\n                                {moduleName: intl.formatMessage({id: moduleName ?? 'EMPTY'})},\n                              )\n                              .toUpperCase()}\n                          </>\n                        )\n                      }\n                    />\n                    <CardBody>\n                      <ModifyEntityPage\n                        mode={mode}\n                        // className={formPart[key].className}\n                        // images={images}\n                        inputGroups={panel}\n                      />\n                    {allFormButton && allFormButton.type === 'outside' && (\n                        <div className=\"text-right mt-10\">\n                            {Object.keys(allFormButton.data).map(keyss => {\n                                switch (allFormButton['data'][keyss].role) {\n                                    case 'submit':\n                                        return (\n                                            <button\n                                                type={allFormButton['data'][keyss].type}\n                                                onClick={() => {\n                                                    // handleSubmit();\n                                                    allFormButton['data'][keyss].onClick();\n                                                }}\n                                                className={allFormButton['data'][keyss].className}\n                                                key={keyss}>\n                                                {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                            </button>\n                                        );\n\n                                    case 'special':\n                                        return (\n                                            <button\n                                                type={allFormButton['data'][keyss].type}\n                                                onClick={() => {\n                                                    // handleSubmit();\n                                                    allFormButton['data'][keyss].onClick(entityForEdit);\n                                                }}\n                                                className={allFormButton['data'][keyss].className}\n                                                key={keyss}>\n                                                {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                            </button>\n                                        );\n                                    case 'button':\n                                        return (\n                                            <button\n                                                type={allFormButton['data'][keyss].type}\n                                                className={allFormButton['data'][keyss].className}\n                                                key={keyss}\n                                                onClick={() => {\n                                                    allFormButton['data'][keyss].onClick(entityForEdit);\n                                                }}>\n                                                {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                            </button>\n                                        );\n                                    case 'link-button':\n                                        return (\n                                            <Link to={allFormButton['data'][keyss].linkto} key={keyss}>\n                                                <button\n                                                    type={allFormButton['data'][keyss].type}\n                                                    className={allFormButton['data'][keyss].className}>\n                                                    {allFormButton['data'][keyss].icon} {allFormButton['data'][keyss].label}\n                                                </button>\n                                            </Link>\n                                        );\n                                }\n                            })}\n                        </div>\n                    )}\n                      {(actions && index === Object.keys(modifyPanels).length - 1) && (\n                        <div className=\"text-right mt-10\" key={key}>\n                          {Object.keys(actions.data).map(keyss => {\n                            switch (actions.data[keyss].role) {\n                              case 'submit':\n                                return (\n                                  <button\n                                    className={actions.data[keyss].className}\n                                    key={keyss}\n                                    type={'submit'}\n                                  >\n                                    {loading === true ? actions.data[keyss].loading ?? (\n                                      <Spinner animation=\"border\" variant=\"light\"\n                                               size=\"sm\"/>) : actions.data[keyss].icon} {intl.formatMessage({id: actions.data[keyss].label})}\n                                  </button>\n                                );\n                              \n                              case 'button':\n                                return (\n                                  <button\n                                    type={actions.data[keyss].type}\n                                    className={actions.data[keyss].className}\n                                    key={keyss}>\n                                    {actions.data[keyss].icon} {intl.formatMessage({id: actions.data[keyss].label})}\n                                  </button>\n                                );\n                              case 'link-button':\n                                return (\n                                  <Link to={actions.data[keyss].linkto} key={keyss}>\n                                    <button\n                                      type={actions.data[keyss].type}\n                                      className={actions.data[keyss].className}>\n                                      {actions.data[keyss].icon} {intl.formatMessage({id: actions.data[keyss].label})}\n                                    </button>\n                                  </Link>\n                                );\n                            }\n                          })}\n                        </div>)\n                      }\n                    </CardBody>\n                  </Card>\n                );\n              })}\n\n            </Form>\n              {showComment !== true || !onComments ? <></> : (entityForEdit?.confirmationStatus === '3'\n                  || (entityForEdit?.isMaster === true && entityForEdit?.confirmationStatus === '2')) ? (\n                  <Card>\n                      <CardBody className={'p-0'}>\n                          <div className=\"mb-5 mt-5\">\n                              <span className=\"text-primary detail-dialog-subtitle mt-8\">BÌNH LUẬN</span>\n                              <div className=\"mt-8 border border-light rounded pt-5 pb-5\">\n                                  {entityForEdit && entityForEdit.comments.length > 0 ? (\n                                      entityForEdit.comments.map(\n                                          (\n                                              value: { createdBy: { _id: string; fullName: string }; content: string },\n                                              key: number,\n                                          ) => (\n                                              <div key={key} className=\"row mb-3\">\n                                                  <div className=\"col-1 text-center\">\n                                                      <AccountCircleOutlinedIcon style={{ fontSize: 30 }} />\n                                                  </div>\n                                                  <div className=\"col-10 bg-light rounded p-3\">\n                                                      <p className=\"font-bold\">{value.createdBy.fullName}</p>\n                                                      <p>{value.content}</p>\n                                                  </div>\n                                              </div>\n                                          ),\n                                      )\n                                  ) : (\n                                      <span>Chưa có bình luận</span>\n                                  )}\n                              </div>\n                          </div>\n                      </CardBody>\n                  </Card>\n              ) : (\n                  <PostComments entity={entityForEdit} onComments={onComments} />\n              )}\n          </>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default EntityCrudPage;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import axios from 'axios';\nimport {API_BASE_URL} from '../../common-library/common-consts/enviroment';\nimport {\n  CountProps,\n  CreateProps,\n  DeleteManyProps,\n  DeleteProps,\n  GetAllPropsServer,\n  GetProps,\n  UpdateProps,\n} from '../../common-library/common-types/common-type';\nimport {SpeciesModel} from './species.model';\n\nexport const API_URL = API_BASE_URL + '/species';\n\nexport const BULK_API_URL = API_URL + '/bulk'\n\nexport const API_FILE_URL = API_BASE_URL + '/file';\n\nexport const Create: CreateProps<SpeciesModel> = (data: SpeciesModel) => {\n  return axios.post(API_URL, data);\n};\n\nexport const GetAll: GetAllPropsServer<SpeciesModel> = ({\n                                                          queryProps,\n                                                          sortList,\n                                                          paginationProps,\n                                                        }) => {\n  return axios.get(`${API_URL}`, {\n    params: {...queryProps, ...paginationProps, sortList},\n    // paramsSerializer: ParamsSerializer\n  });\n};\n\nexport const Count: CountProps<SpeciesModel> = ({\n                                                  queryProps,\n                                                  sortList,\n                                                  paginationProps,\n                                                }) => {\n  return axios.get(`${API_URL}/count`, {\n    params: {...queryProps, ...paginationProps, sortList},\n  });\n};\n\nexport const Get: GetProps<SpeciesModel> = entity => {\n  return axios.get(`${API_URL}/${entity._id}`);\n};\n\nexport const GetById = (_id: string) => {\n  return axios.get(`${API_URL}/${_id}`);\n};\nexport const Update: UpdateProps<SpeciesModel> = (entity: SpeciesModel) => {\n  return axios.put(`${API_URL}/${entity._id}`, entity);\n};\n\nexport const Delete: DeleteProps<any> = (entity: SpeciesModel) => {\n  return axios.delete(`${API_URL}/${entity._id}`);\n};\n\nexport const DeleteMany: DeleteManyProps<SpeciesModel> = (entities: SpeciesModel[]) => {\n  return axios.delete(BULK_API_URL, {\n    data: {listSpecies: entities},\n  });\n};\n\nexport const uploadImage = (image: any) => {\n  console.log('run updload');\n  console.log(image);\n  let formData = new FormData();\n  formData.append('image', image);\n  return axios({\n    method: 'POST',\n    url: API_FILE_URL,\n    data: formData,\n  });\n};\n","import React, {Fragment, useEffect, useMemo} from 'react';\nimport {useIntl} from 'react-intl';\nimport {DefaultPagination, NormalColumn, SortColumn,} from '../../common-library/common-consts/const';\nimport {MasterHeader} from '../../common-library/common-components/master-header';\nimport {MasterBody} from '../../common-library/common-components/master-body';\nimport {ActionsColumnFormatter} from '../../common-library/common-components/actions-column-formatter';\nimport {DeleteEntityDialog} from '../../common-library/common-components/delete-entity-dialog';\nimport DeleteManyEntitiesDialog from '../../common-library/common-components/delete-many-entities-dialog';\nimport {InitMasterProps, InitValues,} from '../../common-library/helpers/common-function';\nimport {Route, Switch, useHistory} from 'react-router-dom';\nimport EntityCrudPage from '../../common-library/common-components/entity-crud-page';\nimport SaveOutlinedIcon from '@material-ui/icons/SaveOutlined';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport * as Yup from 'yup';\nimport {SpeciesModel} from './species.model';\nimport * as ProductTypeService from './species.service';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {MasterEntityDetailDialog} from '../../common-library/common-components/master-entity-detail-dialog';\nimport {\n  ModifyForm,\n  ModifyInputGroup,\n  RenderInfoDetail,\n  SearchModel,\n} from '../../common-library/common-types/common-type';\nimport {Spinner} from 'react-bootstrap';\nimport {DetailImage} from \"../../common-library/common-components/detail/detail-image\";\n\nconst headerTitle = 'PRODUCT_TYPE.MASTER.HEADER.TITLE';\nconst bodyTitle = 'PRODUCT_TYPE.MASTER.BODY.TITLE';\nconst moduleName = 'PRODUCT_TYPE.MODULE_NAME';\nconst deleteDialogTitle = 'PRODUCT_TYPE.DELETE_DIALOG.TITLE';\nconst createTitle = 'PRODUCT_TYPE.CREATE.TITLE';\nconst updateTitle = 'PRODUCT_TYPE.UPDATE.TITLE';\n\nconst standardizeamedName = (name: string) => {\n  let sName = name.trim();\n  sName.toLowerCase();\n  sName = sName.replace(/\\s+/g, \" \");\n  return sName.toLowerCase().replace(/(^|\\s)\\S/g, function (l) {\n    return l.toUpperCase();\n  });\n}\n\nfunction Species() {\n  const intl = useIntl();\n  \n  const history = useHistory();\n  const {\n    entities,\n    deleteEntity,\n    setDeleteEntity,\n    editEntity,\n    setEditEntity,\n    setCreateEntity,\n    selectedEntities,\n    setSelectedEntities,\n    detailEntity,\n    setDetailEntity,\n    showDelete,\n    setShowDelete,\n    showDetail,\n    setShowDetail,\n    showDeleteMany,\n    setShowDeleteMany,\n    paginationProps,\n    setPaginationProps,\n    filterProps,\n    setFilterProps,\n    total,\n    loading,\n    error,\n    add,\n    update,\n    get,\n    deleteMany,\n    deleteFn,\n    getAll,\n  } = InitMasterProps<SpeciesModel>({\n    getServer: ProductTypeService.Get,\n    countServer: ProductTypeService.Count,\n    createServer: ProductTypeService.Create,\n    deleteServer: ProductTypeService.Delete,\n    deleteManyServer: ProductTypeService.DeleteMany,\n    getAllServer: ProductTypeService.GetAll,\n    updateServer: ProductTypeService.Update,\n  });\n\n  const [trigger, setTrigger] = React.useState(false)\n\n  useEffect(() => {\n    getAll(filterProps);\n  }, [paginationProps, filterProps, trigger]);\n  \n  const columns = {\n    code: {\n      dataField: 'code',\n      text: `${intl.formatMessage({id: 'PRODUCT_TYPE.MASTER.TABLE.CODE_COLUMN'})}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    name: {\n      dataField: 'name',\n      text: `${intl.formatMessage({id: 'PRODUCT_TYPE.MASTER.TABLE.NAME_COLUMN'})}`,\n      ...SortColumn,\n      classes: 'text-center',\n    },\n    \n    barcode: {\n      dataField: 'barcode',\n      text: `${intl.formatMessage({id: 'PRODUCT_TYPE.MASTER.TABLE.BARCODE_COLUMN'})}`,\n      ...SortColumn,\n      classes: 'text-center',\n      headerClasses: 'text-center',\n    },\n    action: {\n      dataField: 'action',\n      text: `${intl.formatMessage({id: 'PURCHASE_ORDER.MASTER.TABLE.ACTION_COLUMN'})}`,\n      formatter: ActionsColumnFormatter,\n      formatExtraData: {\n        intl,\n        onShowDetail: (entity: SpeciesModel) => {\n          get(entity);\n          setShowDetail(true);\n          setDetailEntity(entity);\n        },\n        onDelete: (entity: SpeciesModel) => {\n          setDeleteEntity(entity);\n          setShowDelete(true);\n        },\n        onEdit: (entity: SpeciesModel) => {\n          get(entity);\n          // setShowEdit(true);\n          setEditEntity(entity);\n          history.push(`${window.location.pathname}/${entity._id}`);\n        },\n      },\n      ...NormalColumn,\n      style: {minWidth: '130px'},\n    },\n  };\n\n  console.log(editEntity)\n  \n  const schema = Yup.object().shape({\n    name: Yup.string().test('Exists validate', 'SPECIES_NAME_WAS_EXISTED', function (value) {\n      console.log(editEntity)\n        if (editEntity) {\n          const validArr = entities.filter(item => item._id !== editEntity._id);\n          const index = validArr.findIndex(el => el.name === value);\n          return index === -1;\n        }\n      \n        const index = entities.findIndex(el => el.name === value);\n        return index === -1;\n      }),\n    barcode: Yup.string()\n      .max(13, 'MAX_13_CHARACTERS')\n      .min(8, 'MIN_CHARACTERS')\n      .matches(/^[0-9]+$/u, {\n        message: '\"GTIN_IS_INVALID',\n      })\n      .test('Exists validate', 'GTIN_WAS_EXISTED', function (value) {\n        if (editEntity) {\n          const validArr = entities.filter(item => item._id !== editEntity._id);\n          const index = validArr.findIndex(el => el.barcode === value);\n          return index === -1;\n        }\n        const index = entities.findIndex(el => el.barcode === value);\n        return index === -1;\n      }),\n    growingDays: Yup.number()\n      .min(1, 'DAYS_MUST_BE_MORE_THAN_1')\n      .typeError('INPUT_NUMBER'),\n    plantingDays: Yup.number()\n      .min(1, 'DAYS_MUST_BE_MORE_THAN_1')\n      .typeError('INPUT_NUMBER'),\n    expiryDays: Yup.number()\n      .min(1, 'DAYS_MUST_BE_MORE_THAN_1')\n      .typeError('INPUT_NUMBER'),\n  });\n  \n  const masterEntityDetailDialog: RenderInfoDetail = [\n    {\n      data: {\n        image: {\n          formatter: (data, values) => (<DetailImage width={'270px'} height={'270px'} images={data} values={values}/>),\n        },\n      },\n      className: 'col-lg-6 col-md-12 d-flex justify-content-right align-items-center mr-5 ml-5',\n      dataClassName: 'd-flex',\n    },\n    {\n      data: {\n        code: {title: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.CODE'},\n        name: {title: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.NAME'},\n        barcode: {title: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.BARCODE'},\n        growingDays: {title: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.GROW'},\n        plantingDays: {title: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.PLANTING'},\n        expiryDays: {title: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.EXPIRY'},\n      },\n      dataClassName: 'col-lg-5 col-md-8',\n      titleClassName: 'col-lg-7 col-md-4',\n      className: 'col-lg-5 col-md-12',\n    },\n  ];\n  \n  const productTypeSearchModel: SearchModel = {\n    code: {\n      type: 'string',\n      label: 'PRODUCT_TYPE.MASTER.TABLE.CODE_COLUMN',\n    },\n    name: {\n      type: 'string',\n      label: 'PRODUCT_TYPE.MASTER.TABLE.NAME_COLUMN',\n    },\n  };\n  \n  const group1 = useMemo((): ModifyInputGroup => ({\n    _subTitle: 'THÔNG TIN CHUNG',\n    _className: 'col-6 pr-xl-15 pr-md-10 pr-5',\n    code: {\n      _type: 'string',\n      label: 'PRODUCT_TYPE.MASTER.TABLE.CODE_COLUMN',\n      required: false,\n      disabled: true,\n    },\n    name: {\n      _type: 'string',\n      required: true,\n      label: 'PRODUCT_TYPE.MASTER.TABLE.NAME_COLUMN',\n    },\n    barcode: {\n      _type: 'string-number',\n      required: true,\n      label: 'PRODUCT_TYPE.MASTER.TABLE.BARCODE_COLUMN',\n    },\n    image: {\n      _type: 'image',\n      isArray: false,\n      label: 'PRODUCT_TYPE.MASTER.IMAGE',\n      maxNumber: 1,\n    },\n    // avatar: {\n    //   type: 'image',\n    //   placeholder: 'PURCHASE_ORDER.MASTER.HEADER.CODE.LABEL',\n    //   label: 'Album 2',\n    // },\n  }), []);\n  const group2 = useMemo((): ModifyInputGroup => ({\n    _subTitle: 'THÔNG TIN VÒNG ĐỜI',\n    _className: 'col-6 pl-xl-15 pl-md-10 pl-5',\n    growingDays: {\n      _type: 'number',\n      label: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.GROW',\n      required: true,\n    },\n    plantingDays: {\n      _type: 'number',\n      label: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.PLANTING',\n      required: true,\n    },\n    expiryDays: {\n      _type: 'number',\n      label: 'PRODUCT_TYPE.MASTER.DETAIL_DIALOG.EXPIRY',\n      required: true,\n    },\n  }), [entities, selectedEntities, setSelectedEntities]);\n  \n  const createForm = useMemo(\n    (): ModifyForm => ({\n      _header: createTitle,\n      panel1: {\n        _title: '',\n        group1: group1,\n        group2: group2,\n      },\n    }),\n    [group1, group2],\n  );\n  const updateForm = useMemo((): ModifyForm => ({...createForm, _header: updateTitle}), [createForm]);\n  \n  \n  const allFormButton: any = {\n    type: 'inside',\n    data: {\n      save: {\n        role: 'submit',\n        type: 'submit',\n        linkto: undefined,\n        className: 'btn btn-primary mr-5 pl-8 pr-8',\n        label: 'SAVE_BTN_LABEL',\n        icon: <SaveOutlinedIcon/>,\n        loading: <Spinner animation=\"border\" variant=\"light\" size=\"sm\"/>\n      },\n      cancel: {\n        role: 'link-button',\n        type: 'button',\n        linkto: '/species',\n        className: 'btn btn-outline-primary mr-2 pl-8 pr-8',\n        label: 'CANCEL_BTN_LABEL',\n        icon: <CancelOutlinedIcon/>,\n        loading: <Spinner animation=\"border\" variant=\"success\" size=\"sm\"/>\n      },\n    },\n  };\n  const initValues = useMemo(() =>( {\n    ...InitValues(createForm), code: undefined\n  }), [createForm]);\n  \n  return (\n    <Fragment>\n      <MasterEntityDetailDialog\n        show={showDetail}\n        entity={detailEntity}\n        renderInfo={masterEntityDetailDialog}\n        onHide={() => {\n          setShowDetail(false);\n        }}\n        moduleName={moduleName}\n        size={'lg'}\n      />\n      <DeleteEntityDialog\n        moduleName={moduleName}\n        entity={deleteEntity}\n        onDelete={deleteFn}\n        isShow={showDelete}\n        loading={loading}\n        error={error}\n        onHide={() => {\n          setShowDelete(false);\n        }}\n        title={deleteDialogTitle}\n      />\n      <DeleteManyEntitiesDialog\n        moduleName={moduleName}\n        selectedEntities={selectedEntities}\n        loading={loading}\n        isShow={showDeleteMany}\n        onDelete={deleteMany}\n        error={error}\n        onHide={() => {\n          setShowDeleteMany(false);\n          setTrigger(!trigger)\n        }}\n      />\n      \n      <Switch>\n        <Route path=\"/species/new\">\n          <EntityCrudPage\n            entity={initValues}\n            onModify={(values: SpeciesModel) => {\n              if (values.name) {\n                values.name = standardizeamedName(values.name)\n              }\n              return add(values)\n            }}\n            get={() => null}\n            formModel={createForm}\n            actions={allFormButton}\n            validation={schema}\n            loading={loading}\n            \n          />\n        </Route>\n        <Route path={`/species/:code`}>\n          {({match}) => (\n            <EntityCrudPage\n              onModify={(values: SpeciesModel) => {\n                if (values.name) {\n                  values.name = standardizeamedName(values.name)\n                }\n                return update(values)\n              }}\n              code={match?.params.code}\n              get={ProductTypeService.GetById}\n              formModel={updateForm}\n              actions={allFormButton}\n              validation={schema}\n              loading={loading}\n              setEditEntity={setEditEntity}\n            />\n          )}\n        </Route>\n        <Route path=\"/species\">\n          <MasterHeader\n            title={headerTitle}\n            onSearch={value => {\n              setPaginationProps(DefaultPagination);\n              setFilterProps(value);\n            }}\n            searchModel={productTypeSearchModel}\n          />\n          <MasterBody\n            title={bodyTitle}\n            onCreate={() => {\n              setCreateEntity(null);\n              setEditEntity(null);\n              // setShowCreate(true);\n              history.push(`${window.location.pathname}/new`);\n            }}\n            onDeleteMany={() => setShowDeleteMany(true)}\n            selectedEntities={selectedEntities}\n            onSelectMany={setSelectedEntities}\n            entities={entities}\n            total={total}\n            columns={columns as any}\n            loading={loading}\n            paginationParams={paginationProps}\n            setPaginationParams={setPaginationProps}\n            isShowId={true}\n          />\n          \n          {/* <MasterTreeStructure /> */}\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default Species;\n"],"sourceRoot":""}